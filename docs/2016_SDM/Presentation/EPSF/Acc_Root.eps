%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: Acc_Root.pdf
%%Creator: (Adobe Acrobat 11.0.7)
%%For: qwang2
%%CreationDate: 12/31/15, 11:01 AM
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%CropBox: 0 0 576 432
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 565 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2015-12-11T14:24:16-06:00"
   xmp:CreatorTool="matplotlib 1.4.2, http://matplotlib.org"
   pdf:Producer="matplotlib pdf backend"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
576 432 li
576 0 li
cp
clp
gsave
0 432 mo
576 432 li
576 0 li
0 0 li
cp
clp
0 432 mo
576 432 li
576 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
72.0089 385.324 mo
72.1875 378.419 li
72.5714 372.523 li
73.0803 367.05 li
73.0981 367.435 li
73.1071 367.524 li
73.2856 365.375 li
73.3213 365.685 li
73.3303 365.577 li
73.4642 363.912 li
73.482 364.098 li
73.5088 364.295 li
73.5178 364.171 li
73.6874 362.188 li
73.6963 362.193 li
73.741 362.597 li
73.7677 362.234 li
73.9552 360.248 li
73.982 360.047 li
73.9999 360.158 li
74.0624 360.537 li
74.0713 360.375 li
74.1427 358.623 li
74.2052 359.246 li
74.2231 359.453 li
74.2409 359.254 li
74.3748 357.225 li
74.4106 357.879 li
74.4284 358.018 li
74.4373 357.943 li
74.607 355.498 li
74.6427 356.104 li
74.732 356.481 li
74.7498 356.176 li
74.8837 353.595 li
74.9284 354.211 li
74.9373 354.254 li
74.9462 354.234 li
74.9641 354.111 li
74.9819 354.191 li
75.0266 354.777 li
75.0534 354.347 li
75.1962 351.306 li
75.2587 351.851 li
75.2676 351.955 li
75.2766 351.877 li
75.3034 351.51 li
75.3212 351.685 li
75.3926 352.702 li
75.4284 351.808 li
75.7051 348.369 li
75.7408 348.909 li
75.8123 349.916 li
75.8747 349.218 li
75.9105 349.45 li
75.9283 349.258 li
75.9997 348.197 li
76.1604 345.816 li
76.2051 344.586 li
76.2944 345.383 li
76.3212 345.947 li
76.3301 346.086 li
76.3479 346.005 li
76.4104 345.435 li
76.4283 345.77 li
76.5176 346.414 li
76.5443 346.029 li
76.5711 345.613 li
76.7408 342.93 li
76.7676 342.751 li
76.955 340.6 li
76.9908 341.025 li
77.0175 340.704 li
77.0711 340.204 li
77.1157 340.688 li
77.2407 342.084 li
77.2497 341.896 li
77.3568 340.311 li
77.3836 341.07 li
77.3925 341.186 li
77.4104 341.121 li
77.5711 338.771 li
77.7228 336.184 li
77.7318 336.232 li
77.7407 336.285 li
77.7496 336.232 li
77.9282 333.123 li
77.9996 333.67 li
78.1693 334.987 li
78.1871 334.94 li
78.2764 333.84 li
78.3389 334.466 li
78.3746 335.013 li
78.3924 335.745 li
78.4817 335.095 li
78.5085 335.188 li
78.5174 335.139 li
78.5353 335.064 li
78.5532 335.181 li
78.8924 330.69 li
78.9192 330.547 li
79.1335 325.546 li
79.187 326.174 li
79.2049 326.03 li
79.3656 324.691 li
79.3745 324.573 li
79.3835 324.64 li
79.4013 324.924 li
79.4192 324.668 li
79.5442 322.411 li
79.6424 323.237 li
79.8031 324.799 li
79.8566 324.493 li
79.8834 324.909 li
79.9191 325.71 li
79.9816 325.094 li
80.1156 323.526 li
80.1245 323.573 li
80.1602 323.873 li
80.187 323.604 li
80.1959 323.541 li
80.2584 324.652 li
80.3298 324.016 li
80.3477 323.6 li
80.3923 323.829 li
80.4459 324.228 li
80.4637 324.006 li
80.4816 323.676 li
80.4905 323.794 li
80.5084 324.092 li
80.5173 323.91 li
80.7584 318.092 li
80.7762 318.317 li
80.803 318.761 li
80.8387 318.385 li
81.0084 315.99 li
81.0173 316.022 li
81.0351 316.128 li
81.0441 316.064 li
81.2583 313.007 li
81.4458 308.868 li
81.4637 309.222 li
81.4726 309.255 li
81.5976 307.416 li
81.6601 308.01 li
81.678 308.15 li
81.6869 308.069 li
81.7494 307.093 li
81.8119 307.373 li
81.919 308.509 li
81.9547 308.164 li
82.2672 304.633 li
82.3029 305.062 li
82.4011 305.635 li
82.4368 305.601 li
82.4993 304.963 li
82.6065 305.217 li
82.7315 308.417 li
82.8118 307.647 li
82.8654 307.729 li
82.8832 307.653 li
83.2136 304.376 li
83.2314 304.708 li
83.3028 305.382 li
83.3296 304.899 li
83.4993 302.397 li
83.535 303.044 li
83.5618 303.323 li
83.5796 303.21 li
83.6064 302.586 li
83.6868 303.045 li
83.7314 303.506 li
83.8028 303.147 li
83.8653 302.805 li
83.8832 303.014 li
83.901 303.204 li
83.9189 303.074 li
83.9725 301.861 li
84.151 297.602 li
84.1599 297.593 li
84.1867 297.702 li
84.1956 297.655 li
84.4188 294.093 li
84.7849 287.553 li
84.8295 287.234 li
84.8563 287.458 li
84.9545 288.873 li
85.0081 288.154 li
85.0795 286.982 li
85.2759 283.249 li
85.2849 283.271 li
85.2938 283.303 li
85.3027 283.267 li
85.7134 277.644 li
85.7491 277.628 li
86.1509 270.522 li
86.1598 270.511 li
86.3562 272.4 li
86.383 272.199 li
86.5705 271.178 li
86.6062 271.766 li
86.6955 272.879 li
86.7223 272.01 li
86.874 269.974 li
86.9008 270.282 li
86.9276 270.026 li
87.0258 269.192 li
87.0526 269.677 li
87.0705 269.921 li
87.0972 269.742 li
87.1419 269.429 li
87.1687 269.74 li
87.2312 270.5 li
87.2937 269.91 li
87.3026 269.919 li
87.4812 266.396 li
87.5615 265.166 li
87.6151 265.477 li
87.6329 265.592 li
87.6597 265.478 li
87.6776 265.359 li
87.6865 265.408 li
87.7133 265.797 li
87.7222 265.606 li
87.8293 263.793 li
87.874 264.103 li
87.9276 263.278 li
87.9901 263.855 li
88.1061 264.727 li
88.1418 264.549 li
88.1597 264.592 li
88.4722 267.449 li
88.5614 266.516 li
88.6596 264.36 li
88.7132 265.478 li
88.9543 267.338 li
88.9721 266.973 li
89.0882 266.301 li
89.0971 266.372 li
89.1328 267.108 li
89.1953 266.482 li
89.2489 265.67 li
89.3203 266.009 li
89.3382 266.143 li
89.3471 266.085 li
89.9542 256.44 li
90.0346 255.599 li
90.0703 256.106 li
90.1328 257.05 li
90.2042 256.428 li
90.2488 256.178 li
90.2756 256.378 li
90.347 256.78 li
90.3738 256.409 li
90.4095 255.682 li
90.4363 256.37 li
90.4542 256.636 li
90.4631 256.52 li
90.6149 254.336 li
90.6417 254.433 li
90.6595 254.411 li
90.6684 254.446 li
90.6952 254.745 li
90.7577 254.537 li
91.0077 252.154 li
91.0434 252.464 li
91.0524 252.338 li
91.0881 251.636 li
91.1684 252.019 li
91.2309 252.289 li
91.2398 252.157 li
91.4452 248.306 li
91.4541 248.333 li
91.6148 249.343 li
91.713 248.937 li
91.722 248.839 li
91.7309 248.864 li
91.8648 249.806 li
91.8827 249.616 li
92.463 237.317 li
92.6951 232.962 li
92.704 232.917 li
92.713 232.943 li
92.7397 233.083 li
92.7665 232.943 li
92.8737 231.688 li
93.0701 226.664 li
93.0969 226.999 li
93.1683 225.893 li
93.3558 222.336 li
93.4451 223.687 li
93.4718 224.098 li
93.4897 223.785 li
93.6683 222.108 li
93.6772 222.144 li
93.695 222.192 li
93.7575 220.632 li
94.1772 214.256 li
94.2932 212.57 li
94.4807 209.375 li
94.57 210.201 li
94.6325 211.748 li
94.6861 210.697 li
94.7396 210.116 li
94.7664 209.906 li
94.7843 210.089 li
94.8914 211.199 li
94.9539 210.651 li
94.9896 210.438 li
94.9985 210.528 li
95.0164 210.746 li
95.0253 210.69 li
95.2932 207.037 li
95.3735 206.383 li
95.436 205.454 li
95.4985 205.943 li
95.5253 205.62 li
95.6503 205.108 li
95.686 205.883 li
95.7485 205.253 li
96.0877 196.788 li
96.1681 197.488 li
96.2127 197.161 li
96.7306 187.588 li
97.0341 185.192 li
97.0698 185.737 li
97.0966 186.107 li
97.1323 185.739 li
97.168 184.912 li
97.2662 184.985 li
97.3019 184.918 li
97.3377 185.024 li
97.3644 185.368 li
97.3823 185.061 li
97.5876 182.029 li
97.668 180.463 li
97.8823 174.929 li
97.9001 175.081 li
98.034 176.133 li
98.0519 176.04 li
98.3465 172.83 li
98.3912 173.228 li
98.409 173.274 li
98.418 173.231 li
98.659 170.862 li
98.6679 170.852 li
98.6769 170.877 li
98.6858 170.892 li
98.7483 170.371 li
98.8197 169.373 li
98.909 169.418 li
98.9268 169.537 li
98.9626 170.143 li
98.9893 169.566 li
99.0697 168.017 li
99.1322 168.537 li
99.1768 168.843 li
99.2036 168.657 li
99.2304 168.378 li
99.2483 168.628 li
99.284 169.118 li
99.3108 168.741 li
99.4536 167.514 li
99.4804 167.879 li
99.6589 170.456 li
99.7125 169.557 li
99.7393 169.231 li
99.7661 169.452 li
99.8554 170.036 li
99.8821 169.665 li
99.8911 169.57 li
99.9089 169.637 li
99.9982 171.001 li
100.195 175.114 li
100.23 174.881 li
100.239 174.984 li
100.275 175.516 li
100.355 175.263 li
100.48 174.095 li
100.561 171.499 li
100.668 171.806 li
100.829 169.679 li
100.855 169.371 li
100.882 169.632 li
100.891 169.688 li
100.9 169.647 li
100.954 168.682 li
101.025 169.291 li
101.034 169.306 li
101.043 169.288 li
101.195 168.639 li
101.328 166.728 li
101.346 166.928 li
101.436 168.383 li
101.471 167.567 li
101.614 166.61 li
101.828 164.839 li
101.864 165.262 li
102.016 166.129 li
102.105 165.586 li
102.266 163.128 li
102.302 163.456 li
102.319 163.577 li
102.364 163.477 li
102.453 162.127 li
102.498 163 li
102.668 164.314 li
102.686 164.488 li
102.703 164.343 li
103.016 159.783 li
103.034 159.827 li
103.096 160.345 li
103.186 160.013 li
103.355 158.336 li
103.462 160.425 li
103.659 162.039 li
103.677 161.792 li
103.784 161.006 li
103.81 161.246 li
103.828 161.353 li
103.837 161.305 li
104.06 159.649 li
104.069 159.723 li
104.123 160.767 li
104.185 159.858 li
104.462 153.953 li
104.748 151.8 li
104.757 151.877 li
104.801 152.236 li
104.837 151.916 li
105.007 150.107 li
105.051 149.993 li
105.221 147.199 li
105.257 147.268 li
105.275 147.254 li
105.284 147.277 li
105.328 148.394 li
105.426 150.122 li
105.462 149.837 li
105.48 149.751 li
105.489 149.802 li
105.587 150.51 li
105.632 150.177 li
105.855 151.257 li
105.891 151.845 li
105.935 151.294 li
106.069 150.555 li
106.096 150.613 li
106.114 150.609 li
106.194 151.503 li
106.239 150.75 li
106.266 150.489 li
106.292 150.66 li
106.534 155.015 li
106.667 157.172 li
106.685 157.033 li
106.73 155.987 li
106.81 156.433 li
106.864 157.28 li
106.944 157.111 li
106.962 156.961 li
106.971 156.999 li
107.069 157.86 li
107.132 157.777 li
107.185 157.944 li
107.257 158.527 li
107.292 158.01 li
107.373 156.718 li
107.435 157.188 li
107.471 157.481 li
107.56 157.392 li
107.596 157.554 li
107.623 157.423 li
107.703 156.005 li
107.721 155.8 li
107.739 155.943 li
108.176 162.786 li
108.185 162.741 li
108.283 161.67 li
108.337 162.107 li
108.435 162.924 li
108.516 162.49 li
108.542 162.37 li
108.56 162.456 li
108.694 162.971 li
108.721 162.822 li
108.73 162.783 li
108.739 162.81 li
108.899 164.377 li
108.953 163.737 li
109.051 162.462 li
109.105 162.677 li
109.114 162.712 li
109.123 162.695 li
109.194 162.554 li
109.23 162.645 li
109.328 163.621 li
109.364 162.894 li
109.649 157.874 li
109.685 158.237 li
109.703 158 li
109.783 155.428 li
109.873 156.09 li
109.89 156.022 li
110.006 157.617 li
110.131 157.16 li
110.149 157.118 li
110.185 157.153 li
110.283 158.077 li
110.381 158.406 li
110.444 158.385 li
110.462 158.378 li
110.578 159.369 li
110.587 159.448 li
110.596 159.443 li
110.774 157.115 li
110.837 157.87 li
111.122 160.329 li
111.194 159.602 li
111.283 157.948 li
111.417 158.503 li
111.435 158.602 li
111.444 158.568 li
111.515 157.626 li
111.551 158.429 li
111.587 159.045 li
111.622 158.465 li
111.676 157.493 li
111.721 158.304 li
111.989 163.104 li
112.042 163.066 li
112.069 163.103 li
112.078 163.081 li
112.194 162.378 li
112.23 162.6 li
112.337 163.007 li
112.355 162.851 li
112.578 161.071 li
112.605 161.278 li
112.649 161.557 li
112.721 161.367 li
112.765 160.671 li
113.024 155.886 li
113.051 155.665 li
113.069 155.84 li
113.078 155.917 li
113.087 155.869 li
113.265 154.25 li
113.292 154.592 li
113.346 155.631 li
113.408 154.999 li
113.56 152.622 li
113.613 152.903 li
113.631 152.939 li
113.64 152.929 li
113.676 152.094 li
113.747 150.053 li
113.81 150.536 li
113.846 150.821 li
113.863 150.63 li
114.221 145.123 li
114.229 145.106 li
114.256 145.346 li
114.274 145.173 li
114.301 144.879 li
114.328 145.135 li
114.595 147.32 li
114.649 147.023 li
114.783 146.477 li
114.801 146.651 li
114.944 147.196 li
114.979 147.404 li
114.997 147.268 li
115.319 142.909 li
115.328 142.89 li
115.381 143.848 li
115.462 143.205 li
115.631 141.155 li
115.694 141.815 li
115.72 141.957 li
115.738 141.88 li
115.908 139.329 li
116.024 136.139 li
116.069 136.444 li
116.104 136.295 li
116.283 132.749 li
116.435 132.977 li
116.444 132.932 li
116.453 132.962 li
116.604 133.738 li
116.613 133.705 li
116.81 132.284 li
116.908 132.08 li
116.944 131.632 li
116.97 131.993 li
117.176 133.98 li
117.292 135.37 li
117.31 135.591 li
117.327 135.43 li
117.461 134.952 li
117.694 132.359 li
117.774 133.287 li
117.783 133.31 li
117.81 133.161 li
117.899 133.226 li
117.943 133.599 li
117.997 133.345 li
118.256 130.519 li
118.265 130.546 li
118.354 132.465 li
118.542 134.609 li
118.56 134.57 li
118.631 134.409 li
118.676 133.605 li
118.711 134.339 li
118.899 139.018 li
118.952 138.497 li
118.988 138.164 li
119.015 138.381 li
119.176 140.229 li
119.202 140.061 li
119.211 140.006 li
119.229 140.048 li
119.247 140.087 li
119.256 140.051 li
119.452 139.136 li
119.461 139.168 li
119.524 139.6 li
119.559 139.286 li
119.595 138.996 li
119.613 139.164 li
119.729 139.922 li
119.756 139.803 li
119.774 139.72 li
119.783 139.749 li
120.238 145.137 li
120.309 144.492 li
120.318 144.459 li
120.327 144.488 li
120.39 144.94 li
120.434 144.661 li
120.631 142.55 li
120.64 142.577 li
120.649 142.611 li
120.658 142.602 li
120.738 141.168 li
120.917 141.277 li
120.97 141.746 li
121.122 142.893 li
121.149 142.555 li
121.193 141.829 li
121.247 142.507 li
121.256 142.579 li
121.274 142.511 li
121.408 139.47 li
121.577 137.515 li
121.702 135.536 li
121.756 136.691 li
121.899 138.234 li
121.925 137.792 li
122.14 133.079 li
122.175 133.194 li
122.202 133.119 li
122.211 133.16 li
122.282 134.154 li
122.3 134.348 li
122.309 134.258 li
122.399 133.224 li
122.461 133.364 li
122.604 132.477 li
122.622 132.604 li
122.711 133.179 li
122.756 132.992 li
122.774 133.022 li
122.791 132.976 li
122.809 132.907 li
122.818 132.916 li
123.166 135.579 li
123.193 135.304 li
123.202 135.296 li
123.506 138.757 li
123.631 139.334 li
123.648 139.32 li
123.747 139.965 li
123.818 141.111 li
123.89 140.513 li
123.916 140.378 li
123.934 140.45 li
124.041 141.594 li
124.086 141.154 li
124.256 139.906 li
124.265 139.969 li
124.327 140.368 li
124.363 139.971 li
124.407 139.275 li
124.541 137.806 li
124.55 137.825 li
124.568 137.887 li
124.577 137.86 li
124.791 135.281 li
124.845 134.413 li
124.898 135.188 li
124.934 135.68 li
124.97 135.199 li
125.086 133.971 li
125.122 134.46 li
125.139 134.583 li
125.157 134.471 li
125.166 134.431 li
125.175 134.466 li
125.8 142.022 li
125.827 141.609 li
126.077 136.311 li
126.157 135.496 li
126.202 135.986 li
126.398 138.124 li
126.541 139.242 li
126.577 138.708 li
126.711 138.046 li
126.72 138.062 li
126.818 139.052 li
126.871 138.56 li
126.925 137.866 li
126.988 138.472 li
127.05 138.925 li
127.104 138.568 li
127.139 138.829 li
127.22 138.595 li
127.264 138.07 li
127.291 138.493 li
127.434 139.41 li
127.443 139.379 li
127.532 138.084 li
127.595 138.764 li
127.675 139.446 li
127.72 139.091 li
127.818 138.842 li
127.836 138.913 li
127.854 138.994 li
127.862 138.946 li
127.907 138.426 li
127.943 138.839 li
128.05 139.886 li
128.086 139.372 li
128.22 138.25 li
128.246 138.564 li
128.318 139.917 li
128.398 139.648 li
128.505 139.44 li
128.523 139.488 li
128.532 139.504 li
128.541 139.493 li
128.612 138.758 li
128.675 139.187 li
128.746 140.466 li
128.845 140.135 li
128.996 138.815 li
129.023 139.275 li
129.095 140.133 li
129.139 139.521 li
129.166 139.862 li
129.273 140.917 li
129.309 140.598 li
129.425 138.934 li
129.478 139.466 li
129.702 141.144 li
129.728 140.937 li
129.755 140.758 li
129.773 140.889 li
129.782 140.947 li
129.791 140.944 li
129.996 138.594 li
130.041 139.607 li
130.211 141.346 li
130.237 141.277 li
130.255 141.337 li
130.273 141.394 li
130.282 141.361 li
130.309 141.247 li
130.318 141.313 li
130.353 141.792 li
130.398 141.332 li
130.648 138.821 li
130.693 139.515 li
130.818 141.724 li
130.889 141.191 li
130.925 141.417 li
131.086 142.809 li
131.103 142.875 li
131.112 142.854 li
131.228 140.815 li
131.416 139.068 li
131.532 139.606 li
131.585 139.233 li
131.63 138.772 li
131.657 139.208 li
131.978 144.398 li
132.014 144.212 li
132.041 144.046 li
132.059 144.21 li
132.13 145.132 li
132.228 144.965 li
132.398 142.554 li
132.603 139.917 li
132.648 138.859 li
132.96 131.091 li
133.675 122.201 li
133.692 122.237 li
133.719 122.317 li
133.728 122.295 li
133.88 120.198 li
133.978 118.956 li
134.014 119.174 li
134.023 119.209 li
134.032 119.193 li
134.094 118.657 li
134.148 119.057 li
134.228 120.039 li
134.264 119.337 li
134.451 117.027 li
134.487 117.168 li
134.505 117.068 li
134.675 115.965 li
134.71 116.166 li
134.755 116.513 li
134.916 117.625 li
134.933 117.577 li
135.201 114.269 li
135.255 115.001 li
135.344 116.018 li
135.389 115.489 li
135.416 115.29 li
135.433 115.447 li
135.63 116.853 li
135.657 117.05 li
135.683 116.849 li
135.701 116.786 li
135.71 116.83 li
135.737 116.935 li
135.746 116.88 li
135.996 114.295 li
136.041 114.359 li
136.067 114.47 li
136.273 116.71 li
136.308 116.392 li
136.389 115.711 li
136.424 116.092 li
136.549 117.649 li
136.585 117.401 li
136.907 114.528 li
136.915 114.524 li
136.924 114.547 li
137.353 118.033 li
137.398 117.497 li
137.433 117.156 li
137.451 117.363 li
137.612 120.06 li
137.657 119.355 li
137.915 116.38 li
137.942 116.584 li
138.103 117.2 li
138.156 117.495 li
138.183 117.607 li
138.201 117.521 li
138.237 117.32 li
138.255 117.431 li
138.478 119.095 li
138.63 120.229 li
138.719 123.263 li
138.764 123.935 li
138.808 123.309 li
138.915 123.026 li
138.933 123.073 li
139.005 122.934 li
139.165 121.719 li
139.237 122.238 li
139.255 122.425 li
139.272 122.331 li
139.335 121.516 li
139.415 121.741 li
139.531 121.34 li
139.549 121.473 li
139.612 122.219 li
139.656 121.476 li
139.817 120.637 li
139.862 120.417 li
139.88 120.552 li
140.362 127.97 li
140.38 127.894 li
140.406 127.763 li
140.442 127.899 li
140.558 128.888 li
140.638 129.938 li
140.701 129.452 li
140.728 129.737 li
140.897 130.939 li
141.022 132.878 li
141.138 132.296 li
141.237 130.607 li
141.379 128.606 li
141.406 128.859 li
141.504 129.828 li
141.531 129.559 li
141.585 128.577 li
141.647 129.121 li
141.826 130.422 li
141.835 130.455 li
141.844 130.452 li
141.888 130.102 li
141.96 130.401 li
142.121 131.986 li
142.174 131.568 li
142.192 131.516 li
142.201 131.541 li
142.272 132.257 li
142.326 131.743 li
142.424 131.353 li
142.451 131.535 li
142.647 135.958 li
142.862 139.728 li
142.897 139.511 li
142.915 139.641 li
143.031 142.198 li
143.085 142.927 li
143.147 142.457 li
143.183 142.484 li
143.192 142.549 li
143.531 145.295 li
143.567 145.397 li
143.585 145.324 li
143.629 145.1 li
143.665 145.281 li
144.165 151.664 li
144.183 151.46 li
144.344 148.877 li
144.379 148.919 li
144.469 149.149 li
144.54 149.558 li
144.576 149.183 li
144.692 147.312 li
144.745 147.83 li
144.808 148.163 li
144.87 148.013 li
144.933 148.376 li
144.96 148.48 li
144.977 148.417 li
145.094 147.737 li
145.183 147.798 li
145.227 147.974 li
145.656 152.248 li
145.665 152.26 li
145.718 151.783 li
145.754 152.21 li
145.781 152.451 li
145.79 152.355 li
145.96 149.836 li
145.986 150.059 li
146.192 152.376 li
146.236 152.093 li
146.308 151.482 li
146.352 151.9 li
146.683 157.293 li
146.71 157.273 li
146.79 157.888 li
147.54 171.129 li
147.62 169.804 li
147.736 169.386 li
147.763 169.591 li
148.924 185.402 li
148.977 184.925 li
148.986 184.879 li
148.995 184.893 li
149.084 186.735 li
149.504 194.566 li
149.575 195.232 li
149.638 194.729 li
149.745 193.732 li
149.87 192.532 li
149.915 193.016 li
150.031 194.544 li
150.075 194.129 li
150.182 193.305 li
150.218 193.546 li
150.245 193.722 li
150.29 193.55 li
150.397 192.84 li
150.45 193.355 li
150.897 197.269 li
151.013 198.979 li
151.057 198.845 li
151.111 198.322 li
151.156 198.803 li
151.174 198.971 li
151.191 198.888 li
151.245 198.235 li
151.29 198.808 li
151.352 200.082 li
151.415 199.172 li
151.504 199.054 li
151.522 199.113 li
151.647 200.019 li
151.977 206.327 li
152.022 205.674 li
152.12 205.021 li
152.156 205.223 li
152.227 205.782 li
152.307 205.72 li
152.37 205.129 li
152.432 205.672 li
152.504 205.987 li
152.539 206.105 li
152.575 205.997 li
152.888 203.309 li
152.932 203.796 li
152.986 204.26 li
153.057 203.951 li
153.093 203.416 li
153.164 202.268 li
153.227 202.601 li
153.245 202.555 li
153.316 201.849 li
153.352 202.392 li
153.423 204.073 li
153.495 203.809 li
153.522 203.642 li
153.548 203.76 li
154.004 209.618 li
154.084 210.367 li
154.12 209.936 li
154.263 207.734 li
154.316 208.102 li
154.379 208.463 li
154.593 210.385 li
154.682 212.135 li
154.896 215.262 li
155.486 223.036 li
155.513 222.88 li
155.548 222.588 li
155.575 222.768 li
156.111 229.238 li
156.298 230.056 li
156.468 232.219 li
156.486 232.178 li
156.557 231.302 li
156.709 228.734 li
156.825 229.017 li
157.209 233.998 li
157.548 239.012 li
157.584 238.485 li
157.611 238.17 li
157.655 238.474 li
157.977 243.619 li
158.021 243.163 li
158.039 243.055 li
158.057 243.125 li
158.334 245.703 li
158.557 248.881 li
158.593 249.135 li
158.861 252.166 li
158.905 251.953 li
158.923 252.126 li
159.235 259.233 li
159.396 260.505 li
160.11 271.865 li
160.414 282.179 li
160.584 283.693 li
160.619 283.598 li
160.637 283.708 li
161.021 288.258 li
161.11 287.981 li
161.155 287.798 li
161.182 287.95 li
161.217 288.237 li
161.244 287.994 li
161.262 287.892 li
161.271 287.938 li
161.512 289.564 li
161.521 289.571 li
161.53 289.55 li
161.575 289.339 li
161.601 289.507 li
161.842 293.696 li
161.896 294.636 li
161.95 293.709 li
161.967 293.65 li
161.976 293.683 li
162.003 293.765 li
162.021 293.701 li
162.119 293.177 li
162.173 293.484 li
162.378 295.231 li
162.45 296.475 li
162.708 300.823 li
162.735 300.62 li
162.798 299.775 li
162.851 300.399 li
162.958 302.44 li
163.039 301.967 li
163.191 303.114 li
163.244 303.672 li
163.307 303.228 li
163.351 302.636 li
163.441 302.848 li
163.467 302.722 li
163.476 302.77 li
163.682 305.94 li
163.958 311.475 li
164.039 311.409 li
164.235 313.156 li
164.369 314.574 li
164.414 314.153 li
164.432 314.065 li
164.449 314.128 li
164.494 314.537 li
164.557 314.299 li
164.601 313.778 li
164.664 314.224 li
164.905 316.075 li
164.914 316.07 li
164.976 315.395 li
165.083 313.278 li
165.208 313.693 li
165.226 313.581 li
165.244 313.663 li
165.458 315.863 li
165.503 315.789 li
165.548 316.425 li
166.012 323.863 li
166.021 323.878 li
166.03 323.868 li
166.074 323.757 li
166.101 323.885 li
166.378 328.307 li
166.699 332.137 li
166.949 336.868 li
167.226 342.708 li
167.262 342.676 li
167.297 342.525 li
167.333 342.301 li
167.36 342.474 li
167.396 342.808 li
167.431 342.537 li
167.53 341.873 li
167.574 342.185 li
167.762 343.624 li
167.771 343.574 li
167.806 343.156 li
167.833 343.418 li
167.896 344.187 li
167.949 343.697 li
168.003 343.084 li
168.056 343.643 li
168.431 349.501 li
168.476 349.168 li
168.574 347.687 li
168.628 348.626 li
168.806 350.953 li
168.922 349.615 li
169.003 350.341 li
169.271 353.155 li
169.288 353.094 li
169.333 352.818 li
169.422 352.878 li
169.476 353.186 li
169.503 352.972 li
169.896 347.584 li
169.922 347.609 li
169.967 347.216 li
170.074 346.635 li
170.101 346.913 li
170.172 347.47 li
170.217 347.225 li
170.262 347.008 li
170.288 347.178 li
170.404 347.752 li
170.431 347.559 li
170.494 346.572 li
170.574 346.922 li
170.637 346.555 li
170.69 346.909 li
170.708 346.96 li
170.726 346.902 li
170.753 346.791 li
170.779 346.87 li
170.842 347.655 li
171.012 349.813 li
171.145 351.257 li
171.217 350.731 li
171.476 348.787 li
171.494 348.859 li
171.538 349.332 li
171.574 348.968 li
171.619 348.389 li
171.654 348.829 li
171.753 350.647 li
171.824 350.324 li
171.949 348.5 li
171.994 347.948 li
172.038 348.449 li
172.431 352.55 li
172.449 352.597 li
172.458 352.582 li
172.503 352.296 li
172.556 352.59 li
172.627 353.683 li
172.681 352.968 li
172.851 351.689 li
173.011 349.317 li
173.36 345.647 li
173.52 344.034 li
173.601 344.685 li
173.61 344.713 li
173.618 344.708 li
173.735 343.664 li
174.065 340.276 li
174.36 336.204 li
174.413 335.91 li
174.431 335.793 li
174.449 335.868 li
174.511 336.514 li
174.592 336.322 li
174.601 336.311 li
174.609 336.325 li
174.797 337.646 li
174.886 339.123 li
174.949 338.588 li
175.118 337.411 li
175.145 337.265 li
175.172 337.381 li
175.199 337.535 li
175.217 337.455 li
175.404 336.051 li
175.431 336.191 li
175.538 337.752 li
175.672 340.058 li
175.708 339.461 li
175.967 334.543 li
176.109 335.241 li
176.19 334.871 li
176.645 330.585 li
176.717 330.982 li
176.752 330.686 li
176.859 329.721 li
176.895 330.014 li
176.966 330.951 li
177.02 330.283 li
177.038 330.217 li
177.047 330.252 li
177.583 335.093 li
177.618 335.571 li
177.708 335.457 li
177.833 335.581 li
177.922 336.862 li
177.975 336.238 li
178.145 335.536 li
178.243 334.952 li
178.279 335.259 li
178.332 335.757 li
178.368 335.268 li
178.529 333.691 li
178.538 333.719 li
179.002 337.884 li
179.19 341.086 li
179.225 340.757 li
179.297 339.829 li
179.35 340.377 li
179.484 341.598 li
179.529 341.391 li
179.725 338.742 li
179.886 336.899 li
179.913 337.068 li
180.225 341.482 li
180.27 341.213 li
180.297 340.963 li
180.314 341.138 li
180.35 341.721 li
180.377 341.343 li
180.52 338.411 li
180.573 338.767 li
180.582 338.789 li
180.591 338.776 li
181.109 336.061 li
181.341 333.498 li
181.43 333.227 li
181.636 330.132 li
181.698 330.17 li
182.163 324.783 li
182.297 322.65 li
182.395 321.295 li
182.457 321.432 li
182.502 321.278 li
182.698 319.173 li
182.752 318.549 li
182.823 318.877 li
182.832 318.891 li
182.877 318.452 li
182.948 318.003 li
182.984 318.331 li
183.091 318.943 li
183.118 318.798 li
183.243 316.814 li
183.332 317.835 li
183.493 319.604 li
183.564 319.213 li
183.609 319.51 li
183.636 319.295 li
183.68 318.966 li
183.716 319.272 li
183.743 319.437 li
183.779 319.275 li
183.814 319.138 li
183.832 319.218 li
184.136 322.352 li
184.189 321.582 li
184.296 319.485 li
184.359 319.635 li
184.457 319.258 li
184.645 318.579 li
184.671 318.667 li
184.689 318.723 li
184.698 318.711 li
184.761 317.637 li
184.984 311.426 li
185.18 307.476 li
185.207 307.617 li
185.234 307.753 li
185.252 307.659 li
185.439 306.711 li
185.484 307.638 li
185.609 309.738 li
185.653 309.553 li
185.725 308.87 li
185.805 308.989 li
185.823 308.996 li
185.832 308.969 li
186.225 305.686 li
186.332 304.217 li
186.386 304.447 li
186.421 304.679 li
186.448 304.52 li
186.716 301.193 li
186.796 301.472 li
186.877 301.79 li
186.912 301.589 li
187.332 297.64 li
187.421 298.128 li
187.439 298.173 li
187.448 298.153 li
187.618 296.594 li
187.787 294.351 li
187.859 294.486 li
187.957 294.215 li
187.993 294.269 li
188.055 294.201 li
188.457 289.27 li
188.537 289.462 li
188.564 289.573 li
188.635 290.351 li
188.689 289.843 li
188.975 285.123 li
189.001 285.247 li
189.037 285.44 li
189.064 285.273 li
189.225 284.76 li
189.662 280.23 li
189.769 277.962 li
189.832 278.522 li
189.912 279.546 li
189.984 279.026 li
190.055 278.468 li
190.43 273.645 li
190.698 270.219 li
190.716 270.267 li
190.778 270.82 li
190.832 270.383 li
190.841 270.345 li
190.85 270.364 li
190.939 271.493 li
191.01 270.901 li
191.162 268.609 li
191.278 267.471 li
191.314 267.516 li
191.358 267.113 li
191.51 263.309 li
191.823 259.04 li
191.849 258.929 li
191.867 258.995 li
191.894 259.158 li
191.921 259.03 li
191.948 258.85 li
191.974 258.992 li
192.117 259.82 li
192.144 259.687 li
192.349 258.161 li
192.367 258.215 li
192.394 258.318 li
192.403 258.282 li
192.474 257.369 li
192.564 257.784 li
192.626 257.071 li
192.867 249.89 li
193.135 243.723 li
193.376 238.525 li
193.769 229.936 li
193.796 229.99 li
193.823 229.869 li
194.162 225.197 li
194.269 223.213 li
194.331 223.598 li
194.43 223.804 li
194.456 223.703 li
194.662 222.514 li
194.689 222.6 li
194.831 223.624 li
194.876 223.323 li
195.171 219.943 li
195.206 220.106 li
195.439 222.175 li
195.483 222.067 li
195.787 220.816 li
195.903 219.825 li
195.947 220.085 li
196.046 220.416 li
196.072 220.306 li
196.251 218.43 li
196.287 218.787 li
196.537 221.575 li
196.555 221.611 li
196.563 221.598 li
196.671 220.644 li
196.742 219.531 li
196.813 219.774 li
196.885 218.932 li
197.019 217.286 li
197.081 217.872 li
197.135 218.26 li
197.179 217.896 li
197.233 217.264 li
197.269 217.751 li
197.313 218.328 li
197.376 217.791 li
197.421 217.681 li
197.447 217.806 li
197.537 218.569 li
197.59 218.246 li
197.635 218.056 li
197.662 218.239 li
197.849 220.445 li
197.894 220.006 li
198.278 215.367 li
198.349 214.884 li
198.42 215.127 li
198.456 215.04 li
198.492 214.913 li
198.528 215.041 li
198.545 215.058 li
198.554 215.039 li
198.626 214.585 li
198.67 214.919 li
198.813 215.92 li
198.831 215.827 li
198.956 214.981 li
198.992 215.359 li
199.161 216.669 li
199.188 216.718 li
199.215 216.665 li
199.26 216.419 li
199.286 216.56 li
199.367 217.338 li
199.411 216.8 li
199.724 210.938 li
199.76 211.067 li
199.956 211.757 li
199.974 211.702 li
200.081 210.624 li
200.144 210.443 li
200.197 210.57 li
200.215 210.583 li
200.233 210.551 li
200.251 210.524 li
200.269 210.563 li
200.322 210.898 li
200.358 210.553 li
200.385 210.353 li
200.411 210.511 li
200.581 211.142 li
200.635 211.177 li
200.652 211.112 li
200.697 210.886 li
200.751 211.095 li
200.894 213.086 li
200.956 213.853 li
201.019 213.497 li
201.054 213.321 li
201.09 213.492 li
201.108 213.534 li
201.117 213.507 li
201.17 213.114 li
201.215 213.509 li
201.233 213.55 li
201.242 213.513 li
201.322 212.136 li
201.572 208.149 li
201.59 208.184 li
201.635 208.333 li
201.652 208.246 li
201.697 207.837 li
201.742 208.162 li
201.813 209.03 li
201.858 208.474 li
202.001 205.374 li
202.054 205.855 li
202.063 205.866 li
202.126 204.999 li
202.268 204.523 li
202.751 201.953 li
202.777 202.001 li
202.849 203.288 li
203.072 205.412 li
203.126 205.69 li
203.358 207.649 li
203.384 207.363 li
203.617 204.36 li
203.626 204.389 li
203.947 206.671 li
203.983 206.427 li
204.197 203.877 li
204.25 204.725 li
204.304 205.502 li
204.367 204.988 li
204.438 204.01 li
204.545 204.047 li
204.599 203.695 li
205.188 194.825 li
205.286 194.122 li
205.402 192.895 li
205.465 193.1 li
205.5 192.941 li
205.518 193.044 li
205.625 194.799 li
205.733 194.669 li
205.884 192.274 li
206.09 190.688 li
206.116 190.763 li
206.125 190.775 li
206.134 190.769 li
206.25 190.421 li
206.286 190.654 li
206.366 191.772 li
206.42 191.179 li
206.652 188.691 li
206.67 188.702 li
206.688 188.764 li
206.786 189.799 li
206.849 189.101 li
206.911 188.282 li
206.956 188.981 li
207.09 190.392 li
207.125 190.339 li
207.134 190.332 li
207.143 190.348 li
207.197 191.122 li
207.357 193.933 li
207.438 193.831 li
207.822 196.345 li
207.831 196.341 li
207.875 195.944 li
208.161 192.225 li
208.197 192.514 li
208.402 194.023 li
208.411 194.038 li
208.42 194.026 li
208.509 193.602 li
208.563 193.849 li
208.616 194.088 li
208.652 193.865 li
208.929 190.988 li
209.009 191.635 li
209.089 192.624 li
209.152 192.356 li
209.188 192.174 li
209.214 192.3 li
209.241 192.504 li
209.268 192.31 li
209.33 191.521 li
209.393 191.985 li
209.527 193.562 li
209.58 192.919 li
209.661 192.084 li
209.705 192.54 li
209.768 193.174 li
209.813 192.605 li
210.063 189.505 li
210.188 188.398 li
210.714 179.428 li
210.875 179.677 li
210.911 179.444 li
211.366 175.101 li
211.571 172.67 li
211.58 172.646 li
211.598 172.675 li
211.768 173.727 li
211.812 173.25 li
211.937 171.593 li
212 171.687 li
212.125 171.402 li
212.143 171.517 li
212.214 172.647 li
212.277 172.06 li
212.42 170.799 li
212.446 170.893 li
212.527 171.74 li
212.571 171.16 li
212.723 168.083 li
212.803 168.239 li
213.045 166.863 li
213.259 162.395 li
213.473 158.18 li
213.509 158.392 li
213.598 158.454 li
213.616 158.393 li
213.652 158.226 li
213.678 158.392 li
213.821 158.864 li
213.839 158.853 li
213.911 158.623 li
213.946 158.877 li
214.125 159.991 li
214.161 159.944 li
214.178 159.923 li
214.196 159.964 li
214.259 160.418 li
214.294 159.995 li
214.491 157.937 li
214.571 157.68 li
214.607 157.895 li
214.794 159.847 li
214.83 159.47 li
214.893 158.752 li
214.973 158.798 li
215.018 159.07 li
215.053 158.847 li
215.071 158.737 li
215.098 158.844 li
215.277 161.148 li
215.366 160.247 li
215.375 160.226 li
215.384 160.246 li
215.509 161.737 li
215.625 164.134 li
215.687 163.308 li
215.803 162.375 li
215.839 162.541 li
216.294 166.147 li
216.33 166.486 li
216.375 166.145 li
216.482 165.803 li
216.518 165.894 li
216.553 165.39 li
216.794 161.762 li
217.018 160.019 li
217.348 157.474 li
217.375 157.457 li
217.392 157.511 li
217.464 158.884 li
217.616 160.014 li
217.696 160.996 li
217.767 160.775 li
217.892 159.497 li
217.973 159.616 li
217.982 159.597 li
217.991 159.615 li
218.312 162.229 li
218.383 161.735 li
218.473 160.914 li
218.517 161.291 li
218.633 163.179 li
218.705 162.826 li
218.785 161.972 li
218.875 160.272 li
218.928 160.893 li
219.133 162.616 li
219.357 164.651 li
219.455 165.6 li
219.508 165.475 li
219.553 165.613 li
219.571 165.507 li
219.776 164.122 li
219.874 163.21 li
219.919 163.786 li
219.991 164.44 li
220.062 164.372 li
220.133 165.298 li
220.339 167.169 li
220.419 167.459 li
220.749 170.699 li
220.857 172.325 li
220.901 171.937 li
220.937 171.651 li
220.964 171.879 li
221.017 172.33 li
221.062 171.926 li
221.562 165.788 li
221.678 165.699 li
221.767 164.279 li
221.919 161.417 li
221.973 161.742 li
222.035 162.394 li
222.098 162.012 li
222.249 159.448 li
222.356 156.85 li
222.419 157.141 li
222.464 157.014 li
222.66 156.228 li
222.714 156.481 li
222.731 156.524 li
222.749 156.472 li
222.803 156.132 li
222.865 156.326 li
223.062 157.096 li
223.089 156.869 li
223.312 154.593 li
223.669 150.386 li
223.722 150.698 li
223.928 151.367 li
223.937 151.341 li
223.99 151.073 li
224.053 151.225 li
224.133 151.546 li
224.169 151.298 li
224.374 149.819 li
224.392 149.901 li
224.481 151.003 li
224.535 150.348 li
224.58 150.108 li
224.624 150.291 li
224.803 151.547 li
224.821 151.498 li
224.963 149.498 li
225.365 142.831 li
225.41 143.096 li
225.544 144.044 li
225.579 143.67 li
225.847 140.456 li
225.883 140.647 li
226.026 143.487 li
226.187 143.156 li
226.204 143.192 li
226.222 143.154 li
226.276 142.969 li
226.338 143.129 li
226.347 143.138 li
226.356 143.123 li
226.428 142.702 li
226.499 142.946 li
226.57 143.459 li
226.615 142.973 li
226.651 142.749 li
226.687 142.916 li
226.722 143.122 li
226.749 142.961 li
226.803 142.445 li
226.838 142.882 li
226.999 144.074 li
227.008 144.066 li
227.035 144.058 li
227.053 144.103 li
227.124 144.817 li
227.24 146.552 li
227.294 146.384 li
227.32 146.321 li
227.347 146.394 li
227.49 147.304 li
227.535 147.04 li
228.401 138.618 li
228.41 138.635 li
228.481 139.276 li
228.535 138.779 li
228.767 136.27 li
229.177 132.572 li
229.186 132.548 li
229.195 132.557 li
229.311 133.485 li
229.41 134.621 li
229.472 134.241 li
229.704 128.908 li
229.82 126.53 li
229.883 126.934 li
229.918 127.087 li
229.954 126.956 li
230.026 125.789 li
230.472 117.634 li
230.481 117.642 li
230.508 117.696 li
230.526 117.654 li
230.82 114.893 li
230.927 115.164 li
230.999 115.581 li
231.034 115.296 li
231.115 114.496 li
231.177 114.775 li
231.258 115.809 li
231.338 115.554 li
231.552 114.734 li
231.784 113.39 li
231.963 111.944 li
232.177 111.084 li
232.275 109.683 li
232.329 110.026 li
232.427 111.664 li
232.552 111.494 li
232.588 111.581 li
232.624 111.485 li
232.668 111.358 li
232.686 111.435 li
232.758 112.491 li
232.865 112.185 li
232.936 112.671 li
232.981 112.393 li
233.624 102.472 li
233.758 103.181 li
233.775 103.212 li
233.784 103.195 li
233.838 102.959 li
233.874 103.178 li
233.963 103.998 li
234.016 103.683 li
234.106 100.977 li
234.338 96.8553 li
234.516 96.2431 li
234.552 96.0556 li
234.57 96.1511 li
234.65 97.3508 li
234.722 96.7045 li
234.74 96.6293 li
234.757 96.6907 li
234.82 97.1494 li
234.882 96.8203 li
234.945 96.012 li
235.016 96.3891 li
235.07 96.5304 li
235.195 97.7327 li
235.257 97.4376 li
235.311 97.1702 li
235.347 97.3853 li
235.552 99.8711 li
235.615 99.5963 li
235.757 100.557 li
235.981 102.193 li
235.998 102.171 li
236.168 101.668 li
236.204 101.894 li
236.248 102.054 li
236.293 101.914 li
236.32 101.817 li
236.347 101.923 li
236.418 102.719 li
236.481 102.227 li
236.561 100.843 li
236.614 100.142 li
236.677 100.707 li
236.739 101.402 li
236.793 100.963 li
236.829 100.856 li
236.856 100.965 li
236.882 101.078 li
236.9 100.994 li
236.998 99.7082 li
237.07 100.237 li
237.097 100.356 li
237.132 100.235 li
237.168 100.165 li
237.222 100.251 li
237.311 101.739 li
237.811 107.549 li
237.989 109.938 li
237.998 109.936 li
238.052 109.731 li
238.079 109.65 li
238.088 109.696 li
238.507 113.515 li
238.525 113.433 li
238.713 111.045 li
238.855 109.564 li
238.882 109.833 li
239.409 118.696 li
239.471 119.08 li
239.534 118.884 li
239.695 117.313 li
239.757 118.107 li
239.882 118.796 li
239.9 118.764 li
239.989 117.778 li
240.079 118.255 li
240.382 119.814 li
240.445 119.54 li
240.605 118.835 li
240.632 119.009 li
240.695 119.686 li
240.757 119.202 li
240.775 119.157 li
240.802 119.202 li
240.873 119.384 li
240.927 119.235 li
240.989 118.753 li
241.114 117.075 li
241.159 117.625 li
241.239 118.811 li
241.293 118.285 li
241.561 115.727 li
241.57 115.716 li
241.578 115.724 li
241.659 116.335 li
241.703 115.878 li
241.855 115.288 li
241.98 114.93 li
242.23 112.589 li
242.257 112.692 li
242.436 113.257 li
242.453 113.305 li
242.471 113.268 li
242.632 111.895 li
242.739 110.656 li
242.775 110.822 li
243.203 113.588 li
243.248 113.802 li
243.284 114.033 li
243.31 113.865 li
243.364 113.394 li
243.418 113.832 li
243.632 116.081 li
243.855 119.943 li
244.016 120.901 li
244.15 121.416 li
244.605 127.969 li
244.775 130.499 li
244.793 130.449 li
244.9 128.749 li
245.292 124.102 li
245.31 124.163 li
245.328 124.21 li
245.337 124.187 li
245.48 122.593 li
245.569 123.187 li
245.953 128.037 li
246.016 127.042 li
246.051 126.744 li
246.087 127.036 li
246.417 131.114 li
246.462 130.605 li
246.605 129.81 li
246.614 129.828 li
247.042 132.529 li
247.105 133.15 li
247.167 132.746 li
247.176 132.735 li
247.185 132.751 li
247.23 132.901 li
247.266 132.745 li
247.319 132.523 li
247.355 132.718 li
247.81 136.69 li
247.846 136.424 li
247.935 134.808 li
248.007 135.268 li
248.149 137.066 li
248.292 137.749 li
248.658 140.295 li
248.712 139.873 li
248.792 138.842 li
248.855 139.216 li
248.971 140.244 li
249.355 144.059 li
249.39 143.863 li
249.623 142.502 li
249.64 142.58 li
250.265 149.235 li
250.373 148.921 li
250.408 148.879 li
250.435 148.933 li
250.471 149.001 li
250.489 148.923 li
250.658 147.614 li
250.712 147.912 li
251.087 152.617 li
251.203 154.098 li
251.239 153.875 li
251.283 153.611 li
251.319 153.798 li
251.622 156.104 li
251.649 156.21 li
251.676 156.13 li
251.819 154.233 li
251.899 153.197 li
251.953 153.67 li
252.426 159.357 li
252.962 165.732 li
252.988 165.59 li
253.051 165.095 li
253.096 165.504 li
253.158 166.131 li
253.221 165.791 li
253.354 163.97 li
253.497 161.768 li
253.542 162.159 li
253.649 163.379 li
253.703 163.175 li
253.756 162.942 li
253.792 163.09 li
253.863 164.085 li
253.917 163.424 li
254.069 162.055 li
254.087 162.134 li
254.578 169.042 li
255.069 178.065 li
255.176 179.836 li
255.533 189.222 li
255.747 192.777 li
256.06 197.772 li
256.426 203.861 li
256.524 205.245 li
256.97 214.392 li
257.033 214.684 li
257.274 216.755 li
257.283 216.75 li
257.336 216.469 li
257.363 216.686 li
257.595 221.645 li
257.827 226.05 li
258.086 228.876 li
258.327 232.249 li
258.381 232.665 li
258.443 232.324 li
258.479 232.571 li
258.595 233.73 li
258.667 233.604 li
258.693 233.627 li
258.711 233.587 li
258.738 233.522 li
258.756 233.583 li
258.881 235.504 li
259.604 246.693 li
259.72 247.627 li
259.8 247.124 li
259.836 247.005 li
259.854 247.092 li
260.059 250.405 li
260.22 251.372 li
260.229 251.357 li
260.354 250.603 li
260.497 250.773 li
260.55 251.566 li
260.916 257.71 li
261.033 260.315 li
261.247 263.414 li
261.515 265.588 li
261.622 267.245 li
261.675 266.73 li
261.729 266.368 li
261.8 266.504 li
261.827 266.542 li
261.836 266.516 li
261.899 266.179 li
261.934 266.452 li
262.166 270.249 li
262.256 269.423 li
262.274 269.407 li
262.291 269.44 li
262.363 269.879 li
262.434 270.314 li
262.479 270.056 li
262.604 267.775 li
262.693 268.767 li
262.738 269.093 li
263.711 283.056 li
263.72 283.052 li
263.747 283.114 li
264.014 286.228 li
264.077 287.206 li
264.148 286.826 li
264.202 286.676 li
264.238 286.844 li
264.514 290.05 li
264.702 292.807 li
264.747 292.535 li
265.059 290.07 li
265.077 290.139 li
265.13 290.424 li
265.175 290.155 li
265.3 288.182 li
265.38 288.763 li
265.559 291.275 li
265.613 290.711 li
265.711 289.866 li
265.755 290.162 li
266.014 292.18 li
266.836 299.527 li
266.925 299.297 li
267.139 299.352 li
267.246 300.437 li
267.371 303.934 li
267.675 310.453 li
267.684 310.467 li
267.702 310.437 li
267.729 310.379 li
267.746 310.424 li
267.827 311.79 li
268.059 313.905 li
268.068 313.883 li
268.112 313.72 li
268.148 313.85 li
268.229 314.34 li
268.273 313.997 li
268.291 313.908 li
268.309 313.961 li
268.496 316.374 li
268.577 317.811 li
268.63 317.295 li
268.773 315.419 li
268.818 315.755 li
269.041 316.886 li
269.086 316.623 li
269.157 316.05 li
269.211 316.414 li
269.336 317.562 li
269.398 317.38 li
269.443 317.505 li
269.461 317.53 li
269.47 317.511 li
269.612 317.253 li
269.63 317.294 li
269.818 318.837 li
270.032 321.173 li
270.112 322.404 li
270.166 321.762 li
270.416 318.682 li
270.8 315.35 li
271.157 313.383 li
271.202 313.696 li
271.327 315.375 li
271.398 314.811 li
271.452 314.523 li
271.532 314.541 li
271.594 314.219 li
271.809 312.706 li
271.827 312.799 li
272.032 316.32 li
272.166 315.626 li
272.246 314.979 li
272.282 315.537 li
272.38 317.399 li
272.451 317.353 li
272.594 317.85 li
272.612 317.823 li
272.639 317.79 li
272.657 317.83 li
272.782 318.964 li
272.996 321.583 li
273.121 322.515 li
273.201 322.064 li
273.666 317.658 li
273.719 318.091 li
273.809 318.99 li
273.862 318.693 li
273.871 318.671 li
273.88 318.677 li
273.942 319.332 li
274.076 321 li
274.13 320.727 li
274.157 320.59 li
274.175 320.663 li
274.782 327.617 li
274.862 327.122 li
274.933 326.659 li
274.987 327.03 li
275.549 334.002 li
275.594 333.799 li
275.674 333.479 li
275.71 333.66 li
275.826 336.032 li
275.978 337.319 li
275.996 337.303 li
276.005 337.263 li
276.076 336.792 li
276.157 336.973 li
276.246 338.436 li
276.514 342.625 li
276.549 342.473 li
276.585 342.327 li
276.603 342.408 li
276.782 343.148 li
276.79 343.146 li
276.853 342.913 li
277.174 338.885 li
277.353 337.567 li
277.406 337.458 li
277.451 337.609 li
277.603 337.813 li
277.612 337.794 li
277.674 337.367 li
277.719 337.754 li
277.835 338.413 li
277.871 338.263 li
277.978 337.136 li
278.031 337.722 li
278.201 338.917 li
278.281 339.467 li
278.514 342.699 li
278.549 342.968 li
278.576 342.752 li
278.835 340.651 li
278.844 340.637 li
278.853 340.657 li
278.933 341.205 li
278.987 340.865 li
279.076 340.274 li
279.121 340.483 li
279.219 342.344 li
279.353 344.05 li
279.38 343.869 li
279.603 342.249 li
279.638 342.22 li
279.665 342.268 li
279.737 342.897 li
279.862 344.539 li
279.915 344.252 li
280.219 341.026 li
280.272 341.307 li
280.29 341.336 li
280.38 340.717 li
280.487 340.956 li
280.594 341.846 li
280.656 341.448 li
280.692 341.193 li
280.719 341.359 li
280.996 344.1 li
281.004 344.076 li
281.067 343.612 li
281.129 343.951 li
281.192 344.103 li
281.228 343.932 li
281.701 337.43 li
282.004 334.643 li
282.049 334.155 li
282.576 324.067 li
282.772 322.66 li
282.781 322.652 li
282.79 322.665 li
282.853 323.024 li
282.897 322.749 li
282.969 322.122 li
283.013 322.606 li
283.049 322.908 li
283.094 322.635 li
283.138 322.459 li
283.174 322.595 li
283.263 323.295 li
283.308 322.827 li
283.567 317.933 li
283.603 318.068 li
283.79 318.671 li
283.808 318.68 li
283.817 318.659 li
283.96 317.799 li
284.183 314.275 li
284.201 314.341 li
284.263 314.748 li
284.326 314.49 li
284.727 315.349 li
284.772 315.621 li
284.808 315.382 li
284.879 314.621 li
284.942 314.97 li
285.067 315.522 li
285.102 315.227 li
285.504 310.239 li
285.585 308.544 li
285.736 307.025 li
285.826 306.265 li
286.085 304.644 li
286.102 304.675 li
286.343 306.063 li
286.424 305.563 li
286.531 304.828 li
286.584 304.941 li
286.683 305.954 li
286.736 305.369 li
286.924 303.067 li
286.968 303.21 li
287.013 303.283 li
287.058 303.204 li
287.111 303.057 li
287.138 303.211 li
287.299 304.557 li
287.352 304.502 li
287.495 304.849 li
287.763 306.785 li
287.781 306.656 li
287.888 303.264 li
288.12 299.02 li
288.325 298.092 li
288.37 297.992 li
288.406 298.099 li
288.424 298.145 li
288.441 298.107 li
288.531 296.66 li
289.075 288 li
289.531 283.952 li
289.593 283.232 li
289.647 283.679 li
289.682 283.83 li
289.709 283.717 li
289.852 282.221 li
289.986 280.49 li
290.022 280.539 li
290.066 280.297 li
290.334 276.295 li
290.531 273.356 li
291.022 266.755 li
291.048 266.661 li
291.066 266.709 li
291.182 267.641 li
291.263 267.296 li
291.397 266.225 li
291.45 266.464 li
291.548 268.17 li
291.709 268.832 li
291.718 268.848 li
291.727 268.834 li
292.531 264.213 li
292.629 262.538 li
292.682 263.445 li
292.906 267.019 li
293.039 268.033 li
293.102 267.561 li
293.298 265.18 li
293.53 261.959 li
293.575 262.297 li
293.602 262.453 li
293.629 262.309 li
293.905 260.521 li
293.977 260.44 li
294.289 257.55 li
294.495 255.207 li
294.548 255.571 li
294.611 256.066 li
294.655 255.673 li
294.87 253.176 li
294.905 253.422 li
294.995 254.42 li
295.066 254.159 li
295.146 254.039 li
295.164 254.155 li
295.236 254.811 li
295.28 254.385 li
295.379 253.859 li
295.414 254.078 li
295.727 257.234 li
295.879 258.026 li
295.923 257.837 li
295.95 257.746 li
295.977 257.842 li
296.173 260.092 li
296.28 261.384 li
296.325 261.207 li
296.539 259.808 li
296.593 260.097 li
296.691 260.915 li
296.745 260.613 li
296.941 259.643 li
296.959 259.675 li
296.986 259.73 li
297.003 259.696 li
297.093 258.646 li
297.325 256.614 li
297.343 256.593 li
297.361 256.62 li
297.7 257.913 li
297.744 257.603 li
297.861 255.467 li
297.914 256.358 li
298.173 260.333 li
298.503 264.086 li
298.557 263.845 li
298.646 262.242 li
298.887 258.633 li
298.941 258.313 li
299.075 257.738 li
299.102 257.757 li
299.128 257.762 li
299.137 257.743 li
299.209 257.432 li
299.253 257.679 li
299.325 258.135 li
299.378 257.843 li
299.423 257.684 li
299.485 257.85 li
299.682 258.666 li
299.735 258.434 li
299.825 257.036 li
299.941 255.283 li
299.994 255.644 li
300.021 255.727 li
300.048 255.646 li
300.093 255.52 li
300.128 255.633 li
300.164 255.758 li
300.191 255.639 li
300.28 253.839 li
300.441 252.637 li
300.521 251.723 li
300.601 250.61 li
300.664 250.987 li
300.744 251.116 li
300.771 250.967 li
301.342 244.212 li
301.387 244.236 li
301.441 243.839 li
301.664 240.896 li
301.878 237.803 li
301.941 237.775 li
301.967 237.858 li
301.994 237.911 li
302.021 237.846 li
302.11 237.008 li
302.396 233.597 li
302.45 233.105 li
302.637 230.457 li
302.708 230.701 li
302.994 229.955 li
303.226 228.679 li
303.351 225.773 li
303.423 226.721 li
303.637 228.772 li
303.816 229.771 li
303.869 229.606 li
303.932 229.266 li
303.976 229.556 li
304.137 230.458 li
304.146 230.446 li
304.387 229.009 li
304.432 229.462 li
304.833 234.487 li
304.887 234.936 li
304.94 235.331 li
304.994 235.067 li
305.182 232.402 li
305.806 221.693 li
305.815 221.694 li
305.869 222.283 li
305.923 222.79 li
305.967 222.376 li
306.128 221.376 li
306.137 221.399 li
306.217 222.059 li
306.262 221.64 li
306.414 220.195 li
306.449 220.312 li
306.565 221.854 li
306.664 221.209 li
306.708 220.988 li
306.771 221.175 li
306.789 221.207 li
306.806 221.184 li
307.056 220.058 li
307.289 218.119 li
307.324 217.913 li
307.351 218.056 li
307.565 219.432 li
307.574 219.418 li
307.655 218.812 li
307.887 215.481 li
308.003 215.931 li
308.038 215.721 li
308.074 215.871 li
308.146 216.501 li
308.199 216.161 li
308.333 215.411 li
308.369 215.554 li
308.431 215.943 li
308.485 215.632 li
308.842 212.67 li
308.86 212.668 li
308.869 212.691 li
308.922 212.823 li
308.985 212.738 li
309.038 212.36 li
309.128 211.297 li
309.181 211.916 li
309.297 214.079 li
309.36 213.496 li
309.788 208.423 li
309.824 208.603 li
310.02 209.972 li
310.056 209.789 li
310.128 209.247 li
310.19 209.527 li
310.235 209.196 li
310.288 208.839 li
310.351 209.039 li
310.422 209.576 li
310.494 209.32 li
310.69 207.87 li
310.922 205.495 li
311.038 204.674 li
311.163 204.751 li
311.306 205.372 li
311.503 207.716 li
311.547 207.319 li
311.86 203.449 li
311.886 203.678 li
311.949 204.476 li
312.02 204.182 li
312.092 203.536 li
312.315 201.294 li
312.547 199.03 li
312.61 199.742 li
312.868 202.666 li
313.145 203.737 li
313.181 203.651 li
313.44 202.268 li
313.663 200.185 li
313.743 199.787 li
313.761 199.766 li
313.77 199.786 li
313.806 199.9 li
313.833 199.79 li
314.047 196.895 li
314.252 193.534 li
314.306 193.128 li
314.368 193.435 li
314.458 194.652 li
314.565 195.252 li
314.601 195.186 li
314.618 195.165 li
314.636 195.194 li
314.717 195.978 li
315.065 198.561 li
315.315 200.393 li
315.458 203.741 li
315.529 203.354 li
315.609 204.011 li
315.797 207.609 li
315.904 209.395 li
315.984 209.382 li
316.083 210.202 li
316.208 209.913 li
316.234 209.826 li
316.333 208.586 li
316.422 209.141 li
316.752 212.782 li
316.904 212.626 li
316.94 212.689 li
316.958 212.636 li
317.743 207.495 li
317.815 207.887 li
317.868 208.122 li
317.904 207.939 li
318.047 206.332 li
318.109 207.032 li
318.136 207.169 li
318.154 207.068 li
318.225 206.479 li
318.279 206.797 li
318.457 207.778 li
318.475 207.73 li
318.538 206.522 li
318.797 201.196 li
318.815 201.207 li
318.85 201.097 li
318.975 199.65 li
319.073 198.327 li
319.127 198.657 li
319.243 199.475 li
319.297 199.133 li
319.618 196.594 li
319.681 196.784 li
319.716 196.925 li
319.743 196.837 li
319.823 196.148 li
319.904 196.416 li
320.038 195.923 li
320.993 183.876 li
321.047 183.651 li
321.082 183.862 li
321.27 186.153 li
321.332 185.955 li
321.511 184.513 li
321.788 182.034 li
321.805 182.005 li
321.823 182.042 li
321.922 182.552 li
321.957 182.249 li
322.127 179.39 li
322.189 179.689 li
322.252 179.965 li
322.296 179.769 li
322.448 177.705 li
322.779 171.902 li
322.877 170.705 li
323.082 168.882 li
323.323 167.076 li
323.35 167.178 li
323.368 167.241 li
323.386 167.203 li
323.475 166.662 li
323.529 166.89 li
323.698 168.775 li
323.841 168.68 li
323.859 168.707 li
323.886 168.662 li
323.984 168.003 li
324.305 163.955 li
324.341 164.049 li
324.386 164.169 li
324.412 164.074 li
324.457 163.887 li
324.502 164.06 li
324.671 164.886 li
324.698 164.651 li
324.984 161.431 li
325.412 154.726 li
325.662 150.525 li
325.68 150.565 li
325.761 151.123 li
325.814 150.756 li
325.948 147.658 li
326.073 146.012 li
326.109 146.055 li
326.136 146.024 li
326.144 145.99 li
326.341 145.34 li
326.368 145.47 li
326.412 145.803 li
326.457 145.47 li
326.519 145.099 li
326.573 145.403 li
326.743 146.623 li
326.769 146.517 li
327.198 141.956 li
327.278 140.73 li
327.332 141.327 li
327.385 141.819 li
327.457 141.607 li
327.475 141.594 li
327.484 141.608 li
327.582 142.226 li
327.787 143.973 li
327.805 143.926 li
327.885 143.364 li
327.966 143.561 li
328.037 144.065 li
328.1 143.73 li
328.225 143.389 li
328.26 143.535 li
328.359 144.127 li
328.412 143.926 li
328.537 143.043 li
328.778 139.697 li
328.832 139.73 li
328.885 139.263 li
329.028 137.535 li
329.091 137.773 li
329.153 138.046 li
329.198 137.847 li
329.269 136.291 li
329.555 129.721 li
329.591 129.742 li
329.609 129.806 li
329.662 130.034 li
329.698 129.793 li
329.992 126.875 li
330.028 127.119 li
330.207 128.314 li
330.233 128.263 li
330.439 126.917 li
330.912 118.404 li
331.099 116.844 li
331.198 115.785 li
331.394 114.15 li
331.519 113.235 li
331.778 110.269 li
331.841 110.881 li
331.903 111.467 li
331.957 111.147 li
332.037 110.384 li
332.09 110.831 li
332.269 111.772 li
332.296 111.87 li
332.323 111.783 li
332.546 109.623 li
332.635 110.117 li
332.76 110.432 li
333.189 115.792 li
333.251 114.967 li
333.43 112.749 li
333.456 112.849 li
333.573 114.11 li
333.644 113.543 li
333.912 110.292 li
334.046 108.523 li
334.09 108.807 li
334.198 109.531 li
334.251 109.388 li
334.269 109.368 li
334.278 109.392 li
334.956 113.377 li
335.028 113.227 li
335.126 112.928 li
335.162 112.756 li
335.197 112.914 li
335.447 114.908 li
335.492 114.885 li
335.537 115.04 li
335.796 117.227 li
335.867 116.931 li
336.081 116.134 li
336.135 115.992 li
336.188 116.125 li
336.242 116.223 li
336.278 116.104 li
336.376 115.282 li
336.43 115.746 li
336.572 118.197 li
336.635 119.026 li
336.697 118.623 li
336.76 118.283 li
336.804 118.55 li
336.867 119.015 li
336.921 118.707 li
337.179 115.741 li
337.394 112.767 li
337.456 112.291 li
337.528 112.467 li
337.563 112.488 li
337.59 112.42 li
337.697 111.455 li
337.983 105.593 li
338.054 106.095 li
338.081 106.177 li
338.108 106.101 li
338.135 106.053 li
338.153 106.088 li
338.304 106.939 li
338.456 107.554 li
338.465 107.569 li
338.474 107.562 li
338.536 106.953 li
338.581 106.645 li
338.626 106.901 li
338.76 107.909 li
338.813 107.834 li
338.938 107.474 li
339.01 107.203 li
339.063 107.282 li
339.081 107.288 li
339.09 107.27 li
339.447 105.411 li
339.483 105.217 li
339.51 105.339 li
339.617 107.087 li
339.715 106.58 li
339.876 106.392 li
339.929 106.72 li
340.09 107.173 li
340.126 106.909 li
340.483 103.056 li
340.608 101.841 li
340.777 101.02 li
340.849 100.742 li
340.893 100.986 li
341.143 103.519 li
341.206 103.036 li
341.286 102.207 li
341.349 102.507 li
341.474 103.113 li
341.51 102.935 li
341.652 100.424 li
341.858 98.2455 li
341.947 96.9283 li
342.001 97.5547 li
342.099 98.2277 li
342.143 98.0549 li
342.358 94.6361 li
342.661 89.024 li
342.938 87.3573 li
342.974 87.4886 li
343.054 87.756 li
343.108 87.6454 li
343.259 87.0381 li
343.304 86.6225 li
343.358 86.9962 li
343.608 89.167 li
343.643 89.0577 li
343.688 88.9077 li
343.724 89.0287 li
343.911 90.412 li
343.974 89.9294 li
343.992 89.9001 li
344 89.9303 li
344.09 90.4288 li
344.152 90.209 li
344.295 89.9774 li
344.393 89.8595 li
344.42 89.9614 li
344.554 91.7896 li
344.634 91.1136 li
344.688 90.6988 li
344.741 91.1062 li
345.116 96.4198 li
345.179 96.2574 li
345.206 96.3356 li
345.491 99.2667 li
345.59 98.5539 li
345.599 98.5401 li
345.607 98.5513 li
345.643 98.6684 li
345.67 98.5587 li
345.92 96.5019 li
345.965 96.5762 li
346.072 96.8604 li
346.152 97.5849 li
346.206 97.2428 li
346.322 96.6712 li
346.366 96.7939 li
346.456 97.5871 li
346.786 102.613 li
346.84 102.667 li
346.884 102.578 li
347.081 101.484 li
347.125 101.275 li
347.179 101.492 li
347.259 102.933 li
347.598 109.657 li
347.607 109.635 li
347.661 109.445 li
347.723 109.588 li
347.795 109.801 li
348.009 111.517 li
348.054 111.378 li
348.098 111.269 li
348.161 111.378 li
348.331 112.006 li
348.42 112.828 li
348.482 112.589 li
348.732 110.599 li
348.786 110.908 li
348.839 111.14 li
348.893 110.969 li
349.17 109.098 li
349.241 109.264 li
349.304 109.382 li
349.339 109.269 li
349.375 109.154 li
349.411 109.279 li
349.616 110.907 li
349.679 110.392 li
349.705 110.264 li
349.732 110.399 li
349.991 113.927 li
350.08 114.944 li
350.125 114.708 li
350.188 114.2 li
350.241 114.547 li
350.652 118.145 li
350.67 118.175 li
350.679 118.142 li
350.821 117.071 li
350.911 117.285 li
350.929 117.297 li
350.938 117.278 li
351 116.962 li
351.054 117.225 li
351.295 119.633 li
351.536 122.29 li
351.545 122.28 li
351.58 122.167 li
351.607 122.266 li
351.732 124.66 li
352.295 137.152 li
352.312 137.206 li
352.33 137.176 li
352.464 136.69 li
352.518 136.841 li
352.678 138.494 li
353.152 148.382 li
353.161 148.354 li
353.214 148.052 li
353.25 148.319 li
353.589 152.665 li
353.625 152.553 li
353.652 152.49 li
353.669 152.547 li
353.875 154.605 li
354.089 157.271 li
354.116 157.196 li
354.196 156.95 li
354.241 157.08 li
354.455 159.243 li
354.643 160.522 li
354.705 160.862 li
355.696 172.426 li
356.276 183.367 li
356.455 187.777 li
356.794 193.827 li
356.955 194.552 li
357.062 194.715 li
357.098 194.635 li
357.134 194.557 li
357.151 194.619 li
357.25 196.264 li
357.5 199.351 li
357.535 199.263 li
357.785 197.72 li
357.839 198.039 li
358.267 203.512 li
358.598 211.422 li
358.848 213.328 li
358.901 212.912 li
359.026 211.919 li
359.071 212.137 li
359.241 214.203 li
359.321 213.683 li
359.401 212.585 li
359.464 213.213 li
359.946 217.679 li
359.964 217.717 li
359.973 217.701 li
360.089 216.793 li
360.169 217.282 li
360.312 218.524 li
360.499 219.505 li
360.553 219.589 li
360.589 219.517 li
360.669 219.038 li
360.723 219.324 li
360.83 219.67 li
360.865 219.615 li
360.928 219.333 li
360.999 219.48 li
361.249 220.896 li
361.365 222.179 li
361.41 221.862 li
361.642 220.033 li
361.66 220.055 li
361.758 220.612 li
361.99 223.478 li
362.053 223.068 li
362.124 222.44 li
362.169 223.002 li
362.249 224.235 li
362.303 223.78 li
362.446 223.07 li
362.472 223.149 li
362.571 224.247 li
362.776 226.203 li
362.964 228.357 li
363.16 230.161 li
363.231 230.45 li
363.285 230.765 li
363.339 230.534 li
363.383 230.347 li
363.419 230.483 li
363.535 232.051 li
364.088 242.006 li
364.49 246.993 li
364.526 246.924 li
364.544 246.912 li
364.553 246.932 li
364.615 247.801 li
365.338 262.698 li
365.392 262.106 li
365.579 259.791 li
365.624 260.006 li
365.749 260.885 li
365.803 260.521 li
366.213 257.607 li
366.231 257.588 li
366.249 257.616 li
366.356 258.424 li
366.454 259.458 li
366.695 262.704 li
366.99 264.916 li
367.035 265.159 li
367.767 273.301 li
367.785 273.223 li
367.936 272.131 li
367.99 272.313 li
368.177 274.543 li
368.436 278.435 li
368.472 278.308 li
368.615 277.652 li
368.651 277.811 li
368.802 279.9 li
368.874 279.151 li
368.918 278.693 li
368.963 279.128 li
369.285 283.608 li
369.338 283.623 li
369.356 283.699 li
369.588 285.669 li
369.677 286.504 li
369.74 286.31 li
369.758 286.298 li
369.776 286.329 li
369.963 286.69 li
369.99 286.641 li
370.061 286.262 li
370.106 286.536 li
370.427 291.787 li
370.534 293.614 li
370.597 293.436 li
370.686 293.191 li
370.74 293.345 li
370.758 293.364 li
370.767 293.351 li
370.945 292.917 li
370.972 293.042 li
371.258 295.502 li
371.284 295.428 li
371.356 294.944 li
371.4 295.361 li
371.865 301.503 li
371.9 301.601 li
371.936 301.515 li
371.981 301.373 li
371.999 301.456 li
372.222 304.404 li
372.311 303.454 li
372.49 301.057 li
372.561 301.376 li
372.936 305.896 li
373.15 308.168 li
373.534 312.226 li
373.793 314.9 li
373.82 314.845 li
373.865 314.688 li
373.909 314.842 li
373.945 314.96 li
373.972 314.853 li
374.097 313.319 li
374.231 313.447 li
374.257 313.509 li
374.284 313.429 li
374.382 312.638 li
374.472 312.778 li
374.561 313.071 li
374.632 312.862 li
374.713 312.696 li
374.748 312.852 li
374.865 315.252 li
375.132 318.429 li
375.231 319.304 li
375.293 319.117 li
375.311 319.122 li
375.329 319.183 li
375.481 320.531 li
375.641 325.256 li
375.793 328.327 li
375.838 328.319 li
375.891 328.74 li
376.213 333.917 li
376.302 333.435 li
376.373 333.059 li
376.427 333.256 li
376.73 335.451 li
376.838 335.115 li
376.9 335.446 li
376.963 335.721 li
377.025 335.556 li
377.141 335.113 li
377.186 335.032 li
377.213 335.097 li
377.302 335.749 li
377.364 335.38 li
377.695 332.718 li
377.936 328.848 li
378.141 327.691 li
378.15 327.701 li
378.204 328.253 li
378.284 328.976 li
378.346 328.882 li
378.373 328.884 li
378.4 328.951 li
378.445 329.054 li
378.463 328.994 li
378.534 327.736 li
378.641 326.3 li
378.695 326.44 li
378.73 326.283 li
379.23 320.797 li
379.382 318.964 li
379.4 318.986 li
379.489 319.435 li
379.552 319.911 li
379.605 319.576 li
379.775 317.712 li
379.9 316.54 li
379.936 316.729 li
380.123 318.555 li
380.186 318.235 li
380.239 317.986 li
380.284 318.188 li
380.346 318.551 li
380.4 318.258 li
380.739 314.453 li
380.998 310.763 li
381.114 310.127 li
381.15 310.301 li
381.239 310.803 li
381.293 310.638 li
381.328 310.553 li
381.355 310.651 li
381.453 311.697 li
381.516 311.124 li
381.677 309.95 li
381.712 310.125 li
381.775 310.43 li
381.846 310.332 li
381.971 310.033 li
382.025 310.206 li
382.194 311.62 li
382.257 311.173 li
382.498 309.398 li
382.525 309.368 li
382.543 309.4 li
382.569 309.432 li
382.578 309.413 li
382.694 308.411 li
383.078 305.622 li
383.31 300.401 li
383.391 301.25 li
383.498 302.961 li
383.569 302.452 li
383.578 302.443 li
383.587 302.461 li
384.123 305.268 li
384.212 305.103 li
384.391 303.397 li
384.498 303.836 li
384.73 303.853 li
384.775 304.051 li
384.891 305.205 li
384.962 304.889 li
385.292 303.611 li
385.498 301.05 li
385.534 301.084 li
385.56 301.063 li
385.578 300.987 li
385.962 297.755 li
386.337 292.336 li
386.364 292.467 li
386.935 297.848 li
386.998 297.438 li
387.221 295.332 li
387.257 295.547 li
387.498 297.386 li
387.524 297.334 li
387.632 296.697 li
387.774 295.265 li
387.819 295.381 li
387.899 296.349 li
388.114 298.814 li
388.373 300.237 li
388.408 300.125 li
388.533 299.23 li
388.587 299.604 li
388.649 300.199 li
388.703 299.815 li
388.855 298.634 li
388.908 298.734 li
388.935 298.722 li
388.962 298.639 li
389.096 297.841 li
389.158 298.168 li
389.194 298.332 li
389.221 298.162 li
389.989 288.338 li
390.051 287.961 li
390.158 287.191 li
390.203 287.406 li
390.444 289.578 li
390.489 289.433 li
391.212 283.899 li
391.301 284.426 li
391.408 285.248 li
391.444 284.859 li
391.774 279.942 li
391.801 279.925 li
391.81 279.942 li
391.872 280.613 li
392.122 283.081 li
392.167 283.166 li
392.238 283.09 li
392.283 283 li
392.408 282.114 li
392.471 282.513 li
392.721 284.12 li
392.738 284.109 li
392.747 284.076 li
392.819 283.76 li
392.863 284.046 li
393.221 287.153 li
393.283 287.923 li
393.515 291.32 li
393.542 291.254 li
393.587 291.05 li
393.622 291.206 li
393.792 291.757 li
393.854 291.812 li
393.881 291.729 li
393.97 290.317 li
394.203 288.218 li
394.292 287.168 li
394.345 287.575 li
394.417 288.008 li
394.47 287.837 li
394.586 286.808 li
394.658 287.227 li
394.944 289.337 li
394.961 289.313 li
395.051 288.789 li
395.122 288.275 li
395.176 288.528 li
395.399 289.577 li
395.417 289.601 li
395.426 289.568 li
395.506 288.919 li
395.569 289.313 li
395.952 292.562 li
396.033 291.995 li
396.185 289.357 li
396.319 287.029 li
396.363 287.334 li
396.595 288.755 li
396.649 288.689 li
396.747 288.026 li
396.818 288.442 li
396.854 288.561 li
396.881 288.445 li
397.095 286.015 li
397.229 286.31 li
397.318 285.571 li
398.542 269.379 li
398.559 269.422 li
398.872 270.959 li
398.934 270.531 li
399.006 269.89 li
399.059 270.188 li
399.122 270.454 li
399.184 270.326 li
399.434 268.93 li
399.711 266.984 li
399.774 266.848 li
399.809 266.956 li
399.899 268.678 li
399.934 269.05 li
399.97 268.771 li
400.131 266.802 li
400.184 267.128 li
400.3 267.445 li
400.327 267.378 li
400.541 265.861 li
401.024 259.111 li
401.033 259.129 li
401.095 259.808 li
401.3 261.346 li
401.318 261.358 li
401.327 261.341 li
401.399 260.81 li
401.72 257.561 li
401.729 257.571 li
401.809 258.099 li
401.863 257.64 li
402.059 256.436 li
402.104 256.579 li
402.175 256.906 li
402.211 256.676 li
403.175 244.867 li
403.273 245.225 li
403.345 245.795 li
403.398 245.487 li
403.514 244.386 li
403.577 244.731 li
403.827 247.58 li
403.889 248.297 li
403.961 248.085 li
403.997 248.199 li
404.068 248.591 li
404.131 248.375 li
404.148 248.368 li
404.157 248.387 li
404.229 249.049 li
404.443 250.719 li
404.461 250.688 li
404.738 249.63 li
404.791 249.773 li
405.05 251.1 li
405.229 253.47 li
405.282 253.361 li
405.318 253.378 li
405.345 253.44 li
405.532 254.343 li
405.746 258.124 li
405.827 257.193 li
406.246 251.129 li
406.282 251.268 li
406.371 251.77 li
406.452 251.686 li
406.621 252.882 li
406.809 254.07 li
406.845 253.95 li
407.059 251.897 li
407.157 252.112 li
407.327 252.651 li
407.371 252.82 li
407.416 252.657 li
407.523 252.291 li
407.559 252.384 li
407.836 255.08 li
407.88 255.325 li
407.934 255.099 li
408.068 254.06 li
408.121 254.438 li
408.22 255.178 li
408.282 255.132 li
408.371 255.447 li
408.425 255.231 li
408.97 250.657 li
409.068 251.087 li
409.086 251.101 li
409.094 251.08 li
409.157 250.272 li
409.478 245.675 li
409.505 245.648 li
409.532 245.691 li
409.568 245.721 li
409.586 245.684 li
409.782 244.596 li
410.014 242.699 li
410.068 243.11 li
410.407 245.912 li
410.443 245.961 li
410.469 245.915 li
410.541 245.605 li
410.577 245.811 li
410.648 246.561 li
410.71 246.126 li
410.773 245.797 li
410.835 245.987 li
410.853 246.002 li
410.871 245.964 li
410.943 245.718 li
410.996 245.904 li
411.246 247.096 li
411.273 247.004 li
411.362 245.321 li
411.568 242.801 li
411.585 242.771 li
411.612 242.818 li
411.719 243.527 li
412.264 252.152 li
412.371 252.13 li
412.443 252.002 li
412.478 252.136 li
412.55 252.497 li
412.603 252.23 li
412.773 250.639 li
412.826 251.106 li
413.023 252.661 li
413.121 253.399 li
413.175 253.076 li
413.237 252.728 li
413.3 252.855 li
413.594 254.301 li
413.701 254.27 li
413.737 254.128 li
413.951 251.662 li
414.058 251.828 li
414.157 251.585 li
414.219 251.65 li
414.255 251.667 li
414.282 251.601 li
414.362 250.596 li
414.532 248.456 li
414.594 248.485 li
414.657 247.959 li
414.871 246.467 li
415.264 244.298 li
415.469 241.22 li
415.54 242.08 li
415.639 243.941 li
415.71 243.442 li
416.005 242.71 li
416.174 242.116 li
416.246 242.243 li
416.407 243.77 li
416.523 244.771 li
416.576 244.552 li
416.612 244.465 li
416.665 244.572 li
416.746 244.713 li
416.808 244.634 li
416.88 244.275 li
417.299 241.059 li
417.308 241.074 li
417.389 241.487 li
417.442 241.205 li
417.71 238.353 li
418.014 230.789 li
418.139 229.039 li
418.38 226.583 li
418.487 225.553 li
418.531 225.882 li
418.728 227.94 li
418.772 227.691 li
418.88 226.648 li
418.951 226.813 li
418.978 226.831 li
419.005 226.789 li
419.103 226.117 li
419.246 222.942 li
419.513 219.927 li
419.603 218.873 li
420.04 211.847 li
420.058 211.867 li
420.085 211.887 li
420.103 211.843 li
420.183 210.941 li
420.237 210.445 li
420.308 210.693 li
420.326 210.687 li
420.344 210.621 li
420.433 209.416 li
420.897 202.902 li
421.897 191.947 li
421.951 192.264 li
422.076 193.082 li
422.129 193.004 li
422.192 192.205 li
422.469 187.325 li
422.504 187.549 li
422.567 188.046 li
422.611 187.706 li
422.736 186.221 li
422.79 186.602 li
422.915 187.222 li
422.942 187.182 li
422.995 187.04 li
423.049 187.19 li
423.067 187.224 li
423.085 187.179 li
423.692 183.774 li
423.727 183.718 li
423.754 183.792 li
424.067 185.896 li
424.227 187.553 li
424.272 187.314 li
424.674 183.833 li
424.745 184.227 li
424.986 185.727 li
425.12 186.215 li
425.147 186.188 li
425.218 185.957 li
425.254 186.195 li
425.326 186.837 li
425.388 186.479 li
425.406 186.453 li
425.415 186.471 li
425.486 187.227 li
425.558 187.991 li
425.611 187.627 li
426.084 179.3 li
426.433 171.365 li
426.531 171.106 li
426.781 168.173 li
427.129 165.388 li
427.147 165.44 li
427.549 167.438 li
427.575 167.328 li
428.022 163.385 li
428.388 162.359 li
428.504 161.114 li
428.558 161.3 li
428.602 161.39 li
428.665 161.315 li
428.772 160.647 li
429.102 156.731 li
429.236 154.989 li
429.29 155.406 li
429.468 157.438 li
429.522 157.212 li
429.656 155.847 li
429.87 153.69 li
430.049 152.228 li
430.182 149.778 li
430.245 150.142 li
430.298 150.413 li
430.334 150.195 li
430.397 149.812 li
430.459 149.977 li
430.566 150.446 li
430.611 150.209 li
430.95 148.079 li
431.022 148.287 li
431.057 148.075 li
431.656 141.83 li
431.718 141.945 li
431.897 142.29 li
432.013 143.342 li
432.102 144.291 li
432.156 143.889 li
432.682 137.895 li
432.7 137.934 li
432.745 138.046 li
432.772 137.934 li
433.12 133.917 li
433.182 132.882 li
433.236 133.573 li
433.361 134.924 li
433.405 134.856 li
433.495 134.351 li
433.646 133.251 li
433.7 133.382 li
433.834 134.664 li
433.968 135.592 li
434.021 135.44 li
434.138 134.683 li
434.709 126.054 li
434.78 126.268 li
434.807 126.249 li
434.825 126.182 li
435.093 124.817 li
435.146 124.95 li
435.173 124.899 li
435.271 123.551 li
435.414 121.99 li
435.459 122.221 li
435.53 122.642 li
435.575 122.402 li
435.637 122.001 li
435.682 122.35 li
436.03 125.889 li
436.048 125.91 li
436.066 125.882 li
436.182 125.204 li
436.218 125.071 li
436.253 125.197 li
436.414 126.236 li
436.477 125.896 li
436.923 121.141 li
437.137 117.923 li
437.146 117.917 li
437.155 117.938 li
437.271 118.893 li
437.352 118.462 li
437.486 116.901 li
438.432 98.7712 li
438.441 98.7859 li
438.503 99.0135 li
438.548 98.7984 li
439.182 91.0172 li
439.36 89.5372 li
439.691 85.6764 li
440.075 82.0078 li
440.101 81.9621 li
440.119 82.0096 li
440.2 83.0075 li
440.387 84.6634 li
440.539 85.0228 li
440.575 84.9364 li
440.771 83.7147 li
441.012 80.8549 li
441.11 79.7269 li
441.164 80.1624 li
441.289 81.3508 li
441.333 81.0834 li
441.45 78.6374 li
441.503 78.0508 li
441.575 78.3454 li
441.655 78.2404 li
441.682 78.392 li
441.985 80.8263 li
442.039 80.7555 li
442.244 80.2664 li
442.289 80.3447 li
442.414 81.0415 li
442.637 82.6226 li
442.708 82.7781 li
442.949 84.1601 li
443.003 83.9113 li
443.565 78.1207 li
443.628 78.6028 li
443.824 80.1256 li
443.869 80.0829 li
443.905 80.1922 li
444.003 81.9236 li
444.173 83.0917 li
444.342 84.7217 li
444.405 84.4275 li
444.485 83.8335 li
444.539 84.1285 li
444.717 86.2363 li
445.226 89.8759 li
445.262 89.7035 li
445.44 88.1742 li
445.512 88.4762 li
445.628 89.2987 li
445.833 91.2548 li
445.896 91.5132 li
445.94 91.2794 li
446.128 87.8857 li
446.226 86.7966 li
446.28 87.0376 li
446.458 87.5746 li
446.485 87.5146 li
446.628 86.7197 li
446.672 87.0705 li
446.914 89.1898 li
447.003 90.5109 li
447.297 94.9393 li
447.619 96.5434 li
448.119 100.235 li
448.333 102.898 li
448.726 106.764 li
448.815 106.286 li
448.887 105.967 li
448.931 106.187 li
449.324 109.207 li
449.422 109.3 li
449.52 110.062 li
449.565 109.773 li
449.726 108.928 li
449.744 108.938 li
449.779 108.985 li
449.806 108.899 li
449.887 107.17 li
450.074 103.707 li
450.11 103.844 li
450.217 105.673 li
450.467 108.071 li
450.503 108.006 li
450.556 107.895 li
450.61 108.035 li
450.815 108.987 li
451.154 113.532 li
451.253 114.432 li
451.306 114.189 li
451.378 113.916 li
451.44 114.01 li
451.52 114.21 li
451.735 115.507 li
451.797 115.245 li
451.86 115.032 li
451.904 115.243 li
452.449 122.095 li
452.681 125.693 li
452.815 126.491 li
453.029 128.648 li
453.101 129.672 li
453.413 134.238 li
454.074 144.877 li
454.163 145.75 li
454.234 146.337 li
454.288 146.091 li
454.618 144.044 li
454.654 144.26 li
455.092 149.249 li
455.118 149.205 li
455.225 148.464 li
455.306 147.636 li
455.368 147.919 li
455.502 149.272 li
455.761 153.2 li
455.815 153.57 li
456.011 156.554 li
456.1 156.246 li
456.154 156.062 li
456.199 156.213 li
456.449 157.268 li
456.708 158.156 li
456.788 157.881 li
456.886 157.275 li
456.931 157.613 li
457.181 159.559 li
457.252 159.981 li
457.297 159.683 li
457.35 159.292 li
457.395 159.596 li
457.699 161.813 li
457.761 161.685 li
457.877 160.633 li
458.02 159.551 li
458.056 159.624 li
458.127 159.875 li
458.172 159.658 li
458.556 156.418 li
458.609 156.669 li
459.377 165.849 li
459.511 168.441 li
459.573 168.135 li
459.591 168.125 li
459.654 168.603 li
459.716 168.97 li
459.77 168.682 li
459.823 168.401 li
459.868 168.621 li
460.047 171.097 li
460.547 179.274 li
460.591 179.387 li
460.618 179.304 li
460.85 177.95 li
460.886 178.113 li
461.752 185.726 li
461.85 185.318 li
461.904 185.834 li
462.198 190.781 li
462.296 190.761 li
462.377 191.812 li
462.511 193.485 li
462.555 193.382 li
462.6 193.273 li
462.627 193.385 li
462.877 195.997 li
463.029 195.747 li
463.118 195.237 li
463.18 195.343 li
463.27 196.086 li
463.662 199.954 li
463.707 199.947 li
463.761 200.352 li
463.93 204.239 li
464.43 215.124 li
464.787 221.249 li
465.18 225.773 li
465.243 225.625 li
465.296 225.497 li
465.323 225.585 li
465.394 226.934 li
465.885 239.101 li
466.064 240.148 li
466.091 240.109 li
466.1 240.067 li
466.198 239.594 li
466.252 239.749 li
466.394 239.999 li
466.412 239.993 li
466.546 239.88 li
466.564 239.968 li
466.957 244.376 li
467.046 243.728 li
467.073 243.652 li
467.091 243.716 li
467.376 246.589 li
467.618 247.958 li
467.716 248.161 li
467.787 248.707 li
468.332 254.972 li
468.457 255.869 li
468.716 258.636 li
468.778 258.599 li
468.796 258.669 li
468.966 260.343 li
469.073 259.821 li
469.26 258.514 li
469.287 258.612 li
469.439 260.95 li
469.537 260.02 li
469.867 258.21 li
469.948 258.319 li
470.1 259.589 li
470.457 263.154 li
470.501 263.115 li
470.546 263.444 li
471.367 276.026 li
471.466 275.36 li
471.724 273.494 li
471.76 273.301 li
471.796 273.452 li
471.912 275.858 li
472.207 279.699 li
472.305 281.111 li
472.59 286.285 li
472.644 286.632 li
472.876 288.82 li
472.93 288.65 li
472.965 288.57 li
473.019 288.671 li
473.18 289.238 li
473.483 292.033 li
473.555 291.803 li
473.626 291.449 li
473.68 291.699 li
473.742 291.911 li
473.805 291.822 li
473.849 291.802 li
473.876 291.852 li
473.965 292.6 li
474.117 293.761 li
474.162 293.539 li
474.528 290.29 li
474.564 290.435 li
474.742 291.45 li
474.778 291.355 li
475.358 288.081 li
475.438 288.355 li
475.483 288.462 li
475.519 288.372 li
475.662 287.499 li
475.715 287.855 li
475.903 290.001 li
475.965 289.7 li
476.135 287.41 li
476.233 287.911 li
476.331 288.868 li
476.644 292.331 li
476.84 293.798 li
476.894 293.346 li
477.019 292.404 li
477.063 292.549 li
477.171 293.211 li
477.224 292.969 li
477.269 292.739 li
477.304 292.938 li
477.429 294.097 li
477.492 293.994 li
477.563 293.81 li
477.626 293.892 li
477.697 293.747 li
477.912 293.047 li
478.09 290.056 li
478.474 282.88 li
478.536 283.134 li
478.697 283.806 li
478.742 283.659 li
478.786 283.499 li
478.813 283.622 li
478.911 284.561 li
478.983 284.263 li
479.036 284.066 li
479.099 284.236 li
479.188 284.789 li
479.367 287.004 li
479.411 286.805 li
479.742 284.035 li
479.786 284.226 li
479.849 284.593 li
479.885 284.345 li
480.063 281.407 li
480.152 281.923 li
480.331 282.467 li
480.34 282.458 li
480.501 281.986 li
480.831 279.869 li
480.84 279.878 li
480.911 280.328 li
480.992 280.797 li
481.054 280.663 li
481.108 281.092 li
481.277 281.836 li
481.313 281.905 li
481.34 281.818 li
481.554 279.897 li
481.688 280.128 li
481.768 280.047 li
481.804 280.163 li
481.92 281.471 li
482.081 282.776 li
482.117 282.605 li
482.215 281.893 li
482.268 282.114 li
482.376 283.148 li
482.438 282.73 li
482.474 282.591 li
482.509 282.717 li
482.652 283.523 li
482.742 283.43 li
482.831 283.905 li
483.152 287.117 li
483.322 289.692 li
483.34 289.689 li
483.393 289.504 li
483.536 287.964 li
483.625 288.471 li
484.25 295.152 li
484.411 297.117 li
484.456 296.973 li
484.5 296.834 li
484.554 296.994 li
484.822 298.445 li
484.866 298.28 li
484.929 298.044 li
484.982 298.218 li
485.099 299.273 li
485.152 298.799 li
485.224 298.09 li
485.286 298.461 li
485.643 302.584 li
485.822 303.841 li
485.884 304.211 li
485.929 303.912 li
486.982 288.882 li
487.107 289.799 li
487.179 290.12 li
487.241 289.972 li
487.268 289.972 li
487.304 290.041 li
487.331 290.065 li
487.348 290.028 li
487.438 289.456 li
487.491 289.874 li
487.813 293.945 li
487.866 293.741 li
487.973 292.513 li
488.018 292.165 li
488.063 292.453 li
488.161 293.26 li
488.214 293.043 li
488.277 292.787 li
488.322 293.009 li
488.688 295.573 li
488.768 295.661 li
488.804 295.591 li
488.973 294.75 li
489.214 292.708 li
489.259 292.911 li
489.42 293.889 li
489.491 293.773 li
489.804 295.391 li
489.857 294.837 li
490.036 293.43 li
490.08 293.433 li
490.107 293.495 li
490.196 293.83 li
490.25 293.628 li
490.473 292.43 li
490.527 292.609 li
490.58 292.744 li
490.625 292.614 li
490.759 291.324 li
490.83 291.912 li
491.179 295.942 li
491.241 295.24 li
491.536 291.317 li
491.571 291.374 li
491.607 291.417 li
491.652 291.343 li
491.937 290.339 li
491.964 290.265 li
491.982 290.319 li
492.446 292.876 li
492.464 292.846 li
492.58 292.131 li
492.696 291.524 li
492.741 291.581 li
492.821 291.746 li
492.875 291.652 li
492.964 290.771 li
493.107 290.412 li
493.366 288.957 li
493.5 287.089 li
493.562 287.461 li
493.634 287.908 li
493.687 287.648 li
493.768 287.166 li
493.821 287.435 li
494.285 291.835 li
494.312 291.718 li
494.884 286.64 li
494.91 286.705 li
495.009 287.311 li
495.089 287.231 li
495.16 286.338 li
495.428 282.676 li
495.446 282.711 li
495.562 283.548 li
495.634 283.789 li
495.687 283.657 li
495.991 282.263 li
496.053 282.547 li
496.223 284.654 li
496.392 287.252 li
496.464 286.739 li
496.5 286.613 li
496.517 286.685 li
496.696 287.92 li
496.75 287.641 li
497.33 282.018 li
497.571 281.206 li
497.651 280.726 li
497.812 278.592 li
498.499 268.254 li
498.651 267.398 li
498.785 265.589 li
498.848 265.603 li
498.919 265.313 li
499.223 263.549 li
499.276 263.672 li
499.41 264.829 li
499.517 265.59 li
499.571 265.516 li
499.598 265.515 li
499.624 265.572 li
499.687 265.715 li
499.723 265.604 li
499.803 264.173 li
499.946 261.09 li
500.008 261.463 li
501.08 271.181 li
501.106 271.242 li
501.124 271.193 li
501.428 269.958 li
501.446 269.986 li
501.589 271.025 li
501.696 270.692 li
501.767 270.845 li
501.847 271.472 li
502.097 273.469 li
502.321 273.698 li
502.392 274.576 li
502.562 275.814 li
502.615 275.641 li
502.651 275.545 li
502.669 275.625 li
502.767 277.603 li
503.026 280.914 li
503.178 282.297 li
503.213 282.187 li
503.678 278.701 li
503.829 277.806 li
503.883 277.648 li
503.919 277.766 li
504.017 279.47 li
504.213 281.391 li
504.222 281.384 li
504.356 281.025 li
504.428 280.611 li
504.481 280.826 li
504.633 282.14 li
504.99 286.374 li
505.008 286.4 li
505.026 286.36 li
505.329 285.336 li
505.338 285.338 li
505.383 285.583 li
505.544 287.248 li
505.624 286.972 li
505.704 286.539 li
505.749 286.77 li
505.883 288.609 li
505.963 288.204 li
506.169 286.846 li
506.24 287.18 li
506.258 287.216 li
506.267 287.203 li
506.338 286.489 li
506.794 281.7 li
506.838 281.567 li
506.874 281.688 li
507.383 285.166 li
507.615 287.41 li
507.731 287.352 li
507.838 286.489 li
507.901 286.784 li
508.07 287.904 li
508.124 287.804 li
508.213 287.257 li
508.267 287.577 li
508.32 287.861 li
508.383 287.634 li
508.392 287.626 li
508.401 287.637 li
508.463 288.252 li
508.633 290.194 li
508.677 290.049 li
508.713 289.93 li
508.749 290.024 li
508.793 290.158 li
508.829 290.019 li
509.043 287.858 li
509.151 286.311 li
509.195 286.709 li
509.401 289.802 li
509.481 289.592 li
509.695 288.233 li
510.695 276.63 li
510.775 276.804 li
510.981 277.661 li
511.061 278.35 li
511.115 277.994 li
511.177 277.591 li
511.222 277.864 li
511.517 280.133 li
511.534 280.097 li
511.713 278.899 li
511.865 278.08 li
511.891 278.132 li
512.025 278.84 li
512.079 278.494 li
512.222 276.704 li
512.293 277.04 li
512.436 277.996 li
512.508 277.628 li
512.525 277.567 li
512.543 277.596 li
512.641 278.796 li
512.802 280.056 li
512.847 279.95 li
513.052 278.816 li
513.124 279.073 li
513.284 280.07 li
513.338 279.715 li
513.436 279.088 li
513.499 279.117 li
513.543 278.99 li
513.641 278.107 li
513.695 278.653 li
514.07 283.787 li
514.079 283.781 li
514.15 283.456 li
514.365 280.838 li
514.74 276.066 li
514.9 275.393 li
515.141 271.623 li
515.32 268.597 li
515.373 268.606 li
515.436 268.381 li
515.552 266.562 li
515.686 264.702 li
515.739 264.937 li
515.802 265.251 li
515.864 265.057 li
516.097 263.821 li
516.141 263.579 li
516.195 263.786 li
516.239 263.96 li
516.266 263.815 li
516.489 261.631 li
516.57 261.699 li
516.677 260.503 li
516.864 257.747 li
517.132 254.687 li
517.257 253.998 li
517.704 249.306 li
517.757 249.527 li
517.846 250.178 li
517.9 249.803 li
518.4 242.625 li
/1 
[/DeviceCMYK] /CSA add_res
0 1 1 0 cmyk
@
grestore
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
1 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
72 384.474 mo
72.0357 382.474 li
72.1339 372.493 li
72.1875 376.363 li
72.2589 382.671 li
72.3125 378.706 li
72.3928 370.114 li
72.4464 373.506 li
72.5267 380.769 li
72.5803 376.494 li
72.6607 368.652 li
72.7142 372.515 li
72.7857 378.739 li
72.8392 374.535 li
72.9285 365.058 li
72.9821 368.851 li
73.0446 374.022 li
73.0981 370.345 li
73.1874 360.563 li
73.241 364.248 li
73.3124 370.697 li
73.366 366.917 li
73.4553 358.274 li
73.5088 362.542 li
73.5803 368.212 li
73.6249 364.723 li
73.7142 354.806 li
73.7677 358.226 li
73.8392 364.356 li
73.8927 360.441 li
73.982 351.875 li
74.0267 355.332 li
74.107 362.987 li
74.1606 359.057 li
74.2409 351.541 li
74.2945 355.608 li
74.3659 362.381 li
74.4195 358.698 li
74.5088 349.961 li
74.5623 354.277 li
74.6338 360.447 li
74.6873 356.368 li
74.7677 348.859 li
74.8213 353.159 li
74.9016 360.624 li
74.9552 356.33 li
75.0266 349.491 li
75.0802 352.96 li
75.1605 360.337 li
75.2141 356.046 li
75.2944 347.771 li
75.348 351.422 li
75.4194 358.055 li
75.473 354.528 li
75.5623 346.2 li
75.6069 349.669 li
75.6873 357.412 li
75.7408 353.461 li
75.8212 345.502 li
75.8747 349.169 li
75.9462 355.575 li
75.9997 351.656 li
76.089 342.282 li
76.1426 346.224 li
76.214 352.138 li
76.2587 349.062 li
76.3479 339.863 li
76.4015 343.744 li
76.4819 350.778 li
76.5265 347.34 li
76.6158 338.587 li
76.6693 342.682 li
76.7408 348.565 li
76.7854 345.326 li
76.8747 335.494 li
76.9283 338.985 li
77.0086 345.757 li
77.0532 342.379 li
77.1425 334.119 li
77.1872 337.605 li
77.2675 345.568 li
77.3211 341.807 li
77.4014 333.91 li
77.455 337.614 li
77.5354 344.366 li
77.58 340.819 li
77.6693 331.931 li
77.7228 336.205 li
77.7943 342.814 li
77.8478 339.125 li
77.9282 331.611 li
77.9818 335.732 li
78.0621 343.236 li
78.1157 338.902 li
78.196 331.417 li
78.2496 335.515 li
78.321 341.608 li
78.3746 337.346 li
78.4549 328.779 li
78.5085 332.256 li
78.5889 339.163 li
78.6335 335.867 li
78.7228 327.273 li
78.7764 331.548 li
78.8478 337.956 li
78.9013 333.833 li
78.9906 325.009 li
79.0442 329.131 li
79.1067 334.213 li
79.1603 330.261 li
79.2495 320.46 li
79.3031 324.171 li
79.3745 330.235 li
79.4281 326.145 li
79.5084 317.711 li
79.562 321.153 li
79.6334 327.853 li
79.687 324.261 li
79.7763 314.597 li
79.8299 318.139 li
79.9013 323.844 li
79.9459 320.64 li
80.0441 310.596 li
80.0977 315.085 li
80.1691 321.082 li
80.2138 317.969 li
80.303 309.53 li
80.3566 313.898 li
80.428 320.698 li
80.4816 316.966 li
80.562 308.667 li
80.6155 312.131 li
80.6959 319.212 li
80.7405 316.054 li
80.8298 307.587 li
80.8744 310.951 li
80.9637 319.627 li
81.0173 315.451 li
81.0887 309.385 li
81.1423 313.597 li
81.2226 321.631 li
81.2762 317.701 li
81.3565 310.41 li
81.4101 314.686 li
81.4815 321.601 li
81.5351 318.147 li
81.6155 310.444 li
81.669 314.455 li
81.7494 322.599 li
81.8029 318.931 li
81.8833 312.038 li
81.9279 315.335 li
82.0083 323.451 li
82.0619 319.774 li
82.1511 311.165 li
82.2047 315.45 li
82.2761 321.198 li
82.3208 317.889 li
82.41 308.711 li
82.4636 312.688 li
82.535 319.4 li
82.5886 315.734 li
82.6779 307.162 li
82.7315 311.383 li
82.794 316.872 li
82.8475 313.221 li
82.9457 302.895 li
82.9993 307.048 li
83.0618 311.698 li
83.1064 308.57 li
83.2046 298.078 li
83.2582 302.184 li
83.3296 307.936 li
83.3743 304.592 li
83.4636 294.918 li
83.5171 298.332 li
83.5885 304.192 li
83.6332 301.04 li
83.7314 290.01 li
83.785 293.705 li
83.8564 299.054 li
83.901 295.585 li
83.9903 286.041 li
84.0439 289.83 li
84.1153 296.553 li
84.1689 292.965 li
84.2581 284.304 li
84.3117 288.506 li
84.3831 294.28 li
84.4278 290.889 li
84.5171 281.065 li
84.5706 284.567 li
84.6421 291.046 li
84.6956 287.445 li
84.776 279.086 li
84.8295 282.564 li
84.9099 290.346 li
84.9635 286.421 li
85.0438 278.545 li
85.0974 282.3 li
85.1688 288.819 li
85.2224 285 li
85.3116 275.865 li
85.3652 279.962 li
85.4366 286.054 li
85.4902 281.94 li
85.5706 274.089 li
85.6241 278.074 li
85.7045 285.158 li
85.7491 281.744 li
85.8384 272.988 li
85.892 277.053 li
85.9634 282.842 li
86.008 279.518 li
86.0973 269.575 li
86.1509 272.991 li
86.2223 279.578 li
86.2759 276.095 li
86.3652 267.602 li
86.4098 270.927 li
86.4901 278.605 li
86.5437 274.619 li
86.6241 266.414 li
86.6776 269.937 li
86.7491 276.44 li
86.8026 272.739 li
86.8919 263.7 li
86.9455 267.925 li
87.0169 274.486 li
87.0705 270.791 li
87.1508 263.344 li
87.2044 267.554 li
87.2847 275.214 li
87.3383 271.021 li
87.4187 263.865 li
87.4633 267.121 li
87.5436 274.763 li
87.5972 270.884 li
87.6776 263.012 li
87.7311 267.019 li
87.8115 274.772 li
87.8651 270.889 li
87.9365 264.362 li
87.9901 268.122 li
88.0793 276.594 li
88.124 273.119 li
88.2043 265.355 li
88.2579 269.107 li
88.3382 276.174 li
88.3829 272.841 li
88.4722 264.195 li
88.5257 268.578 li
88.5972 275.46 li
88.6507 271.934 li
88.7311 264.282 li
88.7846 268.163 li
88.865 275.389 li
88.9096 272.003 li
88.9989 262.707 li
89.0525 266.398 li
89.1239 272.193 li
89.1685 269.016 li
89.2668 258.858 li
89.3203 263.203 li
89.3917 268.868 li
89.4364 265.456 li
89.5257 256.334 li
89.5792 260.199 li
89.6507 266.204 li
89.6953 263.046 li
89.7935 252.38 li
89.8471 256.209 li
89.9096 261.199 li
89.9631 257.303 li
90.0524 247.512 li
90.106 251.254 li
90.1774 257.562 li
90.231 253.674 li
90.3113 245.28 li
90.3649 248.663 li
90.4453 255.475 li
90.4899 251.992 li
90.5792 242.407 li
90.6327 246.05 li
90.7042 252.195 li
90.7577 248.237 li
90.8381 239.916 li
90.8916 243.596 li
90.972 251.335 li
91.0256 247.455 li
91.1059 240.367 li
91.1506 243.623 li
91.2309 251.739 li
91.2845 248.146 li
91.3648 239.848 li
91.4184 243.307 li
91.4987 250.658 li
91.5523 246.568 li
91.6327 239.334 li
91.6773 242.671 li
91.7666 251.365 li
91.8202 247.099 li
91.8916 240.573 li
91.9452 244.31 li
92.0255 251.763 li
92.0791 247.443 li
92.1594 239.359 li
92.213 243.119 li
92.2844 249.578 li
92.338 245.84 li
92.4183 237.463 li
92.4719 240.94 li
92.5523 248.397 li
92.6058 244.214 li
92.6862 236.208 li
92.7397 239.852 li
92.8112 245.921 li
92.8647 241.656 li
92.954 231.951 li
93.0076 235.658 li
93.0701 240.952 li
93.1236 237.425 li
93.2129 227.633 li
93.2665 231.201 li
93.3379 237.525 li
93.3915 233.577 li
93.4808 224.246 li
93.5343 228.001 li
93.5968 233.183 li
93.6504 229.374 li
93.7486 218.687 li
93.8022 222.765 li
93.8647 227.584 li
93.9182 223.49 li
94.0075 214.34 li
94.0611 218.487 li
94.1325 224.43 li
94.1772 221.225 li
94.2754 211.453 li
94.32 214.752 li
94.3914 220.687 li
94.445 216.467 li
94.5343 206.761 li
94.5878 210.559 li
94.6593 216.282 li
94.7039 213.105 li
94.7932 203.742 li
94.8467 207.502 li
94.9182 214.249 li
94.9717 210.625 li
95.061 201.499 li
95.1146 205.35 li
95.186 210.855 li
95.2307 207.366 li
95.3289 197.1 li
95.3824 201.404 li
95.4449 206.661 li
95.4985 202.951 li
95.5878 194.031 li
95.6413 198.191 li
95.7128 204.247 li
95.7574 201.053 li
95.8556 190.972 li
95.9092 195.069 li
95.9717 199.887 li
96.0252 195.67 li
96.1145 185.747 li
96.1681 189.415 li
96.2395 195.185 li
96.2842 192.03 li
96.3734 182.423 li
96.427 185.94 li
96.4984 192.528 li
96.552 188.818 li
96.6413 179.3 li
96.6948 182.949 li
96.7663 188.518 li
96.8109 185.171 li
96.9002 175.135 li
96.9538 178.552 li
97.0341 185.461 li
97.0788 182.204 li
97.168 173.866 li
97.2127 177.203 li
97.293 185.092 li
97.3466 181.281 li
97.4269 173.137 li
97.4805 176.728 li
97.5609 183.669 li
97.6055 180.37 li
97.6948 171.924 li
97.7394 175.327 li
97.8287 183.781 li
97.8733 180.567 li
97.9537 173.514 li
97.9983 176.685 li
98.0876 185.828 li
98.1412 181.82 li
98.2215 174.693 li
98.2662 177.929 li
98.3465 185.85 li
98.4001 182.23 li
98.4804 174.538 li
98.534 178.611 li
98.6144 186.589 li
98.6679 182.799 li
98.7394 176.051 li
98.7929 179.497 li
98.8733 187.616 li
98.9268 183.885 li
99.0072 175.489 li
99.0608 178.818 li
99.1411 185.547 li
99.1858 182.129 li
99.275 173.065 li
99.3286 177.16 li
99.4 183.816 li
99.4536 180.101 li
99.534 171.819 li
99.5875 175.197 li
99.6679 181.867 li
99.7125 178.238 li
99.8018 168.284 li
99.8554 171.649 li
99.9268 177.353 li
99.9714 174.214 li
100.07 164.056 li
100.123 168.408 li
100.195 174.285 li
100.239 171.019 li
100.329 161.887 li
100.382 165.699 li
100.454 171.864 li
100.507 167.684 li
100.596 158.503 li
100.65 162.585 li
100.721 168.195 li
100.766 164.866 li
100.855 155.932 li
100.909 160.162 li
100.989 167.318 li
101.034 163.981 li
101.114 156.151 li
101.168 159.821 li
101.248 167.289 li
101.302 163.066 li
101.382 155.265 li
101.436 159.323 li
101.516 166.318 li
101.561 162.997 li
101.641 155.432 li
101.695 159.503 li
101.775 167.923 li
101.828 164.422 li
101.909 157.501 li
101.953 160.785 li
102.043 169.098 li
102.087 165.656 li
102.168 157.451 li
102.221 160.96 li
102.302 168.666 li
102.355 164.854 li
102.436 157.741 li
102.48 161.082 li
102.569 169.871 li
102.623 165.599 li
102.694 158.791 li
102.748 162.259 li
102.828 169.573 li
102.882 165.251 li
102.962 157.057 li
103.016 160.814 li
103.087 167.563 li
103.141 164.13 li
103.221 155.999 li
103.275 159.583 li
103.355 167.396 li
103.409 163.452 li
103.489 155.567 li
103.543 159.313 li
103.614 165.811 li
103.668 162.011 li
103.757 153.047 li
103.81 157.301 li
103.882 163.616 li
103.935 159.695 li
104.016 152.2 li
104.069 156.43 li
104.15 163.849 li
104.194 160.619 li
104.284 152.332 li
104.328 155.609 li
104.409 162.965 li
104.462 158.817 li
104.543 150.801 li
104.596 154.731 li
104.676 162.072 li
104.73 157.907 li
104.801 151.298 li
104.855 155.076 li
104.935 163.33 li
104.989 159.694 li
105.069 152.015 li
105.123 155.859 li
105.203 162.741 li
105.248 159.28 li
105.337 150.681 li
105.382 154.008 li
105.462 161.881 li
105.516 158.256 li
105.596 150.846 li
105.65 154.974 li
105.73 162.319 li
105.775 159.017 li
105.864 150.218 li
105.917 154.248 li
105.989 160.23 li
106.034 157.134 li
106.123 147.493 li
106.176 151.09 li
106.257 158.116 li
106.301 154.88 li
106.391 146.496 li
106.435 149.777 li
106.516 157.389 li
106.569 153.352 li
106.658 144.88 li
106.703 148.23 li
106.775 154.751 li
106.828 151.19 li
106.917 142.308 li
106.971 146.648 li
107.042 153.522 li
107.096 150.054 li
107.176 142.669 li
107.23 146.81 li
107.31 154.479 li
107.364 150.317 li
107.444 143.096 li
107.489 146.364 li
107.569 154.37 li
107.623 150.896 li
107.703 143.611 li
107.748 146.839 li
107.837 156.622 li
107.891 153.296 li
107.962 147.307 li
108.016 151.396 li
108.105 160.597 li
108.158 156.456 li
108.23 150.451 li
108.274 153.576 li
108.364 162.969 li
108.417 159.401 li
108.489 153.173 li
108.542 157.257 li
108.632 166.915 li
108.685 163.219 li
108.757 157.768 li
108.801 161.155 li
108.89 170.762 li
108.944 167.009 li
109.024 160.066 li
109.069 163.418 li
109.158 171.725 li
109.203 168.402 li
109.283 160.988 li
109.337 165.169 li
109.417 173.362 li
109.471 169.642 li
109.551 162.706 li
109.596 165.96 li
109.676 173.857 li
109.73 170.029 li
109.819 161.396 li
109.864 164.653 li
109.944 171.512 li
109.989 168.253 li
110.078 159.383 li
110.131 163.572 li
110.203 170.443 li
110.256 166.873 li
110.337 158.619 li
110.39 161.978 li
110.471 168.791 li
110.515 165.34 li
110.605 155.715 li
110.658 159.369 li
110.73 165.694 li
110.783 161.915 li
110.864 153.706 li
110.917 157.387 li
110.998 165.097 li
111.051 161.114 li
111.131 153.648 li
111.185 157.731 li
111.256 164.37 li
111.31 160.598 li
111.39 152.053 li
111.444 155.431 li
111.524 162.888 li
111.578 158.937 li
111.658 151.82 li
111.703 155.173 li
111.792 163.907 li
111.846 159.61 li
111.917 152.913 li
111.971 156.506 li
112.051 163.907 li
112.105 159.653 li
112.185 151.75 li
112.238 155.737 li
112.319 162.693 li
112.363 159.356 li
112.444 151.526 li
112.497 155.307 li
112.578 163.208 li
112.631 159.266 li
112.712 151.489 li
112.765 155.296 li
112.837 161.71 li
112.89 157.803 li
112.98 148.82 li
113.033 153.054 li
113.105 159.16 li
113.158 155.031 li
113.238 147.328 li
113.292 151.394 li
113.372 158.332 li
113.417 154.78 li
113.506 146.025 li
113.56 150.138 li
113.631 155.861 li
113.676 152.519 li
113.765 142.908 li
113.819 146.62 li
113.899 153.468 li
113.944 150.107 li
114.024 142.079 li
114.078 145.685 li
114.158 153.521 li
114.212 149.588 li
114.292 141.706 li
114.346 145.498 li
114.417 152.193 li
114.47 148.638 li
114.56 140.202 li
114.604 143.654 li
114.685 151.67 li
114.738 148.118 li
114.819 141.038 li
114.863 144.29 li
114.953 153.02 li
115.006 148.68 li
115.087 141.537 li
115.131 144.793 li
115.212 152.196 li
115.265 148.108 li
115.345 140.193 li
115.399 144.187 li
115.479 151.541 li
115.533 147.289 li
115.604 140.416 li
115.658 143.874 li
115.738 151.506 li
115.792 147.363 li
115.872 138.871 li
115.926 142.202 li
115.997 148.43 li
116.051 144.552 li
116.14 135.326 li
116.194 139.409 li
116.265 145.61 li
116.319 141.519 li
116.399 133.303 li
116.453 136.85 li
116.524 143.295 li
116.578 139.415 li
116.667 129.704 li
116.72 133.291 li
116.792 138.798 li
116.836 135.469 li
116.926 125.615 li
116.979 129.16 li
117.06 136.104 li
117.104 132.79 li
117.194 124.297 li
117.247 128.615 li
117.319 134.978 li
117.372 130.883 li
117.452 122.522 li
117.506 126.064 li
117.586 132.993 li
117.631 129.754 li
117.711 121.674 li
117.765 125.337 li
117.854 134.067 li
117.908 129.856 li
117.979 124.065 li
118.024 127.307 li
118.113 136.473 li
118.167 132.511 li
118.238 125.712 li
118.292 129.283 li
118.381 137.82 li
118.435 133.581 li
118.506 127.935 li
118.551 131.422 li
118.64 141.462 li
118.693 138.135 li
118.765 132.057 li
118.818 135.985 li
118.908 144.667 li
118.952 141.3 li
119.033 133.818 li
119.086 137.874 li
119.167 145.674 li
119.22 141.822 li
119.292 135.27 li
119.345 139.06 li
119.434 147.913 li
119.488 143.612 li
119.559 137.348 li
119.613 141.292 li
119.693 148.596 li
119.738 145.327 li
119.827 136.439 li
119.881 140.558 li
119.952 147.17 li
120.006 143.523 li
120.086 135.79 li
120.14 139.767 li
120.22 147.482 li
120.274 143.397 li
120.354 136.028 li
120.408 140.19 li
120.479 146.612 li
120.533 142.63 li
120.613 134.16 li
120.667 137.647 li
120.747 144.927 li
120.8 140.82 li
120.881 133.805 li
120.925 137.268 li
121.015 145.759 li
121.059 142.403 li
121.14 134.641 li
121.193 138.348 li
121.274 145.602 li
121.318 142.421 li
121.408 133.685 li
121.461 137.97 li
121.541 145.051 li
121.586 141.766 li
121.666 134.404 li
121.72 138.552 li
121.8 146.589 li
121.854 142.687 li
121.934 135.379 li
121.988 139.535 li
122.059 146.114 li
122.113 142.295 li
122.193 133.921 li
122.247 137.452 li
122.327 144.91 li
122.381 140.881 li
122.461 133.687 li
122.506 136.9 li
122.586 144.996 li
122.64 141.349 li
122.729 132.812 li
122.774 136 li
122.854 142.637 li
122.899 139.175 li
122.988 129.732 li
123.041 133.593 li
123.113 140.239 li
123.166 136.67 li
123.247 128.605 li
123.3 132.226 li
123.381 139.623 li
123.434 135.318 li
123.515 127.311 li
123.568 131.076 li
123.64 137.436 li
123.693 133.608 li
123.773 125.228 li
123.827 128.84 li
123.907 136.723 li
123.961 133.043 li
124.041 126.222 li
124.086 129.659 li
124.175 138.39 li
124.229 134.05 li
124.3 127.364 li
124.354 131.07 li
124.434 138.882 li
124.488 135.107 li
124.568 128.216 li
124.613 131.764 li
124.702 141.171 li
124.756 137.47 li
124.827 131.714 li
124.872 134.889 li
124.961 144.684 li
125.014 141.167 li
125.095 134.119 li
125.139 137.351 li
125.229 145.894 li
125.282 141.64 li
125.354 135.236 li
125.407 139.298 li
125.488 147.833 li
125.541 144.463 li
125.622 137.668 li
125.666 140.981 li
125.755 149.409 li
125.8 145.978 li
125.889 137.478 li
125.934 140.702 li
126.014 147.863 li
126.068 143.644 li
126.148 135.819 li
126.202 139.877 li
126.282 146.991 li
126.327 143.648 li
126.416 135.377 li
126.461 138.655 li
126.541 145.743 li
126.586 142.45 li
126.675 132.64 li
126.729 136.054 li
126.8 142.362 li
126.854 138.622 li
126.943 130.062 li
126.988 133.45 li
127.068 141.21 li
127.121 137.364 li
127.202 129.718 li
127.255 133.678 li
127.327 140.509 li
127.38 136.948 li
127.47 128.269 li
127.523 132.643 li
127.595 139.129 li
127.648 135.367 li
127.729 128.175 li
127.773 131.526 li
127.862 140.76 li
127.916 136.899 li
127.987 130.522 li
128.041 134.336 li
128.121 142.499 li
128.175 138.818 li
128.255 131.359 li
128.309 135.595 li
128.389 143.344 li
128.443 139.449 li
128.514 133.26 li
128.568 137.411 li
128.657 146.369 li
128.711 142.097 li
128.782 136.264 li
128.827 139.45 li
128.916 148.072 li
128.97 143.731 li
129.05 136.664 li
129.095 140.117 li
129.175 148.181 li
129.228 144.686 li
129.309 137.578 li
129.353 140.817 li
129.443 149.845 li
129.496 145.753 li
129.577 138.767 li
129.621 142.075 li
129.702 149.569 li
129.755 145.494 li
129.836 137.331 li
129.889 141.082 li
129.969 148.289 li
130.023 144.059 li
130.094 137.222 li
130.148 140.815 li
130.228 149.002 li
130.282 145.376 li
130.362 137.576 li
130.416 141.323 li
130.496 148.228 li
130.541 144.825 li
130.63 136.169 li
130.684 140.589 li
130.755 147.478 li
130.809 144.03 li
130.889 136.814 li
130.943 141.112 li
131.023 148.943 li
131.077 144.854 li
131.157 137.706 li
131.202 140.939 li
131.282 148.567 li
131.335 144.686 li
131.416 136.703 li
131.469 140.579 li
131.55 148.161 li
131.603 144.149 li
131.684 137.329 li
131.728 140.819 li
131.809 148.881 li
131.862 145.127 li
131.943 136.85 li
131.996 140.218 li
132.068 146.755 li
132.121 143.14 li
132.21 133.855 li
132.264 137.83 li
132.335 144.207 li
132.389 140.31 li
132.469 132.047 li
132.523 135.497 li
132.594 142.124 li
132.648 138.432 li
132.737 128.503 li
132.791 131.831 li
132.862 137.222 li
132.907 133.833 li
133.005 123.238 li
133.059 127.374 li
133.13 132.832 li
133.175 129.335 li
133.264 120.035 li
133.318 123.813 li
133.389 129.771 li
133.434 126.62 li
133.532 116.044 li
133.585 119.966 li
133.648 125.144 li
133.701 121.457 li
133.791 112.068 li
133.844 116.077 li
133.916 122.785 li
133.969 119.225 li
134.05 111.332 li
134.103 115.058 li
134.184 122.406 li
134.237 118.081 li
134.317 110.338 li
134.371 114.392 li
134.442 121.105 li
134.496 117.591 li
134.576 109.929 li
134.63 114.037 li
134.71 122.388 li
134.764 118.902 li
134.835 112.35 li
134.889 115.908 li
134.978 124.531 li
135.023 121.228 li
135.103 113.377 li
135.157 117.123 li
135.237 124.877 li
135.291 121.049 li
135.362 114.193 li
135.416 117.715 li
135.505 126.727 li
135.558 122.632 li
135.63 116.32 li
135.683 120.198 li
135.764 127.835 li
135.817 123.644 li
135.898 115.794 li
135.951 119.717 li
136.023 126.396 li
136.076 122.842 li
136.157 114.78 li
136.21 118.478 li
136.291 126.263 li
136.344 122.313 li
136.424 114.713 li
136.478 118.648 li
136.549 125.127 li
136.603 121.211 li
136.692 112.204 li
136.746 116.376 li
136.817 122.312 li
136.862 119.232 li
136.951 110.422 li
137.005 114.61 li
137.085 121.798 li
137.13 118.472 li
137.219 110.32 li
137.264 113.703 li
137.344 120.948 li
137.398 116.656 li
137.478 108.628 li
137.532 112.539 li
137.612 119.587 li
137.657 116.374 li
137.737 108.735 li
137.79 112.695 li
137.871 121.113 li
137.924 117.626 li
138.005 110.507 li
138.049 113.631 li
138.139 122.003 li
138.183 118.706 li
138.264 110.626 li
138.317 114.258 li
138.398 122.463 li
138.451 119.055 li
138.531 112.33 li
138.576 115.825 li
138.665 125.132 li
138.719 121.183 li
138.79 114.607 li
138.844 118.229 li
138.924 126.075 li
138.978 122.21 li
139.058 114.566 li
139.112 118.714 li
139.192 126.313 li
139.246 122.295 li
139.317 115.873 li
139.371 119.773 li
139.451 128.208 li
139.505 124.67 li
139.585 117.13 li
139.639 121.086 li
139.719 128.137 li
139.764 124.776 li
139.853 116.441 li
139.897 119.892 li
139.978 128.096 li
140.031 124.717 li
140.112 117.731 li
140.156 121.048 li
140.246 130.184 li
140.299 126.167 li
140.371 119.338 li
140.424 122.796 li
140.505 130.778 li
140.558 127.157 li
140.638 119.794 li
140.692 124.179 li
140.772 132.46 li
140.826 128.938 li
140.897 122.962 li
140.951 127.142 li
141.04 136.262 li
141.094 132.057 li
141.165 126.135 li
141.21 129.297 li
141.299 138.389 li
141.353 134.55 li
141.424 128.139 li
141.478 132.126 li
141.567 141.42 li
141.621 137.558 li
141.692 132.184 li
141.737 135.681 li
141.826 145.323 li
141.879 141.564 li
141.951 134.805 li
142.004 138.245 li
142.085 146.395 li
142.138 142.907 li
142.219 135.445 li
142.272 139.642 li
142.353 147.702 li
142.406 143.94 li
142.478 137.252 li
142.531 140.727 li
142.612 148.798 li
142.665 145.038 li
142.745 136.686 li
142.799 140.057 li
142.879 146.824 li
142.924 143.438 li
143.013 134.562 li
143.067 138.797 li
143.138 145.612 li
143.192 142.034 li
143.272 134.072 li
143.326 137.687 li
143.406 144.702 li
143.451 141.295 li
143.54 131.943 li
143.594 135.727 li
143.665 142 li
143.719 138.141 li
143.799 130.049 li
143.853 133.869 li
143.933 141.727 li
143.986 137.909 li
144.067 130.961 li
144.111 134.335 li
144.201 142.575 li
144.245 139.094 li
144.326 131.177 li
144.379 134.951 li
144.46 142.815 li
144.513 139.14 li
144.585 132.642 li
144.638 136.512 li
144.727 146.141 li
144.781 142.479 li
144.852 136.88 li
144.897 140.151 li
144.986 149.961 li
145.04 146.49 li
145.12 139.872 li
145.165 143.489 li
145.254 152.778 li
145.308 149.053 li
145.379 143.567 li
145.424 147.059 li
145.522 157.752 li
145.576 153.753 li
145.638 148.707 li
145.692 152.522 li
145.781 161.716 li
145.835 157.631 li
145.906 151.331 li
145.96 155.391 li
146.04 163.851 li
146.093 160.542 li
146.165 154.191 li
146.218 158.005 li
146.308 167.584 li
146.361 163.782 li
146.433 157.646 li
146.486 161.622 li
146.567 169.653 li
146.62 165.834 li
146.701 158.496 li
146.754 162.837 li
146.835 170.43 li
146.888 166.418 li
146.959 160.299 li
147.013 164.52 li
147.102 173.242 li
147.147 169.904 li
147.227 163.017 li
147.272 166.266 li
147.361 174.854 li
147.415 170.542 li
147.486 163.857 li
147.54 167.69 li
147.629 176.201 li
147.674 172.986 li
147.745 166.588 li
147.799 170.314 li
147.888 180.013 li
147.942 176.313 li
148.013 170.12 li
148.067 174.057 li
148.147 182.379 li
148.2 178.875 li
148.281 171.871 li
148.325 175.24 li
148.415 184.698 li
148.468 181.122 li
148.54 175.3 li
148.584 178.427 li
148.683 188.693 li
148.736 184.4 li
148.808 178.523 li
148.852 181.673 li
148.941 190.356 li
148.995 186.148 li
149.066 179.389 li
149.12 183.115 li
149.209 191.647 li
149.254 188.387 li
149.334 181.597 li
149.379 184.916 li
149.468 194.002 li
149.522 189.892 li
149.602 182.868 li
149.647 186.181 li
149.727 193.814 li
149.781 189.939 li
149.861 182.197 li
149.915 186.274 li
149.995 194.001 li
150.049 190.092 li
150.12 183.569 li
150.174 187.312 li
150.254 195.667 li
150.307 192.129 li
150.388 184.458 li
150.441 188.353 li
150.522 195.681 li
150.575 191.495 li
150.647 184.69 li
150.7 188.426 li
150.79 197.366 li
150.843 193.341 li
150.915 187.817 li
150.959 191.263 li
151.049 200.882 li
151.102 197.186 li
151.174 190.622 li
151.227 194.29 li
151.316 202.952 li
151.37 198.754 li
151.441 193.092 li
151.486 196.604 li
151.584 206.838 li
151.638 202.695 li
151.7 197.945 li
151.745 200.964 li
151.843 211.417 li
151.897 207.281 li
151.968 201.244 li
152.022 205.468 li
152.102 213.546 li
152.156 209.844 li
152.227 203.398 li
152.281 207.273 li
152.37 216.498 li
152.423 212.506 li
152.495 206.616 li
152.539 209.707 li
152.629 218.666 li
152.682 214.522 li
152.763 206.992 li
152.816 211.118 li
152.888 217.744 li
152.941 214.075 li
153.022 206.131 li
153.075 209.964 li
153.156 217.662 li
153.209 213.628 li
153.289 206.238 li
153.343 210.351 li
153.414 216.784 li
153.468 212.766 li
153.557 203.896 li
153.611 208.14 li
153.682 213.876 li
153.727 210.63 li
153.816 201.858 li
153.87 206.139 li
153.95 213.197 li
153.995 209.812 li
154.075 201.868 li
154.129 205.464 li
154.209 212.735 li
154.263 208.405 li
154.343 200.61 li
154.397 204.698 li
154.477 211.695 li
154.521 208.447 li
154.602 201.059 li
154.655 205.288 li
154.736 213.883 li
154.789 210.512 li
154.861 203.922 li
154.914 207.405 li
155.004 216.155 li
155.057 211.889 li
155.129 205.464 li
155.182 209.506 li
155.263 218.033 li
155.316 214.814 li
155.388 208.657 li
155.441 212.65 li
155.53 222.544 li
155.584 218.95 li
155.655 213.137 li
155.7 216.214 li
155.789 225.831 li
155.843 222.312 li
155.923 215.457 li
155.968 218.947 li
156.057 228.259 li
156.111 224.564 li
156.182 218.858 li
156.227 222.136 li
156.325 232.45 li
156.379 228.198 li
156.45 222.641 li
156.495 226.048 li
156.584 234.846 li
156.637 230.644 li
156.709 224.121 li
156.762 228.068 li
156.852 236.702 li
156.905 232.482 li
156.968 227.219 li
157.021 230.983 li
157.111 240.67 li
157.164 236.946 li
157.236 230.752 li
157.289 234.706 li
157.37 243.063 li
157.423 239.617 li
157.503 232.773 li
157.548 236.29 li
157.637 246.022 li
157.691 242.634 li
157.762 237.123 li
157.807 240.469 li
157.905 251.216 li
157.959 247.224 li
158.03 241.839 li
158.075 245.354 li
158.164 254.778 li
158.218 251.067 li
158.289 245.067 li
158.334 248.19 li
158.432 258.956 li
158.486 255.257 li
158.548 250.343 li
158.602 254.296 li
158.691 264.42 li
158.744 260.923 li
158.816 254.773 li
158.869 258.707 li
158.959 267.282 li
159.003 263.997 li
159.084 257.142 li
159.128 260.574 li
159.218 270.281 li
159.271 266.8 li
159.343 260.801 li
159.396 264.875 li
159.485 273.59 li
159.53 270.204 li
159.61 262.719 li
159.664 266.698 li
159.744 274.041 li
159.798 269.802 li
159.869 262.902 li
159.923 266.518 li
160.012 275.091 li
160.057 271.862 li
160.137 264.83 li
160.182 267.975 li
160.271 276.884 li
160.325 272.73 li
160.405 265.548 li
160.45 268.841 li
160.53 276.79 li
160.584 273.278 li
160.664 266.01 li
160.709 269.22 li
160.798 278.873 li
160.851 275.443 li
160.923 269.347 li
160.976 273.348 li
161.066 282.342 li
161.119 278.113 li
161.191 272.105 li
161.235 275.247 li
161.325 284.764 li
161.378 281.338 li
161.45 275.421 li
161.494 278.538 li
161.592 289.874 li
161.655 285.459 li
161.709 281.45 li
161.762 285.187 li
161.86 295.48 li
161.914 291.137 li
161.976 286.035 li
162.03 290.011 li
162.119 299.458 li
162.173 295.759 li
162.235 290.526 li
162.289 294.255 li
162.387 305.023 li
162.441 301.04 li
162.503 296.228 li
162.557 300.282 li
162.646 309.452 li
162.7 305.272 li
162.771 299.055 li
162.825 303.167 li
162.905 311.316 li
162.958 307.725 li
163.03 301.257 li
163.083 305.041 li
163.173 314.213 li
163.226 310.137 li
163.298 303.911 li
163.351 307.847 li
163.432 315.454 li
163.485 311.267 li
163.566 303.634 li
163.619 307.778 li
163.699 314.71 li
163.744 311.36 li
163.824 303.761 li
163.878 307.784 li
163.958 315.919 li
164.012 312.174 li
164.092 305.009 li
164.137 308.157 li
164.217 316.16 li
164.271 312.593 li
164.351 304.414 li
164.405 308.049 li
164.485 315.924 li
164.539 312.275 li
164.61 305.604 li
164.664 309.23 li
164.753 318.466 li
164.807 314.49 li
164.878 308.253 li
164.932 312.216 li
165.012 320.251 li
165.065 316.498 li
165.146 309.45 li
165.19 312.842 li
165.28 322.003 li
165.333 318.243 li
165.405 312.525 li
165.449 315.814 li
165.548 326.081 li
165.601 321.807 li
165.673 316.28 li
165.717 319.681 li
165.807 328.49 li
165.86 324.303 li
165.931 317.859 li
165.985 321.871 li
166.074 330.517 li
166.119 327.318 li
166.19 320.955 li
166.244 324.659 li
166.333 334.103 li
166.387 330.186 li
166.458 323.742 li
166.512 327.489 li
166.592 335.446 li
166.646 331.694 li
166.726 324.44 li
166.771 327.687 li
166.86 336.806 li
166.914 333.012 li
166.985 326.966 li
167.039 331.139 li
167.119 339.823 li
167.172 336.441 li
167.253 329.315 li
167.297 332.444 li
167.387 341.084 li
167.44 336.93 li
167.512 330.428 li
167.565 334.424 li
167.655 343.389 li
167.708 339.363 li
167.771 334.137 li
167.824 337.851 li
167.913 347.575 li
167.967 343.879 li
168.038 337.58 li
168.092 341.465 li
168.181 350.005 li
168.226 346.754 li
168.306 340.084 li
168.351 343.675 li
168.44 353.673 li
168.503 349.349 li
168.565 344.713 li
168.61 347.843 li
168.708 358.149 li
168.762 353.867 li
168.833 347.904 li
168.878 351.044 li
168.967 359.934 li
169.021 355.947 li
169.092 349.404 li
169.146 353.26 li
169.235 362.07 li
169.288 357.823 li
169.36 351.928 li
169.404 355.064 li
169.494 363.737 li
169.547 359.353 li
169.628 351.772 li
169.681 355.863 li
169.753 362.097 li
169.806 358.065 li
169.887 349.923 li
169.94 353.679 li
170.021 360.941 li
170.065 357.747 li
170.154 349.14 li
170.208 353.253 li
170.279 359.375 li
170.333 355.062 li
170.422 346.062 li
170.476 350.211 li
170.538 355.492 li
170.592 351.882 li
170.681 342.826 li
170.735 346.996 li
170.806 353.627 li
170.86 349.898 li
170.94 341.816 li
170.994 345.386 li
171.074 352.259 li
171.119 348.797 li
171.208 339.589 li
171.262 343.543 li
171.333 350.005 li
171.386 346.311 li
171.467 338.585 li
171.52 342.658 li
171.601 350.7 li
171.654 346.931 li
171.735 340.117 li
171.779 343.516 li
171.86 351.676 li
171.913 348.126 li
171.994 340.198 li
172.047 343.994 li
172.128 351.741 li
172.181 347.936 li
172.253 341.298 li
172.306 345.001 li
172.395 354.02 li
172.449 349.87 li
172.52 343.618 li
172.574 347.553 li
172.654 355.12 li
172.708 350.919 li
172.788 343.329 li
172.842 347.506 li
172.922 354.426 li
172.967 351.015 li
173.047 343.366 li
173.101 347.297 li
173.181 355.125 li
173.235 351.12 li
173.315 343.539 li
173.369 347.474 li
173.44 353.792 li
173.493 349.755 li
173.583 340.83 li
173.636 345.089 li
173.708 350.979 li
173.752 347.837 li
173.842 339.01 li
173.895 343.125 li
173.967 349.91 li
174.02 346.238 li
174.11 337.584 li
174.163 341.764 li
174.235 347.331 li
174.279 343.872 li
174.368 334.245 li
174.422 337.961 li
174.493 344.561 li
174.547 341.031 li
174.627 332.992 li
174.681 336.641 li
174.761 344.303 li
174.815 340.247 li
174.895 332.434 li
174.949 336.27 li
175.02 342.788 li
175.074 339.048 li
175.163 330.544 li
175.208 333.979 li
175.288 341.711 li
175.342 337.963 li
175.422 330.86 li
175.467 334.132 li
175.556 342.696 li
175.609 338.253 li
175.69 331.179 li
175.734 334.497 li
175.815 341.75 li
175.868 337.54 li
175.949 329.666 li
176.002 333.706 li
176.083 340.95 li
176.127 337.769 li
176.208 329.964 li
176.261 333.623 li
176.342 341.396 li
176.395 337.369 li
176.475 329.305 li
176.529 332.941 li
176.6 339.412 li
176.654 335.701 li
176.743 327.009 li
176.788 330.323 li
176.868 338.018 li
176.922 334.235 li
177.002 326.768 li
177.056 330.867 li
177.136 337.956 li
177.181 334.526 li
177.27 325.828 li
177.324 330.03 li
177.395 336.189 li
177.449 332.115 li
177.529 324.371 li
177.583 328.525 li
177.663 336.207 li
177.716 332.258 li
177.788 325.836 li
177.841 329.672 li
177.922 337.977 li
177.975 334.396 li
178.056 326.924 li
178.109 331.021 li
178.19 338.518 li
178.243 334.476 li
178.315 328.054 li
178.368 332.093 li
178.457 341.232 li
178.511 337.247 li
178.574 331.852 li
178.627 335.335 li
178.716 344.735 li
178.77 340.844 li
178.841 334.175 li
178.895 337.787 li
178.975 346.106 li
179.029 342.762 li
179.109 335.796 li
179.154 339.132 li
179.243 348.666 li
179.297 345.007 li
179.368 338.579 li
179.422 342.234 li
179.502 350.319 li
179.556 346.531 li
179.636 338.404 li
179.69 341.991 li
179.77 348.894 li
179.815 345.574 li
179.904 337.037 li
179.948 340.296 li
180.029 348.154 li
180.082 344.384 li
180.163 336.213 li
180.216 339.638 li
180.288 346.084 li
180.341 342.265 li
180.431 332.422 li
180.484 335.944 li
180.556 341.663 li
180.6 338.529 li
180.689 328.724 li
180.743 332.149 li
180.823 339.018 li
180.868 335.606 li
180.957 326.41 li
181.011 330.169 li
181.082 335.998 li
181.127 332.784 li
181.225 322.437 li
181.279 326.624 li
181.35 332.16 li
181.395 328.789 li
181.484 320.081 li
181.538 324.419 li
181.609 331.31 li
181.663 327.74 li
181.743 319.725 li
181.797 323.292 li
181.877 330.296 li
181.922 326.963 li
182.011 317.981 li
182.064 322.109 li
182.136 328.927 li
182.189 325.505 li
182.27 317.998 li
182.323 322.105 li
182.404 330.131 li
182.457 326.258 li
182.538 319.064 li
182.582 322.187 li
182.663 329.959 li
182.716 326.183 li
182.796 317.854 li
182.85 321.402 li
182.93 328.882 li
182.984 324.876 li
183.064 317.764 li
183.109 321.072 li
183.189 329.327 li
183.243 325.825 li
183.323 317.531 li
183.377 320.823 li
183.457 327.604 li
183.502 324.157 li
183.591 314.732 li
183.645 318.559 li
183.716 325.132 li
183.77 321.517 li
183.85 313.396 li
183.904 316.98 li
183.984 324.348 li
184.037 320.02 li
184.118 311.906 li
184.171 315.553 li
184.243 321.687 li
184.296 317.64 li
184.386 308.815 li
184.43 312.102 li
184.511 319.446 li
184.564 315.412 li
184.645 308.034 li
184.698 312.298 li
184.779 319.306 li
184.823 315.786 li
184.912 307.334 li
184.957 310.589 li
185.037 317.618 li
185.082 314.45 li
185.171 305.452 li
185.225 309.563 li
185.305 316.784 li
185.35 313.576 li
185.43 305.899 li
185.484 309.665 li
185.564 317.415 li
185.618 313.358 li
185.698 305.426 li
185.752 309.168 li
185.823 315.642 li
185.877 311.905 li
185.966 303.342 li
186.011 306.726 li
186.091 314.299 li
186.144 310.36 li
186.225 302.734 li
186.278 306.677 li
186.35 313.309 li
186.403 309.484 li
186.493 300.2 li
186.546 304.015 li
186.618 309.45 li
186.662 306.001 li
186.752 296.193 li
186.805 299.753 li
186.877 306.301 li
186.93 302.665 li
187.019 293.864 li
187.073 297.964 li
187.144 303.668 li
187.189 300.237 li
187.287 290.001 li
187.341 294.17 li
187.403 299.095 li
187.457 295.115 li
187.546 286.064 li
187.6 290.327 li
187.671 296.684 li
187.725 292.725 li
187.805 284.881 li
187.859 288.704 li
187.939 295.452 li
187.984 291.844 li
188.073 282.919 li
188.126 287.081 li
188.198 293.343 li
188.251 289.421 li
188.332 281.891 li
188.385 286.174 li
188.466 294.023 li
188.519 290.085 li
188.591 283.532 li
188.644 287.188 li
188.725 295.186 li
188.778 291.406 li
188.859 283.616 li
188.912 287.534 li
188.993 294.858 li
189.046 290.685 li
189.118 284.004 li
189.171 287.758 li
189.26 296.232 li
189.305 292.827 li
189.385 285.416 li
189.439 289.356 li
189.519 296.316 li
189.564 292.823 li
189.653 283.749 li
189.707 287.739 li
189.778 293.866 li
189.832 289.786 li
189.912 281.649 li
189.966 285.342 li
190.046 292.247 li
190.091 288.793 li
190.18 279.546 li
190.234 283.212 li
190.305 288.647 li
190.35 285.117 li
190.448 274.218 li
190.501 278.063 li
190.564 282.986 li
190.617 279.034 li
190.707 269.42 li
190.76 273.158 li
190.832 278.971 li
190.876 275.726 li
190.975 265.199 li
191.028 269.02 li
191.091 273.732 li
191.135 270.657 li
191.233 259.056 li
191.296 263.395 li
191.358 267.953 li
191.403 264.768 li
191.501 254.873 li
191.555 259.299 li
191.617 264.865 li
191.671 261.309 li
191.76 251.762 li
191.814 255.318 li
191.885 260.934 li
191.93 257.64 li
192.028 247.26 li
192.082 251.486 li
192.153 257.084 li
192.198 253.738 li
192.287 244.928 li
192.341 249.085 li
192.412 255.58 li
192.465 251.616 li
192.555 242.882 li
192.608 247.038 li
192.671 252.303 li
192.724 248.562 li
192.814 238.891 li
192.867 242.622 li
192.939 248.875 li
192.992 244.976 li
193.073 236.648 li
193.126 240.087 li
193.207 246.935 li
193.251 243.455 li
193.34 233.75 li
193.394 237.167 li
193.465 242.794 li
193.51 239.56 li
193.608 229.104 li
193.662 233.277 li
193.733 238.957 li
193.778 235.655 li
193.867 226.623 li
193.921 230.561 li
193.992 236.9 li
194.046 232.846 li
194.135 223.797 li
194.189 227.83 li
194.26 233.198 li
194.305 229.677 li
194.394 220.329 li
194.448 224.308 li
194.519 231.121 li
194.573 227.692 li
194.653 219.847 li
194.706 223.59 li
194.787 231.142 li
194.84 226.951 li
194.921 219.171 li
194.974 223.126 li
195.046 229.773 li
195.099 226.199 li
195.18 218.224 li
195.233 222.077 li
195.314 230.235 li
195.367 226.657 li
195.447 219.849 li
195.492 223.224 li
195.581 231.66 li
195.626 228.274 li
195.706 220.063 li
195.76 223.477 li
195.84 230.829 li
195.894 226.718 li
195.974 219.245 li
196.028 223.56 li
196.108 230.892 li
196.153 227.674 li
196.233 219.783 li
196.287 223.311 li
196.367 230.577 li
196.412 227.332 li
196.501 217.718 li
196.555 221.198 li
196.626 227.37 li
196.68 223.453 li
196.769 214.682 li
196.813 217.939 li
196.894 225.221 li
196.947 221.01 li
197.028 212.929 li
197.081 216.546 li
197.153 222.724 li
197.206 218.61 li
197.296 209.083 li
197.349 212.894 li
197.421 218.451 li
197.465 215.158 li
197.554 205.835 li
197.608 209.726 li
197.688 216.688 li
197.733 213.301 li
197.822 204.967 li
197.867 208.257 li
197.947 215.476 li
198.001 211.193 li
198.081 203.026 li
198.135 206.807 li
198.215 213.789 li
198.26 210.566 li
198.34 202.853 li
198.394 206.772 li
198.483 215.337 li
198.528 212.015 li
198.608 205.08 li
198.653 208.305 li
198.742 216.975 li
198.795 212.706 li
198.867 205.888 li
198.92 209.545 li
199.001 217.871 li
199.054 214.58 li
199.135 207.935 li
199.179 211.483 li
199.269 221.043 li
199.322 217.294 li
199.394 210.889 li
199.447 214.59 li
199.528 222.585 li
199.581 218.807 li
199.661 211.101 li
199.715 215.123 li
199.795 222.601 li
199.849 218.5 li
199.92 211.871 li
199.974 215.59 li
200.054 223.829 li
200.108 220.201 li
200.188 212.39 li
200.242 216.08 li
200.322 222.749 li
200.367 219.124 li
200.456 210.064 li
200.51 214.177 li
200.581 220.542 li
200.635 216.677 li
200.715 208.876 li
200.769 212.78 li
200.849 219.969 li
200.894 216.618 li
200.983 207.716 li
201.036 211.666 li
201.108 217.604 li
201.152 214.486 li
201.242 204.751 li
201.295 208.272 li
201.376 215.322 li
201.42 212.147 li
201.51 203.922 li
201.554 207.299 li
201.635 215.227 li
201.688 211.452 li
201.768 203.288 li
201.822 206.78 li
201.902 213.505 li
201.947 210.064 li
202.036 201.214 li
202.09 205.495 li
202.161 212.312 li
202.215 208.809 li
202.295 201.272 li
202.349 205.259 li
202.429 212.698 li
202.483 208.348 li
202.563 200.643 li
202.617 204.586 li
202.688 210.748 li
202.742 206.666 li
202.822 198.247 li
202.876 201.806 li
202.956 209.054 li
203.009 204.834 li
203.09 197.497 li
203.143 201.726 li
203.215 208.216 li
203.268 204.202 li
203.358 195.367 li
203.411 199.508 li
203.474 204.849 li
203.527 201.248 li
203.617 191.905 li
203.67 195.867 li
203.742 202.443 li
203.795 198.761 li
203.875 190.661 li
203.929 194.205 li
204.009 201.221 li
204.054 197.864 li
204.143 188.491 li
204.197 192.217 li
204.268 198.449 li
204.322 194.568 li
204.402 186.377 li
204.456 190.118 li
204.536 197.947 li
204.59 194.176 li
204.67 187.285 li
204.715 190.657 li
204.804 199.007 li
204.849 195.582 li
204.929 187.639 li
204.983 191.322 li
205.063 199.027 li
205.116 195.239 li
205.188 188.502 li
205.241 192.158 li
205.331 201.517 li
205.384 197.72 li
205.456 191.88 li
205.5 194.969 li
205.59 204.433 li
205.643 200.728 li
205.724 193.617 li
205.768 196.857 li
205.857 205.409 li
205.911 201.211 li
205.982 194.999 li
206.036 199.188 li
206.116 207.725 li
206.17 204.294 li
206.25 197.437 li
206.295 200.673 li
206.375 208.863 li
206.429 205.327 li
206.518 196.81 li
206.563 200.067 li
206.643 207.295 li
206.697 203.143 li
206.777 195.495 li
206.831 199.62 li
206.911 206.646 li
206.956 203.217 li
207.045 194.719 li
207.098 198.919 li
207.17 204.587 li
207.215 201.12 li
207.304 191.105 li
207.366 195.496 li
207.429 200.629 li
207.482 196.811 li
207.572 188.115 li
207.616 191.372 li
207.697 198.758 li
207.75 194.589 li
207.831 186.415 li
207.884 189.975 li
207.956 196.253 li
208.009 192.315 li
208.098 183.12 li
208.152 187.219 li
208.223 193.358 li
208.277 189.351 li
208.357 181.772 li
208.411 185.966 li
208.491 193.397 li
208.545 189.09 li
208.625 182.077 li
208.67 185.4 li
208.75 192.864 li
208.804 188.794 li
208.884 180.86 li
208.938 184.811 li
209.018 192.182 li
209.072 188.073 li
209.143 181.546 li
209.197 185.383 li
209.277 193.777 li
209.33 190.257 li
209.411 182.736 li
209.464 186.653 li
209.545 193.613 li
209.589 190.211 li
209.679 181.64 li
209.723 184.923 li
209.804 192.782 li
209.857 189.16 li
209.938 181.749 li
209.991 185.881 li
210.072 193.268 li
210.116 190.025 li
210.205 181.3 li
210.259 185.332 li
210.33 191.304 li
210.375 188.178 li
210.464 178.472 li
210.518 181.989 li
210.598 188.921 li
210.643 185.653 li
210.732 177.212 li
210.777 180.441 li
210.857 188.034 li
210.911 183.996 li
210.991 175.455 li
211.045 178.71 li
211.116 185.086 li
211.17 181.404 li
211.259 172.227 li
211.313 176.333 li
211.384 182.894 li
211.438 179.204 li
211.518 171.42 li
211.571 175.267 li
211.652 182.512 li
211.696 179.205 li
211.786 170.227 li
211.839 174.167 li
211.911 180.353 li
211.964 176.331 li
212.045 168.086 li
212.098 171.801 li
212.179 179.312 li
212.232 175.259 li
212.312 168.183 li
212.357 171.49 li
212.437 179.341 li
212.491 175.508 li
212.571 167.022 li
212.625 170.289 li
212.705 176.958 li
212.75 173.505 li
212.839 164.475 li
212.893 168.594 li
212.964 175.291 li
213.018 171.645 li
213.098 163.523 li
213.152 166.991 li
213.232 173.784 li
213.277 170.23 li
213.366 160.444 li
213.42 163.873 li
213.491 169.62 li
213.536 166.518 li
213.634 156.41 li
213.687 160.754 li
213.759 166.594 li
213.803 163.323 li
213.893 154.169 li
213.946 157.933 li
214.018 163.996 li
214.071 159.742 li
214.161 150.426 li
214.214 154.385 li
214.286 159.798 li
214.33 156.372 li
214.419 147.24 li
214.473 151.333 li
214.553 158.264 li
214.598 154.864 li
214.678 146.924 li
214.732 150.532 li
214.812 157.906 li
214.866 153.665 li
214.946 145.911 li
215 149.99 li
215.08 157.021 li
215.125 153.793 li
215.205 146.428 li
215.259 150.668 li
215.348 159.398 li
215.393 156.153 li
215.464 149.723 li
215.518 153.302 li
215.607 162.242 li
215.66 158.071 li
215.732 151.66 li
215.785 155.643 li
215.866 164.069 li
215.919 160.789 li
215.991 154.486 li
216.044 158.345 li
216.134 168.096 li
216.187 164.44 li
216.259 158.472 li
216.312 162.546 li
216.393 170.714 li
216.446 166.979 li
216.526 159.651 li
216.58 163.925 li
216.66 171.402 li
216.714 167.275 li
216.785 160.919 li
216.839 164.906 li
216.919 173.224 li
216.973 169.62 li
217.053 162.213 li
217.107 166.193 li
217.178 172.926 li
217.232 169.275 li
217.321 160.494 li
217.375 164.784 li
217.446 171.084 li
217.5 167.14 li
217.58 159.599 li
217.634 163.733 li
217.714 170.96 li
217.759 167.627 li
217.848 159.124 li
217.901 163.343 li
217.973 169.335 li
218.017 166.201 li
218.107 156.759 li
218.16 160.502 li
218.241 167.558 li
218.285 164.375 li
218.366 156.501 li
218.419 160.18 li
218.5 168.325 li
218.553 164.666 li
218.633 157.022 li
218.687 160.905 li
218.767 167.872 li
218.812 164.52 li
218.892 156.195 li
218.946 159.647 li
219.026 167.85 li
219.08 164.489 li
219.16 157.535 li
219.205 160.814 li
219.294 169.871 li
219.348 165.793 li
219.428 158.829 li
219.473 162.14 li
219.553 169.814 li
219.607 165.952 li
219.687 158.156 li
219.741 162.175 li
219.821 169.806 li
219.874 165.82 li
219.946 159.156 li
219.999 162.751 li
220.08 170.855 li
220.133 167.116 li
220.214 159.032 li
220.267 162.576 li
220.348 169.289 li
220.392 165.832 li
220.482 157.056 li
220.535 161.377 li
220.607 168.141 li
220.66 164.561 li
220.74 156.944 li
220.794 160.863 li
220.874 168.095 li
220.919 164.804 li
221.008 155.862 li
221.062 159.837 li
221.133 166.054 li
221.187 162.076 li
221.267 154.01 li
221.321 157.866 li
221.401 165.515 li
221.455 161.584 li
221.526 154.788 li
221.58 158.245 li
221.66 166.391 li
221.714 162.77 li
221.794 154.765 li
221.848 158.418 li
221.928 165.668 li
221.981 161.497 li
222.053 154.507 li
222.106 158.019 li
222.196 166.75 li
222.249 162.552 li
222.321 156.48 li
222.374 160.612 li
222.455 168.33 li
222.508 164.181 li
222.589 156.708 li
222.642 160.862 li
222.714 167.527 li
222.767 163.908 li
222.847 156.08 li
222.901 159.984 li
222.981 167.776 li
223.035 163.823 li
223.115 156.565 li
223.169 160.733 li
223.24 167.177 li
223.294 163.137 li
223.383 154.163 li
223.437 158.263 li
223.508 163.706 li
223.553 160.226 li
223.642 150.953 li
223.696 154.866 li
223.767 161.348 li
223.821 157.498 li
223.91 148.777 li
223.963 152.897 li
224.026 158.175 li
224.08 154.406 li
224.169 144.221 li
224.231 148.552 li
224.294 153.331 li
224.347 149.2 li
224.437 140.468 li
224.481 143.786 li
224.562 150.975 li
224.615 146.676 li
224.696 138.729 li
224.749 142.51 li
224.821 148.778 li
224.874 144.781 li
224.963 135.92 li
225.017 140.252 li
225.088 146.388 li
225.142 142.361 li
225.222 135.173 li
225.267 138.533 li
225.356 147.33 li
225.41 143.152 li
225.481 136.668 li
225.535 140.442 li
225.615 148.2 li
225.669 144.257 li
225.749 136.873 li
225.794 140.068 li
225.883 148.798 li
225.937 144.796 li
226.008 138.768 li
226.062 143.048 li
226.142 151.748 li
226.195 148.384 li
226.276 141.482 li
226.32 144.703 li
226.41 153.052 li
226.454 149.717 li
226.535 141.638 li
226.588 145.242 li
226.669 153.221 li
226.722 149.609 li
226.803 142.613 li
226.847 145.913 li
226.937 154.588 li
226.99 150.21 li
227.07 143.111 li
227.115 146.34 li
227.195 153.423 li
227.24 150.223 li
227.329 140.776 li
227.383 144.494 li
227.463 151.304 li
227.508 147.918 li
227.588 139.716 li
227.642 143.131 li
227.722 150.659 li
227.776 146.514 li
227.856 138.212 li
227.91 141.658 li
227.981 147.899 li
228.035 144.014 li
228.124 134.933 li
228.178 139.127 li
228.249 145.443 li
228.302 141.528 li
228.383 133.861 li
228.436 137.849 li
228.517 144.889 li
228.561 141.426 li
228.651 132.581 li
228.704 136.626 li
228.776 142.557 li
228.82 139.453 li
228.91 130.051 li
228.963 133.822 li
229.044 140.984 li
229.088 137.794 li
229.177 129.682 li
229.222 133.088 li
229.302 140.701 li
229.356 136.639 li
229.436 128.245 li
229.49 131.604 li
229.561 137.968 li
229.615 134.245 li
229.704 125.183 li
229.758 129.336 li
229.829 135.72 li
229.883 131.802 li
229.963 123.753 li
230.017 127.341 li
230.088 133.914 li
230.142 130.152 li
230.231 120.457 li
230.285 123.978 li
230.356 129.452 li
230.401 126.112 li
230.499 116.01 li
230.552 120.411 li
230.624 125.969 li
230.668 122.498 li
230.758 113.46 li
230.811 117.364 li
230.883 123.241 li
230.927 120 li
231.026 109.598 li
231.079 113.637 li
231.142 118.785 li
231.195 115.077 li
231.284 105.931 li
231.338 110.075 li
231.409 116.699 li
231.463 113.015 li
231.543 105.093 li
231.597 108.781 li
231.677 115.813 li
231.722 112.449 li
231.811 103.428 li
231.865 107.46 li
231.936 113.975 li
231.99 110.312 li
232.07 102.662 li
232.124 106.771 li
232.204 114.842 li
232.258 111.114 li
232.338 104.393 li
232.383 107.822 li
232.463 115.976 li
232.517 112.391 li
232.597 104.378 li
232.65 108.057 li
232.731 115.523 li
232.784 111.516 li
232.865 104.608 li
232.909 108.094 li
232.999 116.718 li
233.043 113.46 li
233.124 105.802 li
233.177 109.498 li
233.258 116.626 li
233.302 113.326 li
233.391 104.055 li
233.445 107.862 li
233.516 114.228 li
233.57 110.427 li
233.65 102.2 li
233.704 105.766 li
233.784 113.052 li
233.838 108.726 li
233.918 100.739 li
233.972 104.395 li
234.043 110.324 li
234.088 107.205 li
234.186 96.6189 li
234.24 100.595 li
234.311 106.115 li
234.356 102.778 li
234.445 93.6461 li
234.499 97.6209 li
234.57 104.272 li
234.624 100.554 li
234.713 91.916 li
234.766 96.1248 li
234.838 101.742 li
234.882 98.3307 li
234.972 88.8487 li
235.025 92.6593 li
235.097 99.4066 li
235.15 96.0314 li
235.231 88.2964 li
235.284 92.2035 li
235.365 100.325 li
235.418 96.6207 li
235.498 89.3947 li
235.552 93.631 li
235.632 100.698 li
235.677 97.35 li
235.757 89.4684 li
235.811 93.306 li
235.891 101.675 li
235.945 98.3815 li
236.016 91.9911 li
236.07 95.7199 li
236.159 105.185 li
236.213 101.318 li
236.284 95.0339 li
236.338 98.909 li
236.418 106.99 li
236.472 103.322 li
236.552 96.2343 li
236.597 99.5931 li
236.686 108.784 li
236.739 105.019 li
236.811 99.0542 li
236.864 103.263 li
236.945 111.883 li
236.998 108.432 li
237.079 101.203 li
237.132 105.363 li
237.213 112.539 li
237.257 109.262 li
237.338 101.267 li
237.391 104.954 li
237.472 113.265 li
237.525 109.899 li
237.605 103.045 li
237.65 106.372 li
237.739 115.249 li
237.793 111.025 li
237.864 104.061 li
237.918 107.426 li
237.998 115.092 li
238.052 111.256 li
238.132 103.78 li
238.186 108.081 li
238.266 115.979 li
238.32 112.17 li
238.391 105.909 li
238.445 109.842 li
238.525 118.303 li
238.579 114.8 li
238.659 107.337 li
238.713 111.391 li
238.793 118.783 li
238.846 114.623 li
238.918 107.977 li
238.971 111.809 li
239.061 120.611 li
239.114 116.436 li
239.186 110.771 li
239.23 114.085 li
239.32 123.122 li
239.373 119.007 li
239.454 111.964 li
239.498 115.271 li
239.579 123.107 li
239.632 119.436 li
239.712 111.92 li
239.766 116.106 li
239.846 123.961 li
239.9 120.028 li
239.98 113.241 li
240.025 116.638 li
240.105 124.398 li
240.159 120.433 li
240.239 112.002 li
240.293 115.373 li
240.373 122.023 li
240.418 118.572 li
240.507 109.808 li
240.561 114.101 li
240.632 120.796 li
240.686 117.085 li
240.766 109.051 li
240.82 112.595 li
240.9 119.303 li
240.945 115.718 li
241.034 106.261 li
241.087 110.019 li
241.159 116.13 li
241.212 112.155 li
241.293 104.07 li
241.346 107.878 li
241.427 115.463 li
241.48 111.417 li
241.561 104.26 li
241.605 107.496 li
241.686 115.297 li
241.739 111.545 li
241.819 103.428 li
241.873 107.115 li
241.953 114.697 li
242.007 110.843 li
242.078 104.256 li
242.132 108.052 li
242.221 117.279 li
242.275 113.335 li
242.346 107.485 li
242.391 110.607 li
242.48 119.905 li
242.534 116.138 li
242.614 109.323 li
242.659 112.855 li
242.748 121.817 li
242.802 117.9 li
242.873 112.297 li
242.918 115.718 li
243.016 125.886 li
243.069 121.567 li
243.132 116.256 li
243.185 119.832 li
243.275 128.419 li
243.319 125.122 li
243.4 117.421 li
243.453 121.306 li
243.534 129.337 li
243.587 125.709 li
243.668 119.047 li
243.712 122.604 li
243.801 131.431 li
243.855 127.121 li
243.926 120.425 li
243.98 123.972 li
244.06 131.185 li
244.105 127.986 li
244.194 118.875 li
244.248 122.835 li
244.328 129.673 li
244.373 126.273 li
244.453 118.421 li
244.507 122.161 li
244.587 129.893 li
244.641 125.864 li
244.721 118.094 li
244.775 121.932 li
244.846 128.404 li
244.9 124.625 li
244.989 116.086 li
245.034 119.508 li
245.114 127.183 li
245.167 123.435 li
245.248 116.426 li
245.292 119.754 li
245.382 128.49 li
245.435 124.207 li
245.507 117.432 li
245.56 120.982 li
245.641 128.607 li
245.694 124.705 li
245.775 117.406 li
245.819 120.652 li
245.909 129.718 li
245.962 125.917 li
246.034 119.962 li
246.087 124.205 li
246.176 132.883 li
246.221 129.481 li
246.301 122.457 li
246.346 125.607 li
246.435 134.192 li
246.489 129.985 li
246.56 123.464 li
246.614 127.412 li
246.703 136.107 li
246.757 131.878 li
246.819 126.408 li
246.873 129.89 li
246.962 139.027 li
247.016 134.934 li
247.087 128.145 li
247.141 131.63 li
247.221 139.413 li
247.274 135.652 li
247.355 128.296 li
247.408 132.641 li
247.489 140.535 li
247.542 136.687 li
247.614 130.349 li
247.667 134.195 li
247.748 142.442 li
247.801 138.796 li
247.882 131.152 li
247.935 135.089 li
248.016 142.317 li
248.06 139.178 li
248.141 131.347 li
248.194 135.143 li
248.283 143.878 li
248.337 139.679 li
248.408 134.03 li
248.453 137.372 li
248.542 146.511 li
248.596 142.507 li
248.667 135.724 li
248.721 139.268 li
248.81 147.538 li
248.855 144.226 li
248.935 137.378 li
248.98 140.823 li
249.069 150.665 li
249.123 147.275 li
249.194 141.275 li
249.248 145.293 li
249.337 154.023 li
249.382 150.701 li
249.462 143.36 li
249.515 147.491 li
249.596 155.27 li
249.649 151.409 li
249.721 144.949 li
249.774 148.827 li
249.864 157.78 li
249.917 153.595 li
249.989 147.596 li
250.042 151.733 li
250.123 159.201 li
250.176 154.852 li
250.256 147.3 li
250.31 151.442 li
250.381 157.955 li
250.435 154.211 li
250.515 146.371 li
250.569 150.272 li
250.649 157.802 li
250.703 153.618 li
250.783 146.189 li
250.837 150.254 li
250.908 156.448 li
250.962 152.26 li
251.051 143.417 li
251.096 146.628 li
251.176 153.365 li
251.221 150.073 li
251.31 141.435 li
251.364 145.78 li
251.435 152.697 li
251.489 149.163 li
251.569 141.17 li
251.622 144.751 li
251.703 151.818 li
251.747 148.549 li
251.837 139.687 li
251.89 143.897 li
251.971 150.909 li
252.015 147.676 li
252.096 140.518 li
252.14 143.712 li
252.23 153.47 li
252.283 150.051 li
252.355 143.575 li
252.408 147.176 li
252.497 155.929 li
252.551 151.709 li
252.622 145.595 li
252.676 149.92 li
252.765 158.71 li
252.819 154.619 li
252.881 149.865 li
252.926 152.925 li
253.024 164.222 li
253.078 160.703 li
253.149 155.167 li
253.194 158.428 li
253.283 168.223 li
253.337 164.824 li
253.408 158.394 li
253.462 162.188 li
253.551 171.813 li
253.604 168.277 li
253.676 162.923 li
253.721 166.396 li
253.819 176.77 li
253.872 172.499 li
253.944 167.075 li
253.988 170.551 li
254.078 179.276 li
254.131 175.04 li
254.203 168.677 li
254.256 172.755 li
254.337 181.313 li
254.39 178.077 li
254.462 171.753 li
254.515 175.487 li
254.604 184.769 li
254.658 180.753 li
254.729 174.342 li
254.783 178.15 li
254.863 186.102 li
254.917 182.385 li
254.997 175.392 li
255.042 178.852 li
255.131 188.196 li
255.185 184.542 li
255.256 178.829 li
255.301 182.059 li
255.399 192.168 li
255.453 187.831 li
255.524 182.207 li
255.569 185.617 li
255.658 194.642 li
255.711 190.741 li
255.783 184.743 li
255.828 187.92 li
255.926 198.52 li
255.979 194.731 li
256.042 189.88 li
256.095 193.887 li
256.185 203.847 li
256.238 200.263 li
256.31 194.252 li
256.363 198.359 li
256.452 207.078 li
256.506 202.853 li
256.569 197.544 li
256.622 201.326 li
256.711 211.432 li
256.774 207.147 li
256.836 202.64 li
256.881 205.856 li
256.979 216.108 li
257.033 211.801 li
257.104 205.982 li
257.149 209.231 li
257.238 218.24 li
257.292 214.365 li
257.363 208.174 li
257.417 212.338 li
257.506 221.508 li
257.56 217.511 li
257.622 212.135 li
257.676 215.619 li
257.765 224.918 li
257.818 220.98 li
257.89 214.349 li
257.943 218.019 li
258.033 226.422 li
258.077 223.163 li
258.149 216.535 li
258.202 220.103 li
258.292 230.133 li
258.345 226.857 li
258.417 221.104 li
258.461 224.155 li
258.559 234.43 li
258.613 230.257 li
258.684 224.549 li
258.729 227.913 li
258.818 237.633 li
258.872 234.322 li
258.943 228.748 li
258.988 232.091 li
259.086 243.527 li
259.149 239.128 li
259.202 235.234 li
259.256 239.079 li
259.345 249.255 li
259.399 245.909 li
259.47 239.912 li
259.524 244.054 li
259.613 253.546 li
259.667 249.884 li
259.729 244.863 li
259.783 248.77 li
259.881 259.454 li
259.934 255.39 li
259.997 250.636 li
260.05 254.721 li
260.14 263.67 li
260.193 259.376 li
260.265 253.248 li
260.318 257.459 li
260.399 265.551 li
260.452 261.91 li
260.524 255.55 li
260.577 259.403 li
260.667 268.328 li
260.72 264.05 li
260.791 257.721 li
260.845 261.572 li
260.925 268.819 li
260.97 265.573 li
261.059 256.712 li
261.113 260.843 li
261.184 267.563 li
261.238 264.037 li
261.318 256.391 li
261.372 260.355 li
261.452 268.081 li
261.506 264.026 li
261.586 256.622 li
261.64 260.733 li
261.711 267.222 li
261.765 263.38 li
261.845 255.11 li
261.899 258.738 li
261.979 266.375 li
262.032 262.57 li
262.104 255.886 li
262.157 259.509 li
262.247 268.419 li
262.3 264.23 li
262.372 257.93 li
262.425 261.882 li
262.506 269.716 li
262.559 265.877 li
262.631 259.025 li
262.684 262.585 li
262.773 271.841 li
262.827 268.139 li
262.898 262.695 li
262.943 266.164 li
263.041 276.472 li
263.095 272.215 li
263.157 266.897 li
263.211 270.52 li
263.3 279.49 li
263.354 275.444 li
263.425 269.45 li
263.47 272.64 li
263.568 282.823 li
263.622 278.772 li
263.684 273.825 li
263.738 277.825 li
263.827 287.408 li
263.881 283.537 li
263.952 277.362 li
264.006 281.334 li
264.086 289.406 li
264.139 285.736 li
264.22 278.868 li
264.264 282.349 li
264.354 291.599 li
264.407 287.822 li
264.479 281.94 li
264.523 285.021 li
264.613 294.66 li
264.666 291.088 li
264.747 283.916 li
264.8 288.173 li
264.881 295.411 li
264.925 292.213 li
265.005 284.613 li
265.059 288.626 li
265.148 297.271 li
265.193 294.065 li
265.264 287.633 li
265.318 291.211 li
265.407 300.364 li
265.461 296.303 li
265.532 289.759 li
265.586 293.507 li
265.666 301.628 li
265.72 298.134 li
265.8 291.4 li
265.845 294.959 li
265.934 304.629 li
265.988 301.111 li
266.059 295.325 li
266.104 298.405 li
266.202 308.269 li
266.246 304.885 li
266.327 297.798 li
266.371 300.971 li
266.461 309.77 li
266.514 305.772 li
266.586 299.483 li
266.639 303.567 li
266.729 312.46 li
266.782 308.253 li
266.854 302.619 li
266.898 305.925 li
266.988 314.675 li
267.041 310.355 li
267.121 303.222 li
267.166 306.517 li
267.246 314.193 li
267.3 310.413 li
267.38 302.929 li
267.434 307.15 li
267.514 314.822 li
267.568 310.716 li
267.639 303.839 li
267.693 307.187 li
267.773 314.73 li
267.827 310.635 li
267.907 302.3 li
267.961 305.852 li
268.041 312.7 li
268.086 309.387 li
268.166 301.195 li
268.22 304.691 li
268.3 312.913 li
268.354 309.439 li
268.434 301.951 li
268.487 305.92 li
268.568 313.14 li
268.612 309.862 li
268.702 301.382 li
268.746 304.679 li
268.827 312.741 li
268.88 309.383 li
268.961 302.418 li
269.005 305.782 li
269.095 315.448 li
269.148 311.915 li
269.22 305.624 li
269.273 309.409 li
269.362 317.931 li
269.407 314.598 li
269.487 307.346 li
269.541 311.644 li
269.621 319.902 li
269.675 316.436 li
269.746 310.454 li
269.8 314.645 li
269.889 324.099 li
269.943 320.166 li
270.014 314.401 li
270.059 317.539 li
270.148 326.564 li
270.202 322.575 li
270.282 315.622 li
270.327 319.062 li
270.416 327.553 li
270.469 323.278 li
270.541 317.28 li
270.586 320.399 li
270.675 329.595 li
270.728 325.657 li
270.809 318.404 li
270.862 322.551 li
270.934 328.931 li
270.987 324.937 li
271.068 316.423 li
271.121 319.826 li
271.202 326.929 li
271.255 322.672 li
271.335 315.276 li
271.389 319.532 li
271.46 326.215 li
271.514 322.409 li
271.603 313.812 li
271.657 318.028 li
271.728 323.446 li
271.773 319.886 li
271.862 310.449 li
271.916 314.322 li
271.987 320.907 li
272.041 317.335 li
272.121 309.461 li
272.175 313.215 li
272.255 320.747 li
272.309 316.575 li
272.389 308.867 li
272.443 312.828 li
272.514 319.348 li
272.568 315.643 li
272.648 307.558 li
272.701 311.32 li
272.782 319.316 li
272.835 315.734 li
272.916 309.129 li
272.96 312.7 li
273.05 321.538 li
273.103 317.263 li
273.175 310.698 li
273.228 314.44 li
273.309 322.156 li
273.362 318.303 li
273.442 311.31 li
273.487 314.775 li
273.576 323.894 li
273.63 320.037 li
273.701 314.131 li
273.746 317.197 li
273.835 326.715 li
273.889 323.051 li
273.969 315.839 li
274.023 320.079 li
274.103 327.194 li
274.148 323.918 li
274.228 316.251 li
274.282 320.216 li
274.362 328.623 li
274.416 325.248 li
274.496 318.595 li
274.541 322 li
274.63 330.697 li
274.683 326.334 li
274.755 319.47 li
274.808 322.992 li
274.889 330.684 li
274.942 326.891 li
275.023 319.832 li
275.067 323.215 li
275.157 332.433 li
275.21 328.636 li
275.282 322.582 li
275.335 326.668 li
275.416 335.03 li
275.469 331.45 li
275.549 324.263 li
275.594 327.427 li
275.683 336.204 li
275.737 332.243 li
275.808 326.166 li
275.862 330.469 li
275.951 339.668 li
276.005 335.68 li
276.067 330.451 li
276.121 334.078 li
276.21 343.394 li
276.264 339.451 li
276.335 332.997 li
276.389 336.833 li
276.478 345.273 li
276.523 342.004 li
276.594 335.454 li
276.648 339.056 li
276.737 348.756 li
276.79 345.148 li
276.862 339 li
276.915 342.882 li
276.996 351.025 li
277.049 347.291 li
277.13 339.604 li
277.183 343.539 li
277.264 350.736 li
277.308 347.586 li
277.389 339.669 li
277.442 343.296 li
277.523 351.427 li
277.576 347.785 li
277.656 340.069 li
277.71 343.796 li
277.781 350.418 li
277.835 346.721 li
277.924 337.469 li
277.978 341.398 li
278.049 347.449 li
278.103 343.371 li
278.183 335.386 li
278.237 339.224 li
278.317 346.354 li
278.362 343.064 li
278.451 334.357 li
278.505 338.417 li
278.576 344.425 li
278.63 340.14 li
278.71 331.619 li
278.764 335.129 li
278.844 342.12 li
278.889 338.964 li
278.969 330.934 li
279.022 334.497 li
279.103 342.84 li
279.156 339.413 li
279.237 331.872 li
279.29 335.791 li
279.371 343.077 li
279.415 339.909 li
279.505 331.642 li
279.549 335.065 li
279.638 343.505 li
279.683 340.357 li
279.763 333.53 li
279.808 336.895 li
279.897 346.446 li
279.951 342.748 li
280.022 336.076 li
280.076 339.521 li
280.156 347.607 li
280.21 344.036 li
280.29 336.34 li
280.344 340.348 li
280.424 348.223 li
280.478 344.436 li
280.549 337.841 li
280.603 341.452 li
280.683 349.84 li
280.737 346.346 li
280.817 338.32 li
280.871 341.801 li
280.951 348.576 li
280.996 345.12 li
281.085 335.991 li
281.138 340.004 li
281.21 346.539 li
281.263 342.827 li
281.344 334.766 li
281.397 338.347 li
281.478 345.315 li
281.522 341.885 li
281.612 332.343 li
281.665 335.848 li
281.737 341.555 li
281.781 338.376 li
281.879 328.155 li
281.933 332.442 li
282.004 338.224 li
282.049 334.988 li
282.138 326.127 li
282.192 330.14 li
282.263 336.517 li
282.317 332.496 li
282.406 323.565 li
282.46 327.658 li
282.531 333.069 li
282.576 329.589 li
282.665 320.364 li
282.719 324.387 li
282.79 331.181 li
282.844 327.717 li
282.924 319.828 li
282.978 323.485 li
283.058 330.791 li
283.103 327.6 li
283.192 318.402 li
283.245 322.16 li
283.317 328.477 li
283.37 324.649 li
283.451 316.334 li
283.504 319.907 li
283.585 327.524 li
283.638 323.572 li
283.719 316.197 li
283.772 320.323 li
283.844 326.943 li
283.897 323.098 li
283.986 314.207 li
284.04 318.316 li
284.111 323.939 li
284.156 320.602 li
284.245 311.419 li
284.299 315.383 li
284.379 322.185 li
284.424 318.658 li
284.513 310.351 li
284.558 313.639 li
284.638 320.511 li
284.683 317.108 li
284.772 307.336 li
284.826 310.784 li
284.897 316.951 li
284.951 313.103 li
285.04 304.626 li
285.085 308.08 li
285.165 315.68 li
285.219 311.743 li
285.299 304.187 li
285.352 308.186 li
285.424 314.877 li
285.477 311.2 li
285.567 302.567 li
285.611 305.845 li
285.692 313.25 li
285.745 309.353 li
285.826 302.181 li
285.87 305.511 li
285.96 314.492 li
286.013 310.478 li
286.085 304.064 li
286.138 307.839 li
286.218 315.695 li
286.272 311.809 li
286.352 304.248 li
286.406 308.38 li
286.486 315.727 li
286.54 311.575 li
286.611 305.198 li
286.665 309.19 li
286.745 317.635 li
286.799 314.151 li
286.879 306.904 li
286.933 310.978 li
287.004 317.837 li
287.058 314.267 li
287.147 305.508 li
287.201 309.74 li
287.272 315.923 li
287.326 311.866 li
287.406 304.069 li
287.459 307.99 li
287.531 314.85 li
287.584 311.291 li
287.674 302.222 li
287.727 306.009 li
287.799 311.331 li
287.843 307.717 li
287.942 297.155 li
287.995 301.224 li
288.058 306.153 li
288.111 302.185 li
288.2 292.911 li
288.254 296.837 li
288.325 302.554 li
288.37 299.203 li
288.468 288.856 li
288.522 292.804 li
288.584 297.429 li
288.629 294.302 li
288.727 283.079 li
288.781 286.7 li
288.852 292.383 li
288.897 289.251 li
288.986 279.812 li
289.04 283.447 li
289.111 290.155 li
289.165 286.581 li
289.254 277.449 li
289.308 281.312 li
289.379 287.084 li
289.424 283.906 li
289.513 274.276 li
289.566 277.905 li
289.647 284.983 li
289.691 281.853 li
289.772 273.835 li
289.825 277.326 li
289.906 285.281 li
289.959 281.503 li
290.04 273.498 li
290.093 277.093 li
290.165 283.809 li
290.218 280.359 li
290.307 271.669 li
290.361 276.034 li
290.432 282.788 li
290.486 279.206 li
290.566 271.677 li
290.62 275.642 li
290.7 282.822 li
290.745 279.476 li
290.834 270.451 li
290.888 274.314 li
290.959 280.218 li
291.004 277.116 li
291.093 267.443 li
291.147 270.965 li
291.227 277.97 li
291.272 274.727 li
291.361 266.156 li
291.415 270.336 li
291.486 276.589 li
291.54 272.401 li
291.629 263.571 li
291.682 267.745 li
291.745 272.99 li
291.798 269.338 li
291.888 260.224 li
291.941 264.356 li
292.013 270.974 li
292.066 267.311 li
292.147 259.447 li
292.2 263.173 li
292.281 270.241 li
292.325 266.873 li
292.414 257.801 li
292.468 261.734 li
292.539 268.036 li
292.593 264.188 li
292.673 256.257 li
292.727 260.179 li
292.807 267.976 li
292.861 264.101 li
292.941 257.234 li
292.986 260.588 li
293.066 268.57 li
293.12 264.853 li
293.2 256.629 li
293.254 260.131 li
293.334 267.248 li
293.379 264.128 li
293.468 255.787 li
293.513 259.122 li
293.602 267.451 li
293.647 264.103 li
293.727 256.365 li
293.78 260.042 li
293.861 267.096 li
293.905 263.73 li
293.995 254.41 li
294.048 258.166 li
294.12 264.385 li
294.173 260.483 li
294.254 252.218 li
294.307 255.819 li
294.388 263.175 li
294.441 258.941 li
294.521 251.251 li
294.575 255.142 li
294.646 261.313 li
294.7 257.166 li
294.789 248.182 li
294.843 252.381 li
294.914 258.11 li
294.959 254.897 li
295.048 246.25 li
295.102 250.575 li
295.182 257.668 li
295.227 254.311 li
295.307 246.432 li
295.361 250.048 li
295.441 257.366 li
295.495 253.123 li
295.575 245.532 li
295.629 249.777 li
295.709 257.027 li
295.754 253.927 li
295.834 246.861 li
295.879 250.05 li
295.968 259.981 li
296.03 255.611 li
296.102 250.222 li
296.146 253.759 li
296.236 262.535 li
296.289 258.32 li
296.361 252.026 li
296.414 256.149 li
296.503 264.72 li
296.548 261.526 li
296.62 255.403 li
296.673 259.347 li
296.762 268.956 li
296.816 265.146 li
296.887 259.037 li
296.941 262.999 li
297.021 270.913 li
297.075 267.052 li
297.155 259.746 li
297.2 262.948 li
297.289 271.54 li
297.343 267.375 li
297.414 261.021 li
297.468 264.943 li
297.548 272.911 li
297.602 268.995 li
297.682 261.214 li
297.736 264.958 li
297.807 271.29 li
297.861 267.375 li
297.95 258.432 li
298.003 262.658 li
298.075 268.732 li
298.128 264.586 li
298.209 256.795 li
298.262 260.703 li
298.334 267.35 li
298.387 263.598 li
298.477 254.492 li
298.53 258.371 li
298.602 263.825 li
298.646 260.373 li
298.735 250.615 li
298.789 254.22 li
298.869 260.887 li
298.914 257.443 li
299.003 249.192 li
299.048 252.567 li
299.128 259.994 li
299.182 255.805 li
299.262 247.546 li
299.316 251.073 li
299.387 257.467 li
299.441 253.764 li
299.53 245.134 li
299.575 248.471 li
299.655 256.252 li
299.709 252.555 li
299.789 245.189 li
299.843 249.321 li
299.923 256.449 li
299.968 253.033 li
300.057 244.326 li
300.11 248.461 li
300.182 254.495 li
300.235 250.314 li
300.316 242.317 li
300.369 246.221 li
300.45 253.448 li
300.494 250.269 li
300.584 242.122 li
300.628 245.445 li
300.709 252.837 li
300.762 248.615 li
300.851 240.081 li
300.896 243.394 li
300.967 249.704 li
301.021 245.993 li
301.11 237.095 li
301.164 241.357 li
301.235 247.826 li
301.289 243.964 li
301.369 236.061 li
301.423 239.74 li
301.494 246.401 li
301.548 242.75 li
301.637 233.46 li
301.691 237.315 li
301.762 243.288 li
301.816 239.172 li
301.896 231.17 li
301.95 235.067 li
302.03 242.507 li
302.083 238.376 li
302.164 231.414 li
302.208 234.745 li
302.289 242.457 li
302.342 238.557 li
302.423 230.442 li
302.476 234.109 li
302.557 241.279 li
302.61 237.098 li
302.682 230.295 li
302.735 233.952 li
302.825 242.594 li
302.878 238.274 li
302.949 232.153 li
303.003 236.228 li
303.083 243.663 li
303.137 239.354 li
303.217 231.943 li
303.271 236.223 li
303.342 242.953 li
303.396 239.405 li
303.476 231.897 li
303.53 235.995 li
303.61 243.784 li
303.664 239.753 li
303.744 232.507 li
303.798 236.668 li
303.869 242.945 li
303.923 238.808 li
304.012 230.03 li
304.057 233.242 li
304.137 239.898 li
304.182 236.512 li
304.271 227.62 li
304.324 231.723 li
304.396 238.196 li
304.449 234.261 li
304.539 225.553 li
304.592 229.664 li
304.655 234.825 li
304.708 230.968 li
304.798 220.983 li
304.851 224.465 li
304.923 230.421 li
304.976 226.376 li
305.057 217.937 li
305.11 221.397 li
305.19 228.483 li
305.235 225.23 li
305.324 216.06 li
305.378 219.8 li
305.449 225.882 li
305.503 221.778 li
305.592 213.079 li
305.637 216.438 li
305.717 223.758 li
305.771 219.763 li
305.851 212.775 li
305.896 216.17 li
305.985 224.752 li
306.03 221.521 li
306.11 213.775 li
306.164 217.477 li
306.244 224.992 li
306.298 220.937 li
306.378 213.691 li
306.422 216.984 li
306.512 225.761 li
306.565 221.76 li
306.637 215.83 li
306.681 218.968 li
306.771 228.581 li
306.824 224.988 li
306.905 217.929 li
306.949 221.078 li
307.03 229.2 li
307.083 225.786 li
307.164 217.826 li
307.217 221.574 li
307.297 229.59 li
307.351 225.959 li
307.431 219.033 li
307.476 222.328 li
307.565 230.701 li
307.61 227.283 li
307.699 218.848 li
307.744 222.023 li
307.824 228.919 li
307.869 225.652 li
307.958 216.351 li
308.012 220.2 li
308.092 227.016 li
308.137 223.588 li
308.217 215.4 li
308.271 218.773 li
308.351 225.986 li
308.396 222.784 li
308.485 213.122 li
308.538 216.505 li
308.61 222.595 li
308.663 218.643 li
308.753 209.727 li
308.806 214.038 li
308.878 220.341 li
308.931 216.366 li
309.012 208.682 li
309.065 212.608 li
309.137 219.349 li
309.19 215.698 li
309.279 206.732 li
309.333 210.77 li
309.404 216.644 li
309.449 213.534 li
309.538 204.397 li
309.592 208.356 li
309.672 215.603 li
309.717 212.422 li
309.806 204.411 li
309.851 207.82 li
309.931 215.309 li
309.985 211.154 li
310.065 202.836 li
310.119 206.337 li
310.19 212.853 li
310.244 209.293 li
310.333 200.744 li
310.378 204.068 li
310.458 211.834 li
310.512 208.045 li
310.592 200.239 li
310.645 203.976 li
310.717 210.605 li
310.77 206.892 li
310.86 197.549 li
310.913 201.358 li
310.985 207.171 li
311.029 204.05 li
311.119 194.636 li
311.172 198.348 li
311.253 205.393 li
311.297 202.076 li
311.386 193.441 li
311.44 197.551 li
311.511 203.574 li
311.556 200.426 li
311.645 190.539 li
311.708 194.947 li
311.779 200.481 li
311.824 197.089 li
311.913 188.689 li
311.958 192.091 li
312.038 200.242 li
312.092 196.77 li
312.172 189.237 li
312.226 193.163 li
312.306 200.431 li
312.351 197.216 li
312.44 188.77 li
312.485 192.08 li
312.574 200.261 li
312.619 196.988 li
312.699 190.089 li
312.744 193.445 li
312.833 203.211 li
312.886 199.749 li
312.958 193.456 li
313.011 197.202 li
313.101 205.749 li
313.145 202.422 li
313.226 195.097 li
313.279 199.3 li
313.36 207.48 li
313.413 203.972 li
313.485 197.825 li
313.538 201.849 li
313.627 211.103 li
313.681 207.048 li
313.752 201.012 li
313.806 205.079 li
313.886 212.667 li
313.94 208.518 li
314.02 201.218 li
314.065 204.442 li
314.154 212.621 li
314.199 209.285 li
314.279 201.863 li
314.333 205.9 li
314.413 213.649 li
314.467 209.564 li
314.547 202.004 li
314.601 205.941 li
314.672 212.159 li
314.726 208.088 li
314.815 199.368 li
314.859 202.673 li
314.94 209.732 li
314.993 205.495 li
315.074 198.059 li
315.127 202.287 li
315.199 209.058 li
315.252 205.365 li
315.342 196.87 li
315.386 200.089 li
315.467 206.804 li
315.511 203.43 li
315.6 194.264 li
315.654 198.296 li
315.734 205.235 li
315.779 201.923 li
315.859 194.371 li
315.913 198.32 li
315.993 206.259 li
316.047 202.384 li
316.127 195.013 li
316.181 199.172 li
316.261 206.064 li
316.306 202.642 li
316.386 194.861 li
316.44 198.789 li
316.52 207.125 li
316.574 203.771 li
316.645 197.34 li
316.699 200.983 li
316.788 210.031 li
316.841 205.877 li
316.913 199.333 li
316.966 203.043 li
317.047 210.795 li
317.1 206.962 li
317.181 199.845 li
317.225 203.178 li
317.315 212.143 li
317.368 208.183 li
317.44 201.99 li
317.493 205.961 li
317.574 213.978 li
317.627 210.092 li
317.707 202.393 li
317.761 206.26 li
317.832 212.935 li
317.886 209.389 li
317.966 201.11 li
318.02 204.624 li
318.1 212.455 li
318.154 208.696 li
318.234 201.308 li
318.288 205.375 li
318.359 212.208 li
318.413 208.589 li
318.502 199.687 li
318.556 203.751 li
318.627 209.612 li
318.672 206.486 li
318.761 197.374 li
318.815 201.342 li
318.895 208.501 li
318.94 205.298 li
319.02 197.205 li
319.073 200.583 li
319.154 207.996 li
319.207 203.792 li
319.288 195.512 li
319.341 199.078 li
319.413 205.679 li
319.466 202.206 li
319.547 193.895 li
319.6 197.366 li
319.681 205.349 li
319.734 201.693 li
319.814 194.158 li
319.868 198.076 li
319.939 204.898 li
319.993 201.328 li
320.082 192.315 li
320.136 196.334 li
320.207 202.369 li
320.261 198.247 li
320.341 190.258 li
320.395 194.104 li
320.475 201.184 li
320.52 197.849 li
320.609 189.125 li
320.663 193.12 li
320.734 198.853 li
320.779 195.491 li
320.877 185.098 li
320.93 189.162 li
320.993 194.178 li
321.047 190.312 li
321.136 181.032 li
321.189 184.982 li
321.261 190.976 li
321.305 187.861 li
321.404 177.821 li
321.457 181.881 li
321.52 186.711 li
321.573 182.504 li
321.663 172.339 li
321.716 175.749 li
321.788 181.282 li
321.832 178.07 li
321.922 168.328 li
321.975 171.801 li
322.055 178.584 li
322.1 175.133 li
322.189 166.032 li
322.243 169.867 li
322.314 175.736 li
322.359 172.586 li
322.448 162.72 li
322.502 166.125 li
322.582 173.141 li
322.627 170.018 li
322.707 161.96 li
322.761 165.462 li
322.841 173.844 li
322.895 170.477 li
322.975 162.876 li
323.029 166.724 li
323.109 174.049 li
323.163 169.784 li
323.243 162.558 li
323.287 165.912 li
323.377 174.324 li
323.43 170.069 li
323.502 164.159 li
323.546 167.376 li
323.636 176.731 li
323.689 172.92 li
323.77 165.902 li
323.814 169.123 li
323.895 176.906 li
323.948 173.164 li
324.029 165.064 li
324.082 168.758 li
324.162 176.283 li
324.216 172.277 li
324.296 165.208 li
324.341 168.495 li
324.421 176.442 li
324.475 172.693 li
324.564 164.134 li
324.618 168.324 li
324.68 173.662 li
324.734 170.024 li
324.823 160.419 li
324.877 164.138 li
324.948 170.424 li
325.002 166.569 li
325.091 158.182 li
325.136 161.519 li
325.216 168.285 li
325.261 164.793 li
325.35 154.998 li
325.403 158.351 li
325.475 164.022 li
325.52 160.883 li
325.618 150.59 li
325.671 154.84 li
325.743 160.724 li
325.787 157.587 li
325.877 148.756 li
325.93 152.762 li
326.002 159.268 li
326.055 155.384 li
326.144 146.525 li
326.198 150.652 li
326.269 156.258 li
326.314 152.934 li
326.403 143.84 li
326.457 147.905 li
326.537 154.899 li
326.582 151.568 li
326.662 143.74 li
326.716 147.377 li
326.796 154.78 li
326.85 150.509 li
326.93 142.449 li
326.984 146.149 li
327.055 152.525 li
327.109 148.772 li
327.189 140.405 li
327.243 143.885 li
327.323 151.497 li
327.377 147.563 li
327.457 140.024 li
327.51 143.995 li
327.582 150.545 li
327.635 146.683 li
327.725 137.573 li
327.778 141.534 li
327.85 147.123 li
327.894 143.805 li
327.984 134.46 li
328.037 138.288 li
328.118 145.06 li
328.162 141.544 li
328.251 133.047 li
328.305 137.281 li
328.376 143.05 li
328.421 139.682 li
328.51 129.782 li
328.564 133.13 li
328.635 139.337 li
328.689 135.567 li
328.778 127.008 li
328.823 130.389 li
328.903 138.027 li
328.957 134.143 li
329.037 126.466 li
329.091 130.335 li
329.162 137.011 li
329.216 133.362 li
329.305 124.54 li
329.359 128.772 li
329.43 135.039 li
329.484 131.133 li
329.564 123.722 li
329.617 128.008 li
329.698 135.619 li
329.751 131.482 li
329.823 124.693 li
329.876 128.123 li
329.957 135.644 li
330.01 131.557 li
330.091 123.472 li
330.144 127.206 li
330.225 134.139 li
330.269 130.887 li
330.35 122.808 li
330.403 126.33 li
330.483 134.264 li
330.537 130.466 li
330.617 122.52 li
330.671 126.09 li
330.742 132.482 li
330.796 128.626 li
330.885 119.167 li
330.939 122.971 li
331.01 128.814 li
331.055 125.721 li
331.144 116.269 li
331.198 119.843 li
331.269 126.474 li
331.323 122.825 li
331.412 113.397 li
331.466 116.98 li
331.537 122.305 li
331.582 118.769 li
331.68 108.189 li
331.733 112.278 li
331.796 117.469 li
331.849 113.808 li
331.939 104.833 li
331.992 108.943 li
332.064 115.177 li
332.117 111.053 li
332.207 102.499 li
332.251 105.756 li
332.323 112.096 li
332.376 108.401 li
332.465 99.2625 li
332.519 103.399 li
332.59 110.039 li
332.644 106.501 li
332.724 99.1594 li
332.778 103.37 li
332.858 111.216 li
332.912 107.247 li
332.992 100.292 li
333.037 103.628 li
333.117 111.619 li
333.171 108.096 li
333.251 100.669 li
333.305 104.916 li
333.385 113.205 li
333.439 109.771 li
333.51 103.709 li
333.564 107.742 li
333.653 116.856 li
333.706 112.688 li
333.778 106.577 li
333.831 110.658 li
333.912 118.4 li
333.965 114.471 li
334.037 107.703 li
334.09 111.319 li
334.18 120.217 li
334.233 116.17 li
334.305 110.343 li
334.349 113.506 li
334.439 122.699 li
334.492 118.747 li
334.572 111.469 li
334.626 115.665 li
334.697 122.294 li
334.751 118.618 li
334.831 110.664 li
334.885 114.49 li
334.965 122.286 li
335.019 118.443 li
335.099 111.492 li
335.144 114.791 li
335.224 122.833 li
335.278 119.179 li
335.358 110.814 li
335.412 114.146 li
335.492 121.136 li
335.537 117.935 li
335.626 109.297 li
335.68 113.645 li
335.76 120.87 li
335.805 117.652 li
335.885 110.106 li
335.938 113.96 li
336.019 121.57 li
336.072 117.416 li
336.153 109.725 li
336.206 113.74 li
336.278 120.457 li
336.331 116.972 li
336.412 109.179 li
336.465 113.099 li
336.546 121.244 li
336.599 117.635 li
336.679 110.735 li
336.724 114.013 li
336.804 122.19 li
336.858 118.683 li
336.938 110.369 li
336.992 113.724 li
337.072 121.003 li
337.126 116.911 li
337.206 109.518 li
337.26 113.842 li
337.34 121.126 li
337.385 117.871 li
337.465 109.918 li
337.519 113.362 li
337.599 120.478 li
337.644 117.215 li
337.733 107.649 li
337.787 111.19 li
337.858 117.488 li
337.912 113.725 li
338.001 105.253 li
338.045 108.635 li
338.126 116.077 li
338.179 111.974 li
338.26 104.039 li
338.313 107.716 li
338.385 113.981 li
338.438 109.989 li
338.528 100.761 li
338.581 104.772 li
338.653 110.63 li
338.697 107.552 li
338.786 98.6634 li
338.84 102.754 li
338.92 109.948 li
338.965 106.67 li
339.054 98.5081 li
339.099 101.84 li
339.179 109.146 li
339.233 104.966 li
339.313 96.9805 li
339.367 100.883 li
339.447 108.07 li
339.492 104.957 li
339.572 97.4186 li
339.626 101.363 li
339.706 109.862 li
339.76 106.483 li
339.84 99.3687 li
339.894 103.576 li
339.974 110.852 li
340.019 107.58 li
340.108 99.4758 li
340.152 103.002 li
340.233 111.111 li
340.286 107.689 li
340.367 100.771 li
340.411 104.094 li
340.501 113.112 li
340.554 109.014 li
340.635 102.056 li
340.679 105.36 li
340.76 112.719 li
340.813 108.581 li
340.893 100.37 li
340.947 104.034 li
341.027 110.986 li
341.072 107.691 li
341.161 99.3859 li
341.206 102.693 li
341.286 110.207 li
341.34 106.101 li
341.429 97.5529 li
341.474 100.744 li
341.545 106.792 li
341.599 102.788 li
341.688 93.1466 li
341.742 96.9167 li
341.813 102.866 li
341.867 98.722 li
341.947 90.4674 li
342.001 94.0143 li
342.072 100.67 li
342.126 97.0597 li
342.215 87.6447 li
342.268 91.3044 li
342.34 96.9621 li
342.384 93.7394 li
342.474 83.9032 li
342.527 87.3842 li
342.608 94.4404 li
342.652 91.3217 li
342.742 83.1583 li
342.786 86.522 li
342.867 94.504 li
342.92 90.8147 li
343.001 82.8137 li
343.054 86.4521 li
343.134 93.5452 li
343.179 90.3964 li
343.259 82.2053 li
343.313 85.6959 li
343.402 94.3806 li
343.456 90.2589 li
343.527 84.4866 li
343.572 87.7195 li
343.661 97.0425 li
343.715 93.2114 li
343.795 86.3038 li
343.84 89.6499 li
343.929 97.8263 li
343.974 94.4667 li
344.054 87.1688 li
344.108 91.4531 li
344.188 99.8199 li
344.242 96.3586 li
344.313 90.0143 li
344.366 93.7145 li
344.456 102.296 li
344.5 98.9261 li
344.581 91.1471 li
344.634 94.8568 li
344.715 102.27 li
344.768 98.2146 li
344.849 91.2077 li
344.893 94.6537 li
344.983 103.365 li
345.036 99.1757 li
345.108 92.9815 li
345.161 96.981 li
345.241 104.648 li
345.295 100.534 li
345.375 93.0076 li
345.429 97.1231 li
345.5 103.913 li
345.554 100.48 li
345.634 92.8851 li
345.688 96.943 li
345.768 105.189 li
345.822 101.66 li
345.893 94.9937 li
345.947 98.4046 li
346.036 106.831 li
346.081 103.476 li
346.161 95.5806 li
346.215 99.2787 li
346.295 107.064 li
346.349 103.355 li
346.42 96.6628 li
346.474 100.281 li
346.563 109.528 li
346.616 105.643 li
346.688 99.5903 li
346.741 103.638 li
346.822 111.634 li
346.875 107.772 li
346.956 100.42 li
347.009 104.672 li
347.09 111.919 li
347.134 108.783 li
347.215 101.362 li
347.268 105.427 li
347.348 113.795 li
347.402 110.247 li
347.482 103.137 li
347.536 107.336 li
347.607 114.19 li
347.661 110.592 li
347.75 102.028 li
347.795 105.271 li
347.875 112.603 li
347.929 108.585 li
348.009 101.102 li
348.063 105.309 li
348.143 112.493 li
348.188 109.16 li
348.277 100.837 li
348.322 104.037 li
348.402 111.025 li
348.447 107.77 li
348.536 98.2473 li
348.589 101.907 li
348.67 108.633 li
348.714 105.272 li
348.795 97.2804 li
348.848 100.937 li
348.929 108.954 li
348.982 105.244 li
349.063 97.7448 li
349.116 101.741 li
349.197 108.702 li
349.241 105.344 li
349.322 97.1793 li
349.375 100.765 li
349.464 109.05 li
349.509 105.802 li
349.58 99.3116 li
349.634 102.94 li
349.723 112.639 li
349.777 109.033 li
349.848 102.927 li
349.902 106.909 li
349.991 115.457 li
350.036 112.179 li
350.116 105.474 li
350.161 108.99 li
350.25 118.875 li
350.304 115.634 li
350.375 110.198 li
350.42 113.546 li
350.518 124.371 li
350.571 120.461 li
350.643 115.021 li
350.688 118.417 li
350.777 127.672 li
350.83 123.868 li
350.902 117.568 li
350.955 121.58 li
351.045 130.678 li
351.098 126.732 li
351.17 121.406 li
351.214 124.944 li
351.304 134.478 li
351.357 130.672 li
351.429 123.975 li
351.482 127.419 li
351.562 135.352 li
351.616 131.712 li
351.696 124.173 li
351.75 128.323 li
351.83 136.237 li
351.884 132.457 li
351.955 125.995 li
352.009 129.701 li
352.089 138.041 li
352.143 134.538 li
352.223 126.786 li
352.277 130.56 li
352.357 137.803 li
352.411 133.584 li
352.491 126.634 li
352.536 130.214 li
352.625 138.952 li
352.678 134.848 li
352.75 129.131 li
352.795 132.415 li
352.884 141.804 li
352.937 138.033 li
353.018 131.297 li
353.062 134.811 li
353.152 143.325 li
353.205 139.11 li
353.277 133.374 li
353.321 136.805 li
353.419 147.038 li
353.473 142.972 li
353.536 138.286 li
353.58 141.308 li
353.678 151.977 li
353.732 148.051 li
353.803 142.266 li
353.848 145.482 li
353.937 155.161 li
353.991 151.841 li
354.062 145.889 li
354.116 150.118 li
354.205 160.101 li
354.259 156.66 li
354.33 151.479 li
354.375 154.99 li
354.464 164.968 li
354.518 161.54 li
354.589 155.037 li
354.643 158.658 li
354.732 167.638 li
354.785 163.709 li
354.857 158.084 li
354.902 161.504 li
355 171.83 li
355.053 167.717 li
355.116 162.697 li
355.169 166.545 li
355.259 175.61 li
355.312 171.472 li
355.384 165.242 li
355.437 169.333 li
355.518 177.681 li
355.571 174.34 li
355.643 168.174 li
355.696 172.191 li
355.785 182.055 li
355.839 178.539 li
355.91 173.029 li
355.955 176.3 li
356.044 186.149 li
356.098 182.767 li
356.169 176.237 li
356.223 179.885 li
356.312 189.34 li
356.366 185.788 li
356.437 180.48 li
356.482 184.04 li
356.58 194.973 li
356.634 191.156 li
356.696 186.267 li
356.75 190.189 li
356.839 199.671 li
356.892 195.844 li
356.964 189.865 li
357.009 192.932 li
357.107 203.051 li
357.16 199.002 li
357.223 194.017 li
357.276 198.028 li
357.366 207.941 li
357.419 204.353 li
357.491 198.401 li
357.544 202.435 li
357.625 210.553 li
357.678 206.835 li
357.758 199.554 li
357.812 203.839 li
357.892 211.352 li
357.946 207.278 li
358.017 200.936 li
358.071 204.869 li
358.151 213.078 li
358.205 209.398 li
358.285 201.843 li
358.339 205.705 li
358.41 212.337 li
358.464 208.679 li
358.553 199.942 li
358.607 204.266 li
358.678 210.66 li
358.732 206.822 li
358.812 199.395 li
358.866 203.567 li
358.946 210.847 li
358.991 207.577 li
359.08 199.185 li
359.124 202.375 li
359.205 209.65 li
359.258 205.549 li
359.339 197.676 li
359.392 201.7 li
359.473 209.248 li
359.526 205.306 li
359.598 199.014 li
359.651 202.998 li
359.741 211.633 li
359.785 208.325 li
359.866 201.219 li
359.919 205.48 li
359.999 213.134 li
360.053 209.148 li
360.124 202.754 li
360.178 206.779 li
360.267 215.983 li
360.321 212.166 li
360.383 207.083 li
360.437 210.865 li
360.526 220.857 li
360.58 217.374 li
360.651 211.206 li
360.705 215.1 li
360.794 223.765 li
360.848 219.517 li
360.919 213.885 li
360.964 217.359 li
361.053 227.284 li
361.107 224.006 li
361.178 218.211 li
361.231 222.389 li
361.321 231.383 li
361.374 227.081 li
361.446 220.943 li
361.499 225.026 li
361.58 232.591 li
361.633 228.553 li
361.705 221.829 li
361.758 225.507 li
361.848 234.25 li
361.901 230.064 li
361.973 224.177 li
362.017 227.288 li
362.106 236.184 li
362.16 232.052 li
362.24 224.79 li
362.285 227.935 li
362.365 235.734 li
362.419 232.134 li
362.499 224.584 li
362.553 228.738 li
362.633 236.83 li
362.687 233.18 li
362.758 226.674 li
362.812 230.284 li
362.892 238.686 li
362.946 235.274 li
363.026 227.56 li
363.08 231.417 li
363.16 239.091 li
363.214 235.258 li
363.285 228.701 li
363.339 232.508 li
363.428 241.771 li
363.481 237.915 li
363.553 232.243 li
363.597 235.474 li
363.687 244.881 li
363.74 241.14 li
363.821 234.288 li
363.865 237.725 li
363.955 246.367 li
364.008 242.256 li
364.08 236.44 li
364.124 239.748 li
364.213 249.746 li
364.276 245.419 li
364.338 240.188 li
364.392 243.832 li
364.481 252.474 li
364.526 249.191 li
364.606 241.502 li
364.66 245.334 li
364.74 253.228 li
364.794 249.55 li
364.865 242.927 li
364.919 246.567 li
365.008 255.662 li
365.062 251.63 li
365.133 245.419 li
365.187 249.344 li
365.267 257.091 li
365.321 253.088 li
365.401 245.675 li
365.454 249.952 li
365.535 257.247 li
365.588 253.073 li
365.66 246.975 li
365.713 251.24 li
365.794 259.868 li
365.847 256.529 li
365.928 249.9 li
365.972 253.317 li
366.062 261.971 li
366.115 257.712 li
366.187 251.286 li
366.24 255.301 li
366.329 263.865 li
366.374 260.725 li
366.445 254.658 li
366.499 258.671 li
366.588 268.648 li
366.642 265.165 li
366.713 259.48 li
366.758 262.624 li
366.847 272.443 li
366.91 268.047 li
366.972 262.607 li
367.026 266.255 li
367.115 275.958 li
367.169 272.551 li
367.24 267.17 li
367.285 270.607 li
367.383 281.224 li
367.436 277.161 li
367.508 271.768 li
367.553 275.207 li
367.642 284.095 li
367.695 279.973 li
367.767 273.472 li
367.82 277.345 li
367.91 285.807 li
367.954 282.537 li
368.035 275.88 li
368.079 279.301 li
368.169 288.26 li
368.222 284.063 li
368.302 277.075 li
368.347 280.362 li
368.427 287.633 li
368.481 283.463 li
368.561 275.414 li
368.615 279.239 li
368.695 286.33 li
368.74 283.109 li
368.829 275.082 li
368.874 278.537 li
368.954 286.185 li
369.008 282.176 li
369.088 273.991 li
369.142 277.488 li
369.213 283.958 li
369.267 280.339 li
369.356 271.638 li
369.41 276.052 li
369.481 282.801 li
369.535 279.262 li
369.615 272.054 li
369.668 276.297 li
369.749 283.867 li
369.802 279.663 li
369.883 272.602 li
369.927 275.947 li
370.008 283.776 li
370.061 280.184 li
370.142 272.974 li
370.186 276.219 li
370.276 285.776 li
370.329 282.34 li
370.401 276.432 li
370.454 280.582 li
370.543 289.601 li
370.597 285.384 li
370.668 279.476 li
370.713 282.634 li
370.802 291.818 li
370.856 288.134 li
370.927 281.968 li
370.981 286.098 li
371.07 295.591 li
371.124 291.859 li
371.195 286.602 li
371.24 290.117 li
371.329 299.762 li
371.383 296.071 li
371.454 289.459 li
371.508 293.021 li
371.597 301.477 li
371.642 298.264 li
371.722 291.321 li
371.767 294.634 li
371.856 304.39 li
371.909 300.982 li
371.981 294.752 li
372.034 298.522 li
372.124 307.075 li
372.168 303.707 li
372.249 296.082 li
372.302 299.975 li
372.383 307.654 li
372.436 303.804 li
372.508 297.219 li
372.561 300.983 li
372.65 310.093 li
372.704 306.116 li
372.775 300.283 li
372.82 303.395 li
372.909 312.565 li
372.963 308.698 li
373.043 301.738 li
373.088 305.122 li
373.177 313.712 li
373.231 309.602 li
373.302 303.84 li
373.347 307.176 li
373.445 317.28 li
373.499 313.028 li
373.561 307.877 li
373.615 311.638 li
373.704 320.499 li
373.757 316.257 li
373.829 309.98 li
373.882 314.059 li
373.963 322.299 li
374.016 318.876 li
374.088 312.612 li
374.141 316.513 li
374.231 325.971 li
374.284 322.125 li
374.356 316.143 li
374.409 320.213 li
374.49 328.088 li
374.543 324.152 li
374.623 316.85 li
374.677 321.148 li
374.757 328.362 li
374.802 325.204 li
374.882 317.811 li
374.936 321.866 li
375.016 330.02 li
375.07 326.291 li
375.15 319.01 li
375.204 323.097 li
375.275 329.752 li
375.329 326.045 li
375.418 317.544 li
375.463 320.894 li
375.543 328.351 li
375.597 324.445 li
375.677 317.262 li
375.722 320.502 li
375.811 329.011 li
375.864 324.622 li
375.936 317.743 li
375.989 321.168 li
376.07 328.493 li
376.123 324.346 li
376.204 316.66 li
376.257 320.816 li
376.338 328.238 li
376.391 324.186 li
376.463 318.025 li
376.516 322.163 li
376.597 330.727 li
376.65 327.338 li
376.73 320.383 li
376.775 323.602 li
376.864 332.18 li
376.918 327.97 li
376.989 321.487 li
377.043 325.454 li
377.132 334.176 li
377.186 330.045 li
377.248 324.82 li
377.302 328.534 li
377.391 338.063 li
377.445 334.244 li
377.516 327.85 li
377.57 331.576 li
377.65 339.578 li
377.704 335.906 li
377.784 328.638 li
377.829 331.823 li
377.918 340.79 li
377.971 336.888 li
378.043 330.52 li
378.096 334.314 li
378.177 342.385 li
378.23 338.566 li
378.311 330.573 li
378.364 334.15 li
378.436 340.622 li
378.489 336.935 li
378.579 328.003 li
378.632 332.183 li
378.704 338.473 li
378.757 334.49 li
378.837 326.452 li
378.891 330.063 li
378.962 336.56 li
379.016 332.743 li
379.105 323.092 li
379.159 326.611 li
379.23 331.962 li
379.275 328.521 li
379.364 318.432 li
379.427 322.838 li
379.498 328.318 li
379.543 324.836 li
379.632 315.97 li
379.686 319.99 li
379.757 325.939 li
379.802 322.744 li
379.9 312.633 li
379.953 316.795 li
380.016 321.984 li
380.07 318.316 li
380.159 309.368 li
380.212 313.614 li
380.284 320.28 li
380.337 316.646 li
380.418 308.928 li
380.471 312.735 li
380.552 319.804 li
380.596 316.444 li
380.686 307.508 li
380.739 311.53 li
380.811 317.879 li
380.864 314.07 li
380.945 306.286 li
380.998 310.267 li
381.078 318.013 li
381.132 314.081 li
381.212 307.146 li
381.257 310.454 li
381.337 318.218 li
381.391 314.367 li
381.471 306.042 li
381.525 309.47 li
381.605 316.424 li
381.65 313.229 li
381.739 304.805 li
381.784 308.109 li
381.873 316.272 li
381.918 312.822 li
381.998 305.01 li
382.052 308.626 li
382.132 315.585 li
382.177 312.2 li
382.266 302.971 li
382.319 306.824 li
382.391 313.2 li
382.444 309.465 li
382.525 301.544 li
382.578 305.367 li
382.659 313.057 li
382.712 309.077 li
382.793 301.793 li
382.846 305.972 li
382.918 312.551 li
382.971 308.756 li
383.052 300.409 li
383.105 303.892 li
383.185 311.316 li
383.239 307.38 li
383.319 300.494 li
383.364 303.999 li
383.453 312.795 li
383.507 308.592 li
383.578 302.221 li
383.632 306.05 li
383.712 313.647 li
383.766 309.575 li
383.846 302.162 li
383.9 306.467 li
383.98 313.749 li
384.025 310.621 li
384.105 303.389 li
384.159 307.556 li
384.239 315.857 li
384.293 312.216 li
384.373 305.076 li
384.426 309.267 li
384.498 316.024 li
384.551 312.384 li
384.641 304.017 li
384.685 307.423 li
384.766 314.872 li
384.819 310.911 li
384.9 303.586 li
384.953 307.821 li
385.034 314.776 li
385.078 311.232 li
385.167 302.586 li
385.221 306.667 li
385.292 312.15 li
385.337 308.659 li
385.426 298.82 li
385.48 302.309 li
385.551 308.637 li
385.605 304.916 li
385.694 296.385 li
385.739 299.648 li
385.819 306.709 li
385.864 303.49 li
385.953 293.798 li
386.007 297.124 li
386.078 303.063 li
386.132 298.97 li
386.221 289.818 li
386.275 293.986 li
386.346 300.143 li
386.4 296.148 li
386.48 288.634 li
386.533 292.746 li
386.614 299.808 li
386.658 296.432 li
386.748 287.996 li
386.792 291.221 li
386.873 298.506 li
386.926 294.462 li
387.007 286.876 li
387.06 291.105 li
387.141 298.799 li
387.194 294.915 li
387.266 288.725 li
387.319 292.729 li
387.399 301.148 li
387.453 297.643 li
387.533 290.325 li
387.587 294.43 li
387.667 301.707 li
387.721 297.461 li
387.792 290.8 li
387.846 294.594 li
387.935 303.13 li
387.98 299.884 li
388.06 293.069 li
388.105 296.315 li
388.194 305.037 li
388.248 300.715 li
388.328 293.456 li
388.373 296.629 li
388.453 303.97 li
388.507 299.959 li
388.587 292.085 li
388.64 296.007 li
388.721 303.308 li
388.774 299.043 li
388.855 291.944 li
388.899 295.18 li
388.98 302.487 li
389.033 298.235 li
389.123 289.542 li
389.167 292.75 li
389.239 299 li
389.292 295.291 li
389.381 286.298 li
389.435 290.474 li
389.506 296.912 li
389.56 293.054 li
389.64 285.033 li
389.694 288.613 li
389.765 295.235 li
389.819 291.605 li
389.908 282.266 li
389.962 286.076 li
390.033 292.095 li
390.087 288.052 li
390.167 280.036 li
390.221 283.902 li
390.301 291.389 li
390.355 287.29 li
390.435 280.257 li
390.48 283.496 li
390.56 291.17 li
390.614 287.266 li
390.694 279.013 li
390.747 282.571 li
390.828 289.684 li
390.881 285.475 li
390.953 278.527 li
391.006 282.023 li
391.096 290.475 li
391.14 287.189 li
391.221 279.68 li
391.274 283.53 li
391.355 290.74 li
391.399 287.485 li
391.488 278.647 li
391.542 282.747 li
391.613 289.351 li
391.667 285.759 li
391.747 278.093 li
391.801 282.078 li
391.881 289.831 li
391.935 285.827 li
392.015 278.567 li
392.069 282.728 li
392.14 289.157 li
392.194 285.221 li
392.274 276.753 li
392.328 280.172 li
392.408 287.365 li
392.462 283.251 li
392.542 276.192 li
392.587 279.575 li
392.676 287.996 li
392.721 284.679 li
392.801 276.947 li
392.854 280.63 li
392.935 287.93 li
392.988 283.699 li
393.069 276.26 li
393.122 280.602 li
393.203 287.899 li
393.256 283.752 li
393.328 277.834 li
393.372 281.025 li
393.462 290.796 li
393.515 287.378 li
393.595 280.787 li
393.64 284.236 li
393.729 292.801 li
393.783 288.509 li
393.854 282.226 li
393.908 286.374 li
393.997 294.919 li
394.042 291.712 li
394.113 285.614 li
394.167 289.546 li
394.256 299.004 li
394.31 295.1 li
394.381 288.93 li
394.435 292.855 li
394.515 300.705 li
394.569 296.845 li
394.649 289.666 li
394.694 292.942 li
394.783 301.63 li
394.836 297.523 li
394.908 291.259 li
394.961 295.202 li
395.042 303.11 li
395.095 299.134 li
395.176 291.302 li
395.229 295.019 li
395.301 301.3 li
395.354 297.384 li
395.444 288.527 li
395.497 292.79 li
395.569 298.855 li
395.622 294.686 li
395.702 286.823 li
395.756 290.631 li
395.827 297.065 li
395.881 293.147 li
395.97 283.807 li
396.024 287.544 li
396.095 292.817 li
396.14 289.274 li
396.229 279.429 li
396.283 282.972 li
396.354 289.518 li
396.408 285.981 li
396.497 277.557 li
396.542 280.815 li
396.622 287.979 li
396.676 283.643 li
396.756 275.23 li
396.81 278.683 li
396.881 285.023 li
396.935 281.346 li
397.024 272.859 li
397.068 276.281 li
397.149 284.186 li
397.202 280.59 li
397.283 273.386 li
397.336 277.598 li
397.417 284.844 li
397.461 281.533 li
397.551 273.118 li
397.595 276.36 li
397.676 283.839 li
397.729 279.975 li
397.81 272.514 li
397.863 276.758 li
397.943 284.459 li
397.997 280.467 li
398.068 273.853 li
398.122 277.404 li
398.202 285.139 li
398.256 281.163 li
398.336 273.025 li
398.39 276.595 li
398.461 283.268 li
398.515 279.852 li
398.604 271.414 li
398.649 274.748 li
398.729 282.567 li
398.783 278.823 li
398.863 270.981 li
398.917 274.629 li
398.988 281.2 li
399.042 277.481 li
399.131 268.055 li
399.184 271.799 li
399.256 277.62 li
399.3 274.561 li
399.39 265.152 li
399.443 268.821 li
399.524 275.848 li
399.568 272.557 li
399.658 263.832 li
399.711 267.848 li
399.783 273.819 li
399.827 270.691 li
399.925 260.718 li
399.979 265.051 li
400.05 270.576 li
400.095 267.199 li
400.184 258.683 li
400.229 261.978 li
400.309 269.928 li
400.363 266.316 li
400.443 258.442 li
400.497 262.056 li
400.577 268.876 li
400.622 265.425 li
400.711 256.366 li
400.765 260.388 li
400.836 266.859 li
400.89 263.175 li
400.97 255.485 li
401.024 259.432 li
401.104 267.007 li
401.158 262.867 li
401.238 255.446 li
401.291 259.494 li
401.363 265.698 li
401.416 261.583 li
401.506 252.918 li
401.55 256.224 li
401.631 263.09 li
401.675 259.875 li
401.765 251.267 li
401.818 255.496 li
401.89 262.134 li
401.943 258.329 li
402.032 249.794 li
402.086 253.994 li
402.148 259.316 li
402.202 255.642 li
402.291 245.988 li
402.345 249.666 li
402.416 255.917 li
402.47 252.107 li
402.55 243.945 li
402.604 247.528 li
402.684 254.767 li
402.729 251.599 li
402.818 242.538 li
402.872 246.32 li
402.943 252.513 li
402.997 248.544 li
403.077 240.057 li
403.131 243.55 li
403.211 251.117 li
403.265 247.298 li
403.336 240.494 li
403.389 243.956 li
403.479 252.658 li
403.532 248.37 li
403.604 241.857 li
403.657 245.628 li
403.738 253.343 li
403.791 249.492 li
403.872 242.571 li
403.916 246.058 li
404.006 255.265 li
404.059 251.543 li
404.131 245.929 li
404.175 249.22 li
404.264 259.168 li
404.327 254.71 li
404.398 249.068 li
404.443 252.405 li
404.532 260.99 li
404.586 256.766 li
404.657 250.449 li
404.711 254.537 li
404.8 263.074 li
404.845 259.793 li
404.916 253.301 li
404.97 256.79 li
405.059 265.529 li
405.113 261.152 li
405.193 254.187 li
405.238 257.525 li
405.318 264.739 li
405.372 260.552 li
405.452 252.797 li
405.505 256.837 li
405.586 263.911 li
405.63 260.621 li
405.711 252.55 li
405.764 255.923 li
405.845 263.103 li
405.889 259.9 li
405.979 250.174 li
406.032 253.5 li
406.104 259.567 li
406.157 255.637 li
406.246 246.721 li
406.3 250.992 li
406.371 257.241 li
406.425 253.218 li
406.505 245.376 li
406.559 249.147 li
406.63 255.702 li
406.684 251.949 li
406.773 242.833 li
406.827 246.805 li
406.898 252.688 li
406.943 249.624 li
407.032 240.626 li
407.086 244.66 li
407.166 252.055 li
407.22 247.875 li
407.291 241.106 li
407.345 244.59 li
407.425 252.279 li
407.479 248.318 li
407.559 240.332 li
407.612 244.104 li
407.693 251.149 li
407.737 247.951 li
407.818 240.083 li
407.871 243.794 li
407.952 252.217 li
408.005 248.876 li
408.086 241.679 li
408.139 245.798 li
408.22 253.042 li
408.264 249.727 li
408.353 241.175 li
408.407 245.468 li
408.478 251.986 li
408.532 248.271 li
408.612 240.791 li
408.666 244.961 li
408.746 252.652 li
408.8 248.576 li
408.88 241.579 li
408.925 244.837 li
409.005 252.315 li
409.059 248.261 li
409.139 239.933 li
409.193 243.466 li
409.273 250.432 li
409.318 247.235 li
409.407 239.094 li
409.452 242.547 li
409.532 250.731 li
409.586 247.237 li
409.666 239.557 li
409.719 243.318 li
409.8 250.333 li
409.844 247.011 li
409.934 238.305 li
409.987 242.582 li
410.059 249.395 li
410.112 245.99 li
410.193 238.79 li
410.246 243.103 li
410.327 251.218 li
410.38 247.458 li
410.46 240.716 li
410.505 244.102 li
410.585 252.148 li
410.639 248.591 li
410.719 240.897 li
410.773 244.876 li
410.853 252.797 li
410.907 249.142 li
410.978 242.767 li
411.032 246.58 li
411.121 255.488 li
411.175 251.241 li
411.246 244.932 li
411.3 248.795 li
411.38 256.186 li
411.434 251.966 li
411.514 244.59 li
411.559 247.797 li
411.648 255.989 li
411.693 252.686 li
411.773 245.262 li
411.826 249.251 li
411.907 256.937 li
411.96 252.809 li
412.041 245.137 li
412.094 249.003 li
412.166 255.187 li
412.219 251.146 li
412.309 242.491 li
412.353 245.82 li
412.434 252.949 li
412.487 248.761 li
412.567 241.3 li
412.621 245.456 li
412.692 252.114 li
412.746 248.34 li
412.835 239.674 li
412.889 243.853 li
412.96 249.412 li
413.005 246.023 li
413.094 236.839 li
413.148 240.85 li
413.228 247.788 li
413.273 244.465 li
413.353 236.859 li
413.407 240.715 li
413.487 248.504 li
413.541 244.559 li
413.621 237.093 li
413.675 241.197 li
413.755 248.104 li
413.8 244.746 li
413.88 237.117 li
413.933 241.147 li
414.023 249.674 li
414.067 246.447 li
414.139 240.166 li
414.192 243.885 li
414.282 253.078 li
414.335 249.049 li
414.407 242.69 li
414.46 246.556 li
414.541 254.63 li
414.594 251.072 li
414.666 244.38 li
414.719 247.946 li
414.808 257.359 li
414.862 253.661 li
414.933 247.757 li
414.987 251.891 li
415.067 260.139 li
415.121 256.415 li
415.201 248.941 li
415.255 252.955 li
415.335 259.856 li
415.38 256.499 li
415.46 248.477 li
415.514 252.106 li
415.594 260.048 li
415.648 256.321 li
415.728 248.86 li
415.782 252.804 li
415.853 259.431 li
415.907 255.654 li
415.996 246.458 li
416.049 250.322 li
416.121 255.929 li
416.165 252.656 li
416.255 243.194 li
416.308 246.889 li
416.38 253.599 li
416.433 250.086 li
416.523 241.347 li
416.576 245.388 li
416.648 251.048 li
416.692 247.654 li
416.79 237.492 li
416.844 241.707 li
416.906 246.787 li
416.96 242.987 li
417.049 234.159 li
417.103 238.45 li
417.174 244.798 li
417.228 240.806 li
417.308 232.775 li
417.362 236.341 li
417.433 242.739 li
417.487 238.916 li
417.576 229.591 li
417.63 233.471 li
417.701 239.401 li
417.755 235.262 li
417.835 227.302 li
417.889 231.15 li
417.969 238.222 li
418.014 234.919 li
418.103 226.24 li
418.156 230.259 li
418.228 236.072 li
418.272 232.81 li
418.371 222.732 li
418.424 227 li
418.487 232.301 li
418.54 228.701 li
418.63 219.856 li
418.683 224.018 li
418.755 230.253 li
418.808 226.113 li
418.897 217.499 li
418.942 220.638 li
419.013 226.624 li
419.067 222.556 li
419.156 212.653 li
419.21 216.206 li
419.281 221.92 li
419.326 218.809 li
419.415 209.225 li
419.469 212.715 li
419.549 219.436 li
419.594 215.917 li
419.683 206.634 li
419.737 210.317 li
419.808 215.977 li
419.853 212.712 li
419.942 202.655 li
420.005 207.039 li
420.076 212.749 li
420.121 209.504 li
420.21 201.167 li
420.254 204.48 li
420.335 212.449 li
420.388 208.798 li
420.469 200.775 li
420.522 204.33 li
420.603 211.241 li
420.647 207.917 li
420.737 199.272 li
420.79 203.628 li
420.871 210.634 li
420.915 207.347 li
420.996 200.122 li
421.049 204.307 li
421.129 212.164 li
421.183 208.149 li
421.263 200.864 li
421.317 205.028 li
421.388 211.497 li
421.442 207.666 li
421.522 199.517 li
421.576 203.182 li
421.656 210.637 li
421.71 206.598 li
421.79 199.471 li
421.835 202.667 li
421.915 210.428 li
421.969 206.548 li
422.058 197.803 li
422.112 201.881 li
422.174 207.108 li
422.228 203.411 li
422.317 193.773 li
422.37 197.455 li
422.442 203.652 li
422.495 199.716 li
422.585 191.152 li
422.629 194.344 li
422.701 200.823 li
422.754 197.15 li
422.844 187.072 li
422.906 191.257 li
422.969 195.73 li
423.013 192.486 li
423.111 182.09 li
423.165 186.269 li
423.236 192.022 li
423.281 188.791 li
423.37 179.804 li
423.424 183.685 li
423.495 189.997 li
423.549 186 li
423.638 177.067 li
423.692 181.19 li
423.763 186.835 li
423.808 183.573 li
423.897 174.751 li
423.951 178.996 li
424.031 186.245 li
424.076 183.057 li
424.156 175.541 li
424.21 179.374 li
424.29 187.067 li
424.344 183.036 li
424.424 175.448 li
424.477 179.515 li
424.558 186.443 li
424.602 183.106 li
424.683 175.511 li
424.736 179.497 li
424.817 187.796 li
424.87 184.313 li
424.951 177.463 li
424.995 180.73 li
425.085 188.948 li
425.129 185.463 li
425.218 177.123 li
425.263 180.455 li
425.343 187.736 li
425.397 183.688 li
425.477 176.252 li
425.531 180.501 li
425.611 187.752 li
425.656 184.466 li
425.745 176.387 li
425.79 179.716 li
425.87 186.718 li
425.915 183.437 li
426.004 173.774 li
426.058 177.248 li
426.129 183.552 li
426.183 179.842 li
426.272 171.391 li
426.317 174.763 li
426.397 182.244 li
426.451 178.193 li
426.531 170.259 li
426.584 173.913 li
426.656 180.216 li
426.709 176.296 li
426.799 167.145 li
426.852 171.187 li
426.924 177.148 li
426.977 173.023 li
427.058 165.334 li
427.111 169.407 li
427.192 176.57 li
427.236 173.272 li
427.325 164.935 li
427.37 168.12 li
427.45 175.187 li
427.495 172.018 li
427.584 162.533 li
427.638 166.163 li
427.718 172.916 li
427.763 169.563 li
427.843 161.441 li
427.897 164.914 li
427.977 172.647 li
428.031 168.713 li
428.111 160.665 li
428.165 164.18 li
428.236 170.453 li
428.29 166.552 li
428.379 157.229 li
428.433 161.145 li
428.504 167.07 li
428.558 162.886 li
428.638 154.79 li
428.691 158.451 li
428.763 165.057 li
428.816 161.361 li
428.906 151.967 li
428.959 155.567 li
429.022 160.839 li
429.075 157.304 li
429.174 146.877 li
429.227 151.061 li
429.29 156.275 li
429.343 152.605 li
429.432 143.689 li
429.486 147.778 li
429.557 153.817 li
429.602 150.72 li
429.7 140.803 li
429.754 145.006 li
429.816 150.106 li
429.87 146.261 li
429.959 137.067 li
430.013 141.177 li
430.084 147.652 li
430.138 143.97 li
430.218 136.507 li
430.272 140.596 li
430.352 148.06 li
430.406 143.83 li
430.486 136.646 li
430.531 139.857 li
430.611 147.55 li
430.665 143.856 li
430.745 136.364 li
430.798 140.589 li
430.879 148.683 li
430.932 145.1 li
431.004 138.934 li
431.057 142.864 li
431.147 151.581 li
431.191 148.294 li
431.272 140.897 li
431.325 144.873 li
431.406 152.347 li
431.459 148.266 li
431.531 141.459 li
431.584 145.053 li
431.673 153.679 li
431.727 149.433 li
431.798 143.426 li
431.852 147.569 li
431.932 155.107 li
431.986 150.808 li
432.066 143.177 li
432.12 147.148 li
432.191 153.347 li
432.245 149.356 li
432.325 141.114 li
432.379 144.731 li
432.459 151.964 li
432.513 147.698 li
432.593 140.213 li
432.647 144.254 li
432.718 150.409 li
432.772 146.184 li
432.861 137.126 li
432.914 141.146 li
432.977 146.356 li
433.03 142.739 li
433.12 133.506 li
433.173 137.493 li
433.245 144.005 li
433.298 140.268 li
433.379 132.067 li
433.432 135.476 li
433.513 142.207 li
433.557 138.72 li
433.646 129.264 li
433.7 132.959 li
433.771 139.141 li
433.825 135.286 li
433.905 127.195 li
433.959 130.947 li
434.039 138.615 li
434.093 134.675 li
434.173 127.509 li
434.218 130.632 li
434.298 138.404 li
434.352 134.636 li
434.432 126.234 li
434.486 129.622 li
434.566 136.814 li
434.62 132.693 li
434.7 125.519 li
434.745 128.818 li
434.834 137.23 li
434.879 133.951 li
434.959 126.118 li
435.012 129.668 li
435.093 136.742 li
435.137 133.444 li
435.227 124.152 li
435.28 127.912 li
435.352 134.327 li
435.405 130.637 li
435.486 122.487 li
435.539 126.063 li
435.62 133.499 li
435.673 129.319 li
435.754 121.441 li
435.807 125.142 li
435.879 131.218 li
435.932 127.067 li
436.021 117.886 li
436.075 121.932 li
436.146 127.618 li
436.191 124.397 li
436.28 115.445 li
436.334 119.457 li
436.405 126.2 li
436.459 122.589 li
436.548 114.014 li
436.602 118.189 li
436.673 123.798 li
436.718 120.395 li
436.807 110.841 li
436.861 114.526 li
436.941 121.124 li
436.986 117.654 li
437.066 109.694 li
437.119 113.339 li
437.2 121.047 li
437.253 117.084 li
437.334 109.348 li
437.387 113.152 li
437.459 119.616 li
437.512 115.857 li
437.602 107.213 li
437.646 110.505 li
437.727 117.948 li
437.78 114.051 li
437.861 106.673 li
437.914 110.841 li
437.994 117.861 li
438.039 114.377 li
438.128 105.686 li
438.182 109.725 li
438.253 115.308 li
438.298 111.907 li
438.387 102.104 li
438.441 105.567 li
438.512 111.961 li
438.566 108.291 li
438.655 99.5693 li
438.709 103.71 li
438.78 109.456 li
438.825 106.057 li
438.923 95.7659 li
438.977 99.6968 li
439.039 104.182 li
439.084 100.988 li
439.182 89.8044 li
439.235 93.4229 li
439.307 98.9059 li
439.352 95.5731 li
439.441 85.7893 li
439.494 89.1118 li
439.566 95.175 li
439.619 91.0754 li
439.709 81.2266 li
439.762 84.6743 li
439.834 89.8378 li
439.878 86.3094 li
439.968 76.2711 li
440.021 79.6902 li
440.101 86.3478 li
440.146 82.9525 li
440.235 74.5744 li
440.28 77.8502 li
440.36 85.3146 li
440.414 81.2611 li
440.494 73.0834 li
440.548 76.668 li
440.628 83.4409 li
440.673 80.1187 li
440.753 72.0028 li
440.807 75.603 li
440.896 84.083 li
440.941 80.8721 li
441.021 74.0827 li
441.066 77.341 li
441.155 86.3549 li
441.209 82.3168 li
441.28 75.4709 li
441.333 78.9062 li
441.414 86.9575 li
441.467 83.5206 li
441.548 76.4689 li
441.592 79.7227 li
441.682 89.1835 li
441.735 85.5919 li
441.807 79.3104 li
441.86 83.0602 li
441.941 91.315 li
441.994 87.7286 li
442.075 79.948 li
442.128 83.7099 li
442.208 90.8834 li
442.262 86.6619 li
442.333 79.7311 li
442.387 83.2251 li
442.476 91.5548 li
442.521 88.1847 li
442.601 80.7053 li
442.655 84.5584 li
442.735 91.6276 li
442.78 88.2874 li
442.869 79.3024 li
442.923 83.2803 li
442.994 89.61 li
443.048 85.8093 li
443.128 77.9961 li
443.182 81.921 li
443.262 89.5607 li
443.316 85.5536 li
443.396 78.4713 li
443.441 81.6706 li
443.521 89.3405 li
443.574 85.4928 li
443.655 77.2525 li
443.708 80.8042 li
443.789 88.076 li
443.842 84.0221 li
443.914 77.1924 li
443.967 80.7482 li
444.057 89.4386 li
444.11 85.1816 li
444.182 78.9423 li
444.235 82.8843 li
444.315 90.3984 li
444.369 86.243 li
444.449 78.913 li
444.494 82.1237 li
444.583 90.3559 li
444.628 87.1271 li
444.708 79.9528 li
444.762 84.21 li
444.842 92.4536 li
444.896 88.789 li
444.976 81.8888 li
445.021 85.1258 li
445.101 93.0493 li
445.155 89.413 li
445.235 81.2799 li
445.289 84.8728 li
445.369 92.3991 li
445.423 88.4979 li
445.503 81.5706 li
445.548 84.9475 li
445.637 93.3892 li
445.681 90.0664 li
445.762 82.1142 li
445.815 85.5857 li
445.896 92.6342 li
445.94 89.409 li
446.03 80.4063 li
446.083 84.4402 li
446.155 91.3261 li
446.208 88.0328 li
446.289 80.458 li
446.342 84.4015 li
446.422 92.3755 li
446.476 88.5527 li
446.556 81.2511 li
446.61 85.3948 li
446.681 92.2137 li
446.735 88.7433 li
446.815 80.8043 li
446.869 84.6124 li
446.949 92.8198 li
447.003 89.4439 li
447.074 83.0668 li
447.128 86.7926 li
447.217 96.1022 li
447.271 92.1912 li
447.342 86.0055 li
447.396 89.9677 li
447.476 98.1092 li
447.53 94.5486 li
447.61 87.8442 li
447.655 91.4153 li
447.744 100.921 li
447.797 97.384 li
447.869 91.8472 li
447.913 95.1408 li
448.012 105.253 li
448.065 100.899 li
448.137 95.218 li
448.181 98.503 li
448.271 107.112 li
448.324 102.916 li
448.396 96.4759 li
448.449 100.427 li
448.538 108.913 li
448.583 105.632 li
448.663 98.9781 li
448.708 102.347 li
448.797 111.033 li
448.851 106.662 li
448.931 99.5491 li
448.976 102.799 li
449.056 110.014 li
449.11 105.88 li
449.19 98.0645 li
449.244 102.06 li
449.324 109.277 li
449.369 106.098 li
449.449 98.1527 li
449.503 101.595 li
449.583 109.081 li
449.637 104.951 li
449.717 96.728 li
449.77 100.261 li
449.842 106.776 li
449.895 103.25 li
449.985 94.9039 li
450.029 98.3666 li
450.11 106.429 li
450.163 102.955 li
450.244 95.8403 li
450.288 98.9715 li
450.378 107.562 li
450.431 103.288 li
450.511 96.3151 li
450.556 99.7404 li
450.636 107.747 li
450.69 104.32 li
450.77 97.4985 li
450.815 100.996 li
450.904 110.815 li
450.958 107.474 li
451.029 101.722 li
451.074 104.768 li
451.172 114.927 li
451.226 110.72 li
451.297 104.999 li
451.342 108.344 li
451.431 117.834 li
451.485 114.386 li
451.556 108.663 li
451.601 111.877 li
451.699 122.898 li
451.752 119.282 li
451.815 114.206 li
451.869 117.828 li
451.958 127.487 li
452.011 123.829 li
452.083 117.442 li
452.136 121.238 li
452.226 130.029 li
452.279 125.971 li
452.351 120.543 li
452.395 124.102 li
452.485 134.083 li
452.538 130.729 li
452.61 124.61 li
452.663 128.435 li
452.752 136.912 li
452.797 133.526 li
452.877 126.097 li
452.931 130.179 li
453.011 138.06 li
453.065 134.367 li
453.136 128.092 li
453.19 132.05 li
453.279 141.186 li
453.333 137.15 li
453.404 131.297 li
453.449 134.374 li
453.538 143.339 li
453.592 139.385 li
453.663 132.531 li
453.717 136.031 li
453.806 144.733 li
453.859 140.699 li
453.931 135.131 li
453.976 138.551 li
454.065 148.511 li
454.118 145.165 li
454.19 138.866 li
454.243 142.538 li
454.333 151.11 li
454.377 147.855 li
454.458 140.541 li
454.511 144.722 li
454.592 153.005 li
454.645 149.603 li
454.717 143.464 li
454.77 147.415 li
454.859 156.636 li
454.913 152.585 li
454.984 146.438 li
455.038 150.391 li
455.118 157.982 li
455.172 153.911 li
455.252 146.658 li
455.297 149.903 li
455.386 158.275 li
455.44 153.991 li
455.511 147.773 li
455.565 151.821 li
455.645 159.685 li
455.699 155.709 li
455.779 148.197 li
455.833 152.156 li
455.904 158.547 li
455.958 154.692 li
456.047 146.272 li
456.091 149.715 li
456.172 157.146 li
456.225 153.199 li
456.306 146.055 li
456.35 149.288 li
456.44 157.458 li
456.484 153.982 li
456.574 145.773 li
456.618 149.125 li
456.699 156.223 li
456.752 151.995 li
456.833 144.486 li
456.886 148.802 li
456.966 156.275 li
457.02 152.232 li
457.091 146.19 li
457.145 150.375 li
457.225 158.731 li
457.279 155.178 li
457.359 148.227 li
457.404 151.482 li
457.493 160.062 li
457.547 155.933 li
457.618 149.814 li
457.672 154.103 li
457.761 163.118 li
457.815 159.136 li
457.877 154.168 li
457.931 158.084 li
458.02 167.653 li
458.074 163.848 li
458.145 157.704 li
458.198 161.692 li
458.279 169.995 li
458.332 166.585 li
458.404 160.01 li
458.457 163.626 li
458.547 173.183 li
458.6 169.583 li
458.672 163.742 li
458.725 167.901 li
458.806 176.262 li
458.859 172.627 li
458.94 165.215 li
458.993 169.258 li
459.073 176.277 li
459.118 173.017 li
459.198 165.102 li
459.252 168.8 li
459.332 176.957 li
459.386 173.415 li
459.466 166.197 li
459.52 170.318 li
459.591 177.281 li
459.645 173.806 li
459.734 165.088 li
459.788 169.256 li
459.859 175.375 li
459.913 171.346 li
459.993 163.708 li
460.047 167.85 li
460.127 175.36 li
460.181 171.256 li
460.252 164.571 li
460.306 168.103 li
460.386 175.858 li
460.439 171.978 li
460.52 164.185 li
460.573 168.099 li
460.654 175.399 li
460.707 171.325 li
460.779 164.938 li
460.832 168.948 li
460.922 177.907 li
460.975 173.825 li
461.047 168.308 li
461.091 171.672 li
461.18 180.821 li
461.234 176.909 li
461.305 170.392 li
461.359 174.18 li
461.448 182.912 li
461.502 178.866 li
461.564 173.596 li
461.618 177.323 li
461.707 187.491 li
461.77 183.219 li
461.832 178.412 li
461.886 182.488 li
461.975 191.263 li
462.029 186.948 li
462.1 181.044 li
462.145 184.276 li
462.234 193.709 li
462.288 190.239 li
462.359 184.356 li
462.404 187.412 li
462.502 198.01 li
462.555 194.089 li
462.627 188.473 li
462.671 191.722 li
462.761 200.814 li
462.814 196.908 li
462.886 190.231 li
462.939 193.884 li
463.029 202.679 li
463.082 198.679 li
463.154 193.254 li
463.198 196.801 li
463.287 206.78 li
463.341 203.415 li
463.412 197.212 li
463.466 200.994 li
463.555 209.658 li
463.609 205.391 li
463.68 199.474 li
463.725 202.754 li
463.814 212.613 li
463.877 208.451 li
463.939 203.838 li
463.984 206.986 li
464.082 218.062 li
464.136 214.415 li
464.207 208.979 li
464.252 212.34 li
464.341 222.008 li
464.395 218.559 li
464.466 212.371 li
464.52 216.388 li
464.609 226.055 li
464.662 222.56 li
464.725 217.496 li
464.778 221.183 li
464.877 231.538 li
464.93 227.27 li
464.993 222.067 li
465.046 225.726 li
465.136 234.412 li
465.189 230.167 li
465.261 224.05 li
465.314 228.292 li
465.394 236.723 li
465.448 233.358 li
465.519 227.056 li
465.573 230.764 li
465.662 239.531 li
465.716 235.156 li
465.787 228.477 li
465.841 232.045 li
465.921 239.259 li
465.975 235.031 li
466.055 227.552 li
466.109 231.826 li
466.189 238.986 li
466.234 235.761 li
466.314 228.225 li
466.368 232.064 li
466.448 239.688 li
466.502 235.583 li
466.582 227.878 li
466.635 231.793 li
466.707 238.371 li
466.76 234.795 li
466.841 226.847 li
466.894 230.66 li
466.975 238.798 li
467.028 235.331 li
467.1 228.755 li
467.153 232.261 li
467.243 241.087 li
467.296 236.884 li
467.368 230.4 li
467.421 234.226 li
467.501 242.303 li
467.555 238.829 li
467.626 232.376 li
467.68 236.18 li
467.769 246.045 li
467.823 242.683 li
467.894 237.333 li
467.939 240.692 li
468.037 250.962 li
468.091 246.728 li
468.153 241.337 li
468.207 244.9 li
468.296 254.245 li
468.35 250.61 li
468.421 245.025 li
468.466 248.379 li
468.564 259.16 li
468.617 255.358 li
468.68 250.401 li
468.734 254.212 li
468.823 263.617 li
468.876 259.704 li
468.948 253.339 li
469.001 257.183 li
469.082 265.443 li
469.135 262.075 li
469.216 255.458 li
469.26 258.988 li
469.35 268.424 li
469.403 264.687 li
469.475 258.479 li
469.528 262.308 li
469.608 270.287 li
469.662 266.486 li
469.742 258.845 li
469.796 262.821 li
469.876 270.029 li
469.93 265.834 li
470.001 259.304 li
470.055 263.164 li
470.144 271.639 li
470.189 268.3 li
470.269 261.24 li
470.323 265.448 li
470.403 272.733 li
470.448 269.519 li
470.528 261.347 li
470.582 264.786 li
470.662 272.866 li
470.716 269.492 li
470.796 262.717 li
470.841 266.152 li
470.93 275.675 li
470.983 272.033 li
471.055 265.776 li
471.108 269.571 li
471.189 277.852 li
471.242 274.365 li
471.323 267.096 li
471.376 271.382 li
471.457 279.374 li
471.51 275.745 li
471.582 269.745 li
471.635 273.917 li
471.724 283.062 li
471.778 278.965 li
471.849 273.19 li
471.894 276.329 li
471.983 285.123 li
472.037 281.026 li
472.108 274.179 li
472.162 277.713 li
472.251 286.157 li
472.296 282.971 li
472.376 276.16 li
472.421 279.451 li
472.51 288.773 li
472.564 284.946 li
472.644 278.148 li
472.689 281.481 li
472.769 289.28 li
472.823 285.55 li
472.903 277.747 li
472.956 281.661 li
473.037 289.345 li
473.09 285.529 li
473.162 279.03 li
473.215 282.748 li
473.305 291.343 li
473.349 288.038 li
473.43 280.547 li
473.483 284.417 li
473.564 291.799 li
473.617 287.67 li
473.689 280.712 li
473.742 284.207 li
473.831 292.975 li
473.885 288.973 li
473.956 283.37 li
474.001 286.721 li
474.09 296.417 li
474.144 292.872 li
474.215 286.307 li
474.269 289.822 li
474.358 298.31 li
474.403 295.12 li
474.483 288.013 li
474.528 291.213 li
474.617 301.05 li
474.68 296.819 li
474.742 291.876 li
474.796 295.862 li
474.885 305.031 li
474.939 300.91 li
475.01 294.666 li
475.063 298.587 li
475.144 306.292 li
475.197 302.371 li
475.278 295.406 li
475.322 298.83 li
475.412 307.521 li
475.465 303.351 li
475.537 297.121 li
475.59 301.044 li
475.671 308.628 li
475.724 304.395 li
475.805 296.448 li
475.858 300.152 li
475.93 306.296 li
475.983 302.31 li
476.072 293.669 li
476.117 296.952 li
476.197 304.084 li
476.251 299.815 li
476.331 291.942 li
476.385 295.693 li
476.456 301.813 li
476.51 297.63 li
476.599 288.173 li
476.653 291.908 li
476.715 297.066 li
476.769 293.48 li
476.858 283.848 li
476.912 287.539 li
476.983 294.038 li
477.037 290.387 li
477.126 281.923 li
477.171 285.128 li
477.251 291.972 li
477.296 288.621 li
477.385 278.981 li
477.438 282.495 li
477.51 288.813 li
477.563 285.145 li
477.644 276.938 li
477.697 280.548 li
477.778 288.487 li
477.831 284.835 li
477.912 277.698 li
477.956 280.807 li
478.045 288.998 li
478.09 285.614 li
478.17 277.379 li
478.224 280.789 li
478.304 288.478 li
478.358 284.78 li
478.438 277.803 li
478.483 281.177 li
478.572 290.291 li
478.626 286.382 li
478.697 280.016 li
478.751 283.752 li
478.831 291.583 li
478.885 287.69 li
478.965 279.983 li
479.019 283.939 li
479.099 291.081 li
479.144 287.926 li
479.224 280.215 li
479.277 283.99 li
479.358 292.224 li
479.411 288.679 li
479.492 281.272 li
479.545 285.217 li
479.626 292.041 li
479.67 288.51 li
479.76 279.775 li
479.813 284.014 li
479.885 290.371 li
479.938 286.551 li
480.019 279.087 li
480.072 283.252 li
480.152 290.743 li
480.206 286.517 li
480.286 279.447 li
480.331 282.707 li
480.411 290.066 li
480.465 285.997 li
480.545 277.929 li
480.599 281.706 li
480.679 288.96 li
480.733 284.847 li
480.804 278.257 li
480.858 282.006 li
480.947 290.433 li
480.992 287.043 li
481.072 279.687 li
481.126 283.669 li
481.206 290.901 li
481.251 287.701 li
481.34 279.495 li
481.385 282.941 li
481.474 291.221 li
481.518 287.968 li
481.599 281.102 li
481.643 284.379 li
481.733 293.627 li
481.786 289.753 li
481.867 282.917 li
481.911 286.246 li
481.992 294.004 li
482.045 290.248 li
482.126 282.427 li
482.179 286.325 li
482.259 293.921 li
482.313 289.997 li
482.384 283.323 li
482.438 286.862 li
482.518 295.051 li
482.572 291.465 li
482.652 283.46 li
482.706 286.96 li
482.786 293.711 li
482.831 290.31 li
482.92 281.453 li
482.974 285.645 li
483.045 292.384 li
483.099 288.885 li
483.179 281.297 li
483.233 285.201 li
483.313 292.616 li
483.367 288.341 li
483.447 280.735 li
483.5 284.732 li
483.572 291.087 li
483.625 287.27 li
483.706 279.284 li
483.759 283.128 li
483.84 290.976 li
483.893 287.29 li
483.965 280.756 li
484.018 284.377 li
484.108 293.01 li
484.152 289.758 li
484.233 282.224 li
484.286 286.106 li
484.366 293.844 li
484.42 290.065 li
484.491 283.475 li
484.545 287.23 li
484.634 296.617 li
484.688 292.942 li
484.759 287.493 li
484.804 290.838 li
484.893 300.649 li
484.947 297.17 li
485.018 290.521 li
485.072 293.957 li
485.161 302.61 li
485.215 298.476 li
485.286 292.498 li
485.331 295.641 li
485.429 305.526 li
485.482 301.211 li
485.545 295.902 li
485.599 299.471 li
485.688 308.048 li
485.732 304.712 li
485.813 296.694 li
485.866 300.156 li
485.947 307.421 li
486 303.305 li
486.081 295.897 li
486.134 300.156 li
486.215 307.27 li
486.259 303.945 li
486.34 295.926 li
486.393 299.304 li
486.473 306.241 li
486.518 302.885 li
486.607 293.164 li
486.661 296.569 li
486.732 302.618 li
486.786 298.686 li
486.875 290.031 li
486.92 293.316 li
487 300.598 li
487.054 296.444 li
487.134 288.539 li
487.188 292.243 li
487.259 298.509 li
487.313 294.54 li
487.402 285.417 li
487.456 289.455 li
487.527 295.301 li
487.572 292.226 li
487.661 283.466 li
487.714 287.635 li
487.795 294.923 li
487.839 291.74 li
487.92 283.817 li
487.973 287.279 li
488.054 294.72 li
488.107 290.618 li
488.188 282.761 li
488.241 286.696 li
488.322 293.823 li
488.366 290.699 li
488.447 283.154 li
488.5 287.084 li
488.58 295.516 li
488.634 292.104 li
488.714 284.999 li
488.768 289.175 li
488.848 296.283 li
488.893 292.948 li
488.973 284.692 li
489.027 288.085 li
489.107 295.937 li
489.161 292.357 li
489.241 285.309 li
489.286 288.552 li
489.375 297.422 li
489.429 293.301 li
489.5 286.444 li
489.554 289.771 li
489.634 297.197 li
489.688 293.126 li
489.768 285.13 li
489.821 288.953 li
489.902 296.121 li
489.955 291.932 li
490.027 285.274 li
490.08 288.952 li
490.161 297.138 li
490.214 293.554 li
490.295 285.956 li
490.348 289.798 li
490.429 296.727 li
490.473 293.398 li
490.563 285.052 li
490.607 288.436 li
490.688 296.59 li
490.741 293.282 li
490.821 286.411 li
490.866 289.72 li
490.955 298.937 li
491.009 295.059 li
491.08 288.37 li
491.134 291.836 li
491.214 299.816 li
491.268 296.244 li
491.348 288.873 li
491.402 293.134 li
491.482 301.223 li
491.536 297.631 li
491.607 291.496 li
491.661 295.452 li
491.75 304.172 li
491.795 300.881 li
491.875 293.464 li
491.928 297.371 li
492.009 304.642 li
492.062 300.378 li
492.143 293.274 li
492.187 296.678 li
492.277 304.912 li
492.321 301.577 li
492.402 294.256 li
492.455 298.265 li
492.536 305.617 li
492.58 302.362 li
492.669 293.393 li
492.723 297.212 li
492.794 303.159 li
492.848 298.968 li
492.928 290.445 li
492.982 293.869 li
493.062 300.855 li
493.107 297.63 li
493.196 288.936 li
493.25 292.971 li
493.321 299.153 li
493.375 294.974 li
493.464 286 li
493.518 290.044 li
493.58 295.266 li
493.634 291.662 li
493.723 282.481 li
493.777 286.52 li
493.848 293.163 li
493.902 289.591 li
493.982 281.733 li
494.035 285.398 li
494.116 292.559 li
494.16 289.323 li
494.25 280.36 li
494.303 284.318 li
494.375 290.837 li
494.428 287.242 li
494.509 279.558 li
494.562 283.587 li
494.643 291.746 li
494.696 288.193 li
494.768 281.634 li
494.821 285.131 li
494.91 293.559 li
494.955 290.211 li
495.035 282.412 li
495.089 286.14 li
495.169 293.81 li
495.223 290.001 li
495.294 283.259 li
495.348 286.815 li
495.437 295.765 li
495.491 291.699 li
495.562 285.49 li
495.616 289.378 li
495.696 296.934 li
495.75 292.752 li
495.83 284.989 li
495.884 288.906 li
495.955 295.49 li
496.009 291.913 li
496.089 283.905 li
496.142 287.549 li
496.223 295.111 li
496.276 291.05 li
496.357 283.329 li
496.41 287.092 li
496.482 293.226 li
496.535 289.089 li
496.625 279.802 li
496.678 283.714 li
496.75 289.2 li
496.794 285.871 li
496.884 276.633 li
496.937 280.469 li
497.009 287.027 li
497.062 283.311 li
497.151 274.54 li
497.205 278.571 li
497.267 283.996 li
497.321 280.47 li
497.41 270.564 li
497.464 273.99 li
497.535 280.254 li
497.589 276.561 li
497.678 268.272 li
497.723 271.732 li
497.803 279.244 li
497.857 275.212 li
497.937 267.401 li
497.991 271.137 li
498.062 277.533 li
498.116 273.732 li
498.205 264.966 li
498.258 269.277 li
498.33 275.558 li
498.383 271.672 li
498.464 264.374 li
498.517 268.635 li
498.598 275.912 li
498.642 272.644 li
498.732 264.385 li
498.776 267.605 li
498.857 274.669 li
498.901 271.534 li
498.991 262.236 li
499.044 266.002 li
499.124 272.899 li
499.169 269.619 li
499.249 261.647 li
499.303 265.176 li
499.383 272.874 li
499.437 268.903 li
499.517 260.878 li
499.571 264.447 li
499.642 270.825 li
499.696 267.083 li
499.785 258.255 li
499.839 262.54 li
499.91 268.973 li
499.964 265.209 li
500.044 257.816 li
500.098 261.961 li
500.178 269.247 li
500.223 265.998 li
500.312 257.629 li
500.357 260.829 li
500.437 268.219 li
500.49 264.281 li
500.571 256.666 li
500.624 260.844 li
500.705 268.66 li
500.758 264.91 li
500.83 258.792 li
500.883 262.832 li
500.973 271.54 li
501.017 268.274 li
501.098 261.223 li
501.142 264.34 li
501.231 273.219 li
501.285 269.344 li
501.356 263.085 li
501.41 267.169 li
501.499 276.448 li
501.553 272.658 li
501.615 267.518 li
501.669 271.17 li
501.758 280.88 li
501.812 277.23 li
501.883 270.811 li
501.937 274.488 li
502.017 282.843 li
502.071 279.545 li
502.151 272.591 li
502.196 275.886 li
502.285 285.393 li
502.339 281.838 li
502.41 275.584 li
502.464 279.334 li
502.544 287.601 li
502.597 283.991 li
502.678 276.066 li
502.731 279.683 li
502.812 286.6 li
502.856 283.338 li
502.946 274.905 li
502.99 278.175 li
503.071 286.179 li
503.124 282.637 li
503.205 274.887 li
503.258 278.575 li
503.338 285.435 li
503.383 281.964 li
503.472 272.692 li
503.526 276.461 li
503.597 282.51 li
503.651 278.509 li
503.731 270.388 li
503.785 274.13 li
503.865 281.591 li
503.919 277.518 li
503.999 270.373 li
504.044 273.562 li
504.124 281.239 li
504.178 277.418 li
504.258 269.187 li
504.312 272.722 li
504.392 279.99 li
504.446 275.955 li
504.517 269.165 li
504.571 272.772 li
504.66 281.649 li
504.713 277.566 li
504.785 271.585 li
504.838 275.727 li
504.919 283.572 li
504.972 279.641 li
505.053 272.593 li
505.097 275.943 li
505.187 284.449 li
505.24 280.308 li
505.312 274.467 li
505.356 277.716 li
505.445 287.52 li
505.499 284.136 li
505.57 277.643 li
505.624 281.107 li
505.713 289.426 li
505.758 286.024 li
505.838 278.182 li
505.892 281.917 li
505.972 289.656 li
506.026 285.896 li
506.106 279.145 li
506.151 282.636 li
506.24 291.329 li
506.294 287.025 li
506.365 280.421 li
506.419 284.004 li
506.499 291.202 li
506.544 288.016 li
506.633 279.005 li
506.686 282.971 li
506.758 289.754 li
506.811 286.383 li
506.892 278.66 li
506.945 282.482 li
507.026 290.318 li
507.079 286.411 li
507.16 278.898 li
507.213 282.861 li
507.285 289.409 li
507.338 285.703 li
507.419 277.311 li
507.472 280.742 li
507.552 288.378 li
507.606 284.628 li
507.686 277.676 li
507.731 281.034 li
507.82 289.701 li
507.874 285.414 li
507.945 278.667 li
507.999 282.162 li
508.079 289.573 li
508.133 285.507 li
508.213 277.942 li
508.267 282.131 li
508.347 289.526 li
508.401 285.423 li
508.472 279.117 li
508.526 283.047 li
508.606 291.147 li
508.66 287.405 li
508.74 279.861 li
508.793 283.749 li
508.865 290.411 li
508.918 286.845 li
509.008 278.432 li
509.052 281.82 li
509.133 289.489 li
509.186 285.734 li
509.267 278.402 li
509.32 282.513 li
509.401 289.491 li
509.445 286.006 li
509.534 277.211 li
509.588 281.216 li
509.659 286.94 li
509.704 283.725 li
509.793 274.267 li
509.847 277.967 li
509.927 284.849 li
509.972 281.553 li
510.061 273.39 li
510.106 276.745 li
510.186 284.188 li
510.24 280.078 li
510.32 271.852 li
510.374 275.353 li
510.445 281.864 li
510.499 278.351 li
510.588 269.958 li
510.633 273.397 li
510.713 281.5 li
510.767 278.111 li
510.847 271.116 li
510.892 274.299 li
510.981 283.099 li
511.034 278.96 li
511.115 272.077 li
511.159 275.516 li
511.24 283.53 li
511.293 280.1 li
511.374 273.176 li
511.418 276.567 li
511.508 286.266 li
511.561 282.874 li
511.633 276.988 li
511.686 281.078 li
511.775 289.863 li
511.82 286.605 li
511.9 279.444 li
511.954 283.633 li
512.034 291.408 li
512.088 287.575 li
512.159 281.218 li
512.213 285.141 li
512.302 294.106 li
512.356 289.999 li
512.427 284.182 li
512.472 287.277 li
512.561 295.951 li
512.615 291.669 li
512.695 284.221 li
512.749 288.358 li
512.82 294.763 li
512.874 290.957 li
512.954 283.094 li
513.008 286.92 li
513.088 294.269 li
513.141 290.018 li
513.222 282.539 li
513.275 286.511 li
513.347 292.487 li
513.391 289.344 li
513.49 279.033 li
513.543 283.06 li
513.606 288.289 li
513.659 284.689 li
513.749 275.527 li
513.802 279.494 li
513.873 285.838 li
513.927 281.907 li
514.016 273.358 li
514.061 276.522 li
514.132 282.826 li
514.186 279.076 li
514.275 269.292 li
514.329 272.836 li
514.4 278.832 li
514.454 274.862 li
514.534 266.618 li
514.588 270.214 li
514.668 277.509 li
514.722 273.279 li
514.802 265.653 li
514.856 269.561 li
514.927 275.772 li
514.981 271.736 li
515.07 263.053 li
515.115 266.327 li
515.195 273.377 li
515.248 269.2 li
515.329 261.935 li
515.373 265.139 li
515.454 273.281 li
515.507 269.817 li
515.588 261.663 li
515.641 264.985 li
515.722 271.765 li
515.766 268.38 li
515.856 259.012 li
515.909 262.775 li
515.981 269.248 li
516.034 265.625 li
516.114 257.534 li
516.168 261.075 li
516.248 268.375 li
516.302 264.083 li
516.382 255.989 li
516.436 259.534 li
516.507 265.471 li
516.561 261.289 li
516.65 252.132 li
516.704 256.223 li
516.775 262.013 li
516.82 258.868 li
516.909 249.944 li
516.963 253.884 li
517.034 260.488 li
517.088 256.75 li
517.177 247.893 li
517.23 251.899 li
517.302 257.387 li
517.346 253.972 li
517.436 244.445 li
517.489 248.168 li
517.57 254.876 li
517.614 251.495 li
517.695 243.533 li
517.748 247.11 li
517.829 254.718 li
517.882 250.681 li
517.963 242.79 li
518.016 246.516 li
518.088 253.019 li
518.141 249.391 li
518.221 241 li
518.275 244.424 li
518.355 252.244 li
518.4 249.637 li
.930816 .793027 0 0 cmyk
@
grestore
1 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
72 43.2 mo
518.4 43.2 li
1 /0 /CSD get_res sepcs
1 sep
@
518.4 388.8 mo
518.4 43.2 li
@
72 388.8 mo
518.4 388.8 li
@
72 388.8 mo
72 43.2 li
@
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
.5 lw
0 lc
1 lj
[1 3 ] 0 dsh
72 388.8 mo
72 43.2 li
@
grestore
72 388.8 mo
72 384.8 li
f
.5 lw
0 lc
1 lj
72 388.8 mo
72 384.8 li
@
72 43.2 mo
72 47.2 li
f
72 43.2 mo
72 47.2 li
@
72.7926 393.957 mo
72.1806 393.957 71.7246 394.257 71.4126 394.857 cv
71.1006 395.457 70.9566 396.357 70.9566 397.557 cv
70.9566 398.757 71.1006 399.657 71.4126 400.257 cv
71.7246 400.857 72.1806 401.157 72.7926 401.157 cv
73.4046 401.157 73.8606 400.857 74.1726 400.257 cv
74.4726 399.657 74.6286 398.757 74.6286 397.557 cv
74.6286 396.357 74.4726 395.457 74.1726 394.857 cv
73.8606 394.257 73.4046 393.957 72.7926 393.957 cv
72.7926 393.021 mo
73.7646 393.021 74.5086 393.417 75.0366 394.185 cv
75.5526 394.965 75.8166 396.093 75.8166 397.557 cv
75.8166 399.033 75.5526 400.161 75.0366 400.929 cv
74.5086 401.697 73.7646 402.081 72.7926 402.081 cv
71.8086 402.081 71.0526 401.697 70.5366 400.929 cv
70.0206 400.161 69.7686 399.033 69.7686 397.557 cv
69.7686 396.093 70.0206 394.965 70.5366 394.185 cv
71.0526 393.417 71.8086 393.021 72.7926 393.021 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
161.28 388.8 mo
161.28 43.2 li
@
grestore
161.28 388.8 mo
161.28 384.8 li
f
161.28 388.8 mo
161.28 384.8 li
@
161.28 43.2 mo
161.28 47.2 li
f
161.28 43.2 mo
161.28 47.2 li
@
160.159 400.929 mo
162.091 400.929 li
162.091 394.257 li
159.991 394.677 li
159.991 393.597 li
162.079 393.177 li
163.267 393.177 li
163.267 400.929 li
165.199 400.929 li
165.199 401.925 li
160.159 401.925 li
160.159 400.929 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
250.56 388.8 mo
250.56 43.2 li
@
grestore
250.56 388.8 mo
250.56 384.8 li
f
250.56 388.8 mo
250.56 384.8 li
@
250.56 43.2 mo
250.56 47.2 li
f
250.56 43.2 mo
250.56 47.2 li
@
250.083 400.929 mo
254.211 400.929 li
254.211 401.925 li
248.655 401.925 li
248.655 400.929 li
249.099 400.473 249.711 399.849 250.491 399.057 cv
251.259 398.277 251.751 397.773 251.955 397.545 cv
252.339 397.125 252.603 396.765 252.747 396.465 cv
252.891 396.177 252.975 395.877 252.975 395.589 cv
252.975 395.133 252.807 394.749 252.483 394.461 cv
252.159 394.173 251.739 394.017 251.211 394.017 cv
250.839 394.017 250.443 394.089 250.035 394.209 cv
249.627 394.341 249.183 394.533 248.715 394.797 cv
248.715 393.597 li
249.195 393.405 249.639 393.261 250.047 393.165 cv
250.455 393.069 250.839 393.021 251.187 393.021 cv
252.087 393.021 252.807 393.249 253.347 393.705 cv
253.887 394.161 254.163 394.761 254.163 395.517 cv
254.163 395.877 254.091 396.225 253.959 396.537 cv
253.827 396.861 253.587 397.245 253.227 397.677 cv
253.131 397.797 252.819 398.121 252.291 398.661 cv
251.763 399.201 251.031 399.957 250.083 400.929 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
339.84 388.8 mo
339.84 43.2 li
@
grestore
339.84 388.8 mo
339.84 384.8 li
f
339.84 388.8 mo
339.84 384.8 li
@
339.84 43.2 mo
339.84 47.2 li
f
339.84 43.2 mo
339.84 47.2 li
@
341.837 397.209 mo
342.401 397.329 342.845 397.581 343.157 397.965 cv
343.469 398.349 343.637 398.829 343.637 399.381 cv
343.637 400.245 343.337 400.917 342.749 401.385 cv
342.149 401.853 341.309 402.081 340.217 402.081 cv
339.845 402.081 339.461 402.045 339.077 401.973 cv
338.693 401.913 338.285 401.805 337.877 401.661 cv
337.877 400.521 li
338.201 400.713 338.561 400.857 338.957 400.953 cv
339.341 401.049 339.749 401.097 340.181 401.097 cv
340.925 401.097 341.489 400.953 341.873 400.665 cv
342.257 400.377 342.461 399.945 342.461 399.381 cv
342.461 398.877 342.281 398.469 341.921 398.181 cv
341.561 397.893 341.057 397.737 340.409 397.737 cv
339.389 397.737 li
339.389 396.765 li
340.457 396.765 li
341.033 396.765 341.477 396.657 341.789 396.417 cv
342.101 396.189 342.257 395.853 342.257 395.409 cv
342.257 394.965 342.089 394.617 341.777 394.377 cv
341.453 394.137 340.997 394.017 340.409 394.017 cv
340.085 394.017 339.737 394.053 339.365 394.125 cv
338.993 394.197 338.585 394.305 338.141 394.449 cv
338.141 393.393 li
338.585 393.273 339.005 393.177 339.401 393.117 cv
339.785 393.057 340.157 393.021 340.517 393.021 cv
341.405 393.021 342.113 393.225 342.641 393.633 cv
343.169 394.041 343.433 394.593 343.433 395.289 cv
343.433 395.769 343.289 396.177 343.013 396.513 cv
342.737 396.849 342.341 397.089 341.837 397.209 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
429.12 388.8 mo
429.12 43.2 li
@
grestore
429.12 388.8 mo
429.12 384.8 li
f
429.12 388.8 mo
429.12 384.8 li
@
429.12 43.2 mo
429.12 47.2 li
f
429.12 43.2 mo
429.12 47.2 li
@
430.469 394.209 mo
427.48 398.877 li
430.469 398.877 li
430.469 394.209 li
430.156 393.177 mo
431.645 393.177 li
431.645 398.877 li
432.892 398.877 li
432.892 399.861 li
431.645 399.861 li
431.645 401.925 li
430.469 401.925 li
430.469 399.861 li
426.521 399.861 li
426.521 398.721 li
430.156 393.177 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
518.4 388.8 mo
518.4 43.2 li
@
grestore
518.4 388.8 mo
518.4 384.8 li
f
518.4 388.8 mo
518.4 384.8 li
@
518.4 43.2 mo
518.4 47.2 li
f
518.4 43.2 mo
518.4 47.2 li
@
516.86 393.177 mo
521.504 393.177 li
521.504 394.173 li
517.94 394.173 li
517.94 396.321 li
518.108 396.261 518.288 396.213 518.456 396.189 cv
518.624 396.165 518.804 396.141 518.972 396.141 cv
519.944 396.141 520.712 396.417 521.288 396.945 cv
521.864 397.485 522.152 398.205 522.152 399.117 cv
522.152 400.065 521.852 400.797 521.264 401.313 cv
520.676 401.829 519.848 402.081 518.792 402.081 cv
518.42 402.081 518.048 402.045 517.664 401.997 cv
517.28 401.937 516.896 401.853 516.488 401.721 cv
516.488 400.533 li
516.836 400.725 517.196 400.869 517.58 400.965 cv
517.952 401.061 518.348 401.097 518.768 401.097 cv
519.44 401.097 519.98 400.929 520.376 400.569 cv
520.76 400.209 520.964 399.729 520.964 399.117 cv
520.964 398.517 520.76 398.037 520.376 397.677 cv
519.98 397.317 519.44 397.137 518.768 397.137 cv
518.456 397.137 518.132 397.173 517.82 397.245 cv
517.508 397.317 517.184 397.425 516.86 397.569 cv
516.86 393.177 li
f
255.324 410.048 mo
267.644 410.048 li
267.644 411.708 li
262.464 411.708 li
262.464 424.628 li
260.484 424.628 li
260.484 411.708 li
255.324 411.708 li
255.324 410.048 li
f
269.464 413.688 mo
271.264 413.688 li
271.264 424.628 li
269.464 424.628 li
269.464 413.688 li
269.464 409.428 mo
271.264 409.428 li
271.264 411.708 li
269.464 411.708 li
269.464 409.428 li
f
283.544 415.788 mo
283.984 414.988 284.524 414.408 285.144 414.008 cv
285.764 413.628 286.504 413.428 287.364 413.428 cv
288.484 413.428 289.364 413.828 289.984 414.628 cv
290.604 415.428 290.924 416.568 290.924 418.028 cv
290.924 424.628 li
289.124 424.628 li
289.124 418.088 li
289.124 417.048 288.924 416.268 288.564 415.748 cv
288.184 415.248 287.624 414.988 286.864 414.988 cv
285.924 414.988 285.184 415.308 284.644 415.928 cv
284.104 416.548 283.844 417.388 283.844 418.448 cv
283.844 424.628 li
282.044 424.628 li
282.044 418.088 li
282.044 417.048 281.844 416.268 281.484 415.748 cv
281.104 415.248 280.524 414.988 279.764 414.988 cv
278.844 414.988 278.104 415.308 277.564 415.928 cv
277.024 416.548 276.764 417.388 276.764 418.448 cv
276.764 424.628 li
274.964 424.628 li
274.964 413.688 li
276.764 413.688 li
276.764 415.388 li
277.164 414.728 277.664 414.228 278.244 413.908 cv
278.804 413.588 279.484 413.428 280.284 413.428 cv
281.084 413.428 281.744 413.628 282.304 414.028 cv
282.864 414.428 283.264 415.028 283.544 415.788 cv
f
303.864 418.708 mo
303.864 419.588 li
295.604 419.588 li
295.684 420.828 296.044 421.788 296.724 422.428 cv
297.384 423.068 298.304 423.388 299.504 423.388 cv
300.184 423.388 300.864 423.308 301.504 423.148 cv
302.144 422.988 302.804 422.728 303.444 422.368 cv
303.444 424.068 li
302.804 424.348 302.144 424.568 301.464 424.688 cv
300.784 424.808 300.084 424.888 299.404 424.888 cv
297.644 424.888 296.264 424.388 295.244 423.388 cv
294.224 422.388 293.724 421.008 293.724 419.268 cv
293.724 417.488 294.204 416.068 295.164 415.008 cv
296.124 413.968 297.444 413.428 299.084 413.428 cv
300.564 413.428 301.724 413.908 302.584 414.848 cv
303.424 415.808 303.864 417.088 303.864 418.708 cv
302.064 418.188 mo
302.044 417.208 301.764 416.428 301.244 415.828 cv
300.704 415.248 299.984 414.948 299.104 414.948 cv
298.104 414.948 297.304 415.248 296.704 415.808 cv
296.104 416.368 295.744 417.168 295.664 418.188 cv
302.064 418.188 li
f
317.484 409.448 mo
316.604 410.968 315.964 412.448 315.544 413.908 cv
315.104 415.368 314.904 416.848 314.904 418.348 cv
314.904 419.868 315.104 421.348 315.544 422.808 cv
315.964 424.288 316.604 425.748 317.484 427.248 cv
315.924 427.248 li
314.944 425.708 314.204 424.228 313.724 422.748 cv
313.244 421.268 313.004 419.808 313.004 418.348 cv
313.004 416.908 313.244 415.448 313.724 413.968 cv
314.204 412.488 314.924 410.988 315.924 409.448 cv
317.484 409.448 li
f
327.944 414.008 mo
327.944 415.708 li
327.424 415.468 326.904 415.268 326.364 415.128 cv
325.804 415.008 325.244 414.928 324.664 414.928 cv
323.764 414.928 323.084 415.068 322.644 415.348 cv
322.204 415.628 321.984 416.028 321.984 416.568 cv
321.984 416.988 322.144 417.308 322.464 417.548 cv
322.784 417.788 323.424 418.028 324.384 418.228 cv
325.004 418.368 li
326.284 418.648 327.184 419.048 327.724 419.528 cv
328.244 420.028 328.524 420.728 328.524 421.608 cv
328.524 422.628 328.124 423.428 327.324 424.008 cv
326.524 424.608 325.404 424.888 324.004 424.888 cv
323.404 424.888 322.804 424.828 322.164 424.728 cv
321.524 424.628 320.864 424.468 320.164 424.228 cv
320.164 422.368 li
320.824 422.728 321.484 422.988 322.124 423.148 cv
322.764 423.328 323.404 423.408 324.044 423.408 cv
324.884 423.408 325.544 423.268 326.004 422.988 cv
326.444 422.708 326.684 422.288 326.684 421.748 cv
326.684 421.268 326.504 420.888 326.184 420.628 cv
325.864 420.368 325.144 420.108 324.024 419.868 cv
323.404 419.728 li
322.284 419.488 321.464 419.128 320.984 418.648 cv
320.484 418.168 320.244 417.508 320.244 416.648 cv
320.244 415.628 320.604 414.828 321.324 414.268 cv
322.044 413.708 323.084 413.428 324.444 413.428 cv
325.104 413.428 325.724 413.488 326.324 413.588 cv
326.904 413.688 327.444 413.828 327.944 414.008 cv
f
331.104 409.448 mo
332.664 409.448 li
333.624 410.988 334.364 412.488 334.844 413.968 cv
335.324 415.448 335.584 416.908 335.584 418.348 cv
335.584 419.808 335.324 421.268 334.844 422.748 cv
334.364 424.228 333.624 425.708 332.664 427.248 cv
331.104 427.248 li
331.964 425.748 332.604 424.288 333.044 422.808 cv
333.464 421.348 333.684 419.868 333.684 418.348 cv
333.684 416.848 333.464 415.368 333.044 413.908 cv
332.604 412.448 331.964 410.968 331.104 409.448 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 388.8 mo
518.4 388.8 li
@
grestore
72 388.8 mo
76 388.8 li
f
72 388.8 mo
76 388.8 li
@
518.4 388.8 mo
514.4 388.8 li
f
518.4 388.8 mo
514.4 388.8 li
@
66.8251 384.396 mo
63.8371 389.064 li
66.8251 389.064 li
66.8251 384.396 li
66.5131 383.365 mo
68.0011 383.365 li
68.0011 389.064 li
69.2491 389.064 li
69.2491 390.048 li
68.0011 390.048 li
68.0011 392.112 li
66.8251 392.112 li
66.8251 390.048 li
62.8771 390.048 li
62.8771 388.908 li
66.5131 383.365 li
f
53.5064 387.852 mo
61.0184 387.852 li
61.0184 388.848 li
53.5064 388.848 li
53.5064 387.852 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 345.6 mo
518.4 345.6 li
@
grestore
72 345.6 mo
76 345.6 li
f
72 345.6 mo
76 345.6 li
@
518.4 345.6 mo
514.4 345.6 li
f
518.4 345.6 mo
514.4 345.6 li
@
67.4579 344.197 mo
68.0219 344.316 68.4659 344.569 68.7779 344.953 cv
69.0899 345.337 69.2579 345.816 69.2579 346.368 cv
69.2579 347.233 68.9579 347.905 68.3699 348.372 cv
67.7699 348.841 66.9299 349.069 65.8379 349.069 cv
65.4659 349.069 65.0819 349.033 64.6979 348.961 cv
64.3139 348.901 63.9059 348.793 63.4979 348.648 cv
63.4979 347.509 li
63.8219 347.701 64.1819 347.845 64.5779 347.941 cv
64.9619 348.036 65.3699 348.085 65.8019 348.085 cv
66.5459 348.085 67.1099 347.941 67.4939 347.652 cv
67.8779 347.365 68.0819 346.932 68.0819 346.368 cv
68.0819 345.865 67.9019 345.457 67.5419 345.169 cv
67.1819 344.88 66.6779 344.725 66.0299 344.725 cv
65.0099 344.725 li
65.0099 343.753 li
66.0779 343.753 li
66.6539 343.753 67.0979 343.645 67.4099 343.405 cv
67.7219 343.177 67.8779 342.841 67.8779 342.397 cv
67.8779 341.953 67.7099 341.604 67.3979 341.365 cv
67.0739 341.125 66.6179 341.005 66.0299 341.005 cv
65.7059 341.005 65.3579 341.04 64.9859 341.113 cv
64.6139 341.185 64.2059 341.293 63.7619 341.436 cv
63.7619 340.38 li
64.2059 340.26 64.6259 340.165 65.0219 340.104 cv
65.4059 340.044 65.7779 340.009 66.1379 340.009 cv
67.0259 340.009 67.7339 340.212 68.2619 340.621 cv
68.7899 341.029 69.0539 341.581 69.0539 342.277 cv
69.0539 342.757 68.9099 343.165 68.6339 343.501 cv
68.3579 343.837 67.9619 344.077 67.4579 344.197 cv
f
53.8032 344.652 mo
61.3153 344.652 li
61.3153 345.648 li
53.8032 345.648 li
53.8032 344.652 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 302.4 mo
518.4 302.4 li
@
grestore
72 302.4 mo
76 302.4 li
f
72 302.4 mo
76 302.4 li
@
518.4 302.4 mo
514.4 302.4 li
f
518.4 302.4 mo
514.4 302.4 li
@
65.1243 304.716 mo
69.2523 304.716 li
69.2523 305.712 li
63.6963 305.712 li
63.6963 304.716 li
64.1403 304.26 64.7523 303.637 65.5323 302.844 cv
66.3003 302.064 66.7923 301.56 66.9963 301.332 cv
67.3803 300.913 67.6443 300.552 67.7883 300.253 cv
67.9323 299.965 68.0163 299.664 68.0163 299.376 cv
68.0163 298.921 67.8483 298.536 67.5243 298.249 cv
67.2003 297.96 66.7803 297.805 66.2523 297.805 cv
65.8803 297.805 65.4843 297.876 65.0763 297.996 cv
64.6683 298.128 64.2243 298.32 63.7563 298.585 cv
63.7563 297.384 li
64.2363 297.193 64.6803 297.048 65.0883 296.952 cv
65.4963 296.857 65.8803 296.809 66.2283 296.809 cv
67.1283 296.809 67.8483 297.036 68.3883 297.492 cv
68.9283 297.948 69.2043 298.548 69.2043 299.305 cv
69.2043 299.664 69.1323 300.012 69.0003 300.324 cv
68.8683 300.648 68.6283 301.033 68.2683 301.465 cv
68.1723 301.585 67.8603 301.909 67.3323 302.448 cv
66.8043 302.988 66.0723 303.745 65.1243 304.716 cv
f
54.0376 301.452 mo
61.5496 301.452 li
61.5496 302.448 li
54.0376 302.448 li
54.0376 301.452 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 259.2 mo
518.4 259.2 li
@
grestore
72 259.2 mo
76 259.2 li
f
72 259.2 mo
76 259.2 li
@
518.4 259.2 mo
514.4 259.2 li
f
518.4 259.2 mo
514.4 259.2 li
@
64.2146 261.517 mo
66.1466 261.517 li
66.1466 254.845 li
64.0466 255.265 li
64.0466 254.185 li
66.1346 253.765 li
67.3226 253.765 li
67.3226 261.517 li
69.2546 261.517 li
69.2546 262.513 li
64.2146 262.513 li
64.2146 261.517 li
f
53.9439 258.253 mo
61.4559 258.253 li
61.4559 259.249 li
53.9439 259.249 li
53.9439 258.253 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 216 mo
518.4 216 li
@
grestore
72 216 mo
76 216 li
f
72 216 mo
76 216 li
@
518.4 216 mo
514.4 216 li
f
518.4 216 mo
514.4 216 li
@
65.7691 211.344 mo
65.1571 211.344 64.7011 211.645 64.3891 212.245 cv
64.0771 212.844 63.9331 213.745 63.9331 214.945 cv
63.9331 216.145 64.0771 217.044 64.3891 217.645 cv
64.7011 218.245 65.1571 218.544 65.7691 218.544 cv
66.3811 218.544 66.8371 218.245 67.1491 217.645 cv
67.4491 217.044 67.6051 216.145 67.6051 214.945 cv
67.6051 213.745 67.4491 212.844 67.1491 212.245 cv
66.8371 211.645 66.3811 211.344 65.7691 211.344 cv
65.7691 210.408 mo
66.7411 210.408 67.4851 210.805 68.0131 211.572 cv
68.5291 212.352 68.7931 213.48 68.7931 214.945 cv
68.7931 216.421 68.5291 217.548 68.0131 218.316 cv
67.4851 219.085 66.7411 219.469 65.7691 219.469 cv
64.7851 219.469 64.0291 219.085 63.5131 218.316 cv
62.9971 217.548 62.7451 216.421 62.7451 214.945 cv
62.7451 213.48 62.9971 212.352 63.5131 211.572 cv
64.0291 210.805 64.7851 210.408 65.7691 210.408 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 172.8 mo
518.4 172.8 li
@
grestore
72 172.8 mo
76 172.8 li
f
72 172.8 mo
76 172.8 li
@
518.4 172.8 mo
514.4 172.8 li
f
518.4 172.8 mo
514.4 172.8 li
@
64.2692 175.117 mo
66.2012 175.117 li
66.2012 168.445 li
64.1012 168.865 li
64.1012 167.785 li
66.1892 167.365 li
67.3773 167.365 li
67.3773 175.117 li
69.3092 175.117 li
69.3092 176.113 li
64.2692 176.113 li
64.2692 175.117 li
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 129.6 mo
518.4 129.6 li
@
grestore
72 129.6 mo
76 129.6 li
f
72 129.6 mo
76 129.6 li
@
518.4 129.6 mo
514.4 129.6 li
f
518.4 129.6 mo
514.4 129.6 li
@
64.7415 131.917 mo
68.8695 131.917 li
68.8695 132.913 li
63.3135 132.913 li
63.3135 131.917 li
63.7575 131.461 64.3695 130.837 65.1495 130.045 cv
65.9175 129.265 66.4095 128.761 66.6135 128.533 cv
66.9975 128.113 67.2615 127.753 67.4055 127.453 cv
67.5495 127.165 67.6335 126.865 67.6335 126.577 cv
67.6335 126.121 67.4655 125.737 67.1415 125.449 cv
66.8175 125.161 66.3975 125.005 65.8695 125.005 cv
65.4975 125.005 65.1015 125.077 64.6935 125.197 cv
64.2855 125.329 63.8415 125.521 63.3735 125.785 cv
63.3735 124.585 li
63.8535 124.393 64.2975 124.249 64.7055 124.153 cv
65.1135 124.057 65.4975 124.009 65.8455 124.009 cv
66.7455 124.009 67.4655 124.237 68.0055 124.693 cv
68.5455 125.149 68.8215 125.749 68.8215 126.505 cv
68.8215 126.865 68.7495 127.213 68.6175 127.525 cv
68.4855 127.849 68.2455 128.233 67.8855 128.665 cv
67.7895 128.785 67.4775 129.109 66.9495 129.648 cv
66.4215 130.189 65.6895 130.945 64.7415 131.917 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 86.4 mo
518.4 86.4 li
@
grestore
72 86.4 mo
76 86.4 li
f
72 86.4 mo
76 86.4 li
@
518.4 86.4 mo
514.4 86.4 li
f
518.4 86.4 mo
514.4 86.4 li
@
67.122 84.9965 mo
67.686 85.1165 68.13 85.3685 68.442 85.7525 cv
68.754 86.1365 68.922 86.6165 68.922 87.1685 cv
68.922 88.0325 68.622 88.7045 68.034 89.1725 cv
67.434 89.6405 66.594 89.8685 65.502 89.8685 cv
65.13 89.8685 64.746 89.8325 64.362 89.7605 cv
63.978 89.7005 63.57 89.5925 63.162 89.4485 cv
63.162 88.3085 li
63.486 88.5005 63.846 88.6445 64.242 88.7405 cv
64.626 88.8365 65.034 88.8845 65.466 88.8845 cv
66.21 88.8845 66.774 88.7405 67.158 88.4525 cv
67.542 88.1645 67.746 87.7325 67.746 87.1685 cv
67.746 86.6645 67.566 86.2565 67.206 85.9685 cv
66.846 85.6805 66.342 85.5245 65.694 85.5245 cv
64.674 85.5245 li
64.674 84.5525 li
65.742 84.5525 li
66.318 84.5525 66.762 84.4445 67.074 84.2045 cv
67.386 83.9765 67.542 83.6405 67.542 83.1965 cv
67.542 82.7525 67.374 82.4045 67.062 82.1645 cv
66.738 81.9245 66.282 81.8045 65.694 81.8045 cv
65.37 81.8045 65.022 81.8405 64.65 81.9125 cv
64.278 81.9845 63.87 82.0925 63.426 82.2365 cv
63.426 81.1805 li
63.87 81.0605 64.29 80.9645 64.686 80.9045 cv
65.07 80.8445 65.442 80.8085 65.802 80.8085 cv
66.69 80.8085 67.398 81.0125 67.926 81.4205 cv
68.454 81.8285 68.718 82.3805 68.718 83.0765 cv
68.718 83.5565 68.574 83.9645 68.298 84.3005 cv
68.022 84.6365 67.626 84.8765 67.122 84.9965 cv
f
gsave
72 388.8 mo
518.4 388.8 li
518.4 43.2 li
72 43.2 li
cp
clp
[1 3 ] 0 dsh
72 43.2 mo
518.4 43.2 li
@
grestore
72 43.2 mo
76 43.2 li
f
72 43.2 mo
76 43.2 li
@
518.4 43.2 mo
514.4 43.2 li
f
518.4 43.2 mo
514.4 43.2 li
@
66.161 38.7965 mo
63.173 43.4645 li
66.161 43.4645 li
66.161 38.7965 li
65.849 37.7645 mo
67.337 37.7645 li
67.337 43.4645 li
68.585 43.4645 li
68.585 44.4485 li
67.337 44.4485 li
67.337 46.5125 li
66.161 46.5125 li
66.161 44.4485 li
62.213 44.4485 li
62.213 43.3085 li
65.849 37.7645 li
f
41.0672 260.6 mo
41.0672 260.74 40.9872 260.8 40.8072 260.8 cv
40.5272 260.76 40.3672 260.66 40.3672 260.54 cv
40.3672 260.02 40.2672 259.56 40.0472 259.16 cv
39.8472 258.76 39.5072 258.42 39.0472 258.12 cv
39.0072 258.08 li
26.9672 250.94 li
26.8272 250.84 26.7472 250.72 26.7472 250.56 cv
26.7472 250.3 li
26.7872 250.18 li
26.8672 250.08 li
26.9672 250.04 li
39.8872 248.82 li
39.9472 248.82 40.0272 248.8 40.1472 248.74 cv
40.3072 248.62 40.3672 248.12 40.3672 247.24 cv
40.3672 247.12 40.4672 247.04 40.6272 247.04 cv
40.8072 247.08 40.9272 247.12 40.9872 247.16 cv
41.0472 247.2 41.0672 247.26 41.0672 247.38 cv
41.0672 252.38 li
41.0672 252.5 40.9872 252.56 40.8072 252.56 cv
40.5272 252.5 40.3672 252.42 40.3672 252.3 cv
40.3672 251.26 40.1872 250.7 39.8272 250.62 cv
36.5272 250.92 li
36.5272 255.86 li
39.2072 257.46 li
39.3672 257.56 39.5272 257.6 39.7072 257.6 cv
39.9472 257.6 40.1272 257.5 40.2272 257.26 cv
40.3272 257.04 40.3672 256.8 40.3672 256.52 cv
40.3672 256.4 40.4672 256.32 40.6272 256.32 cv
40.8272 256.38 40.9472 256.42 40.9872 256.44 cv
41.0472 256.48 41.0672 256.54 41.0672 256.66 cv
41.0672 260.6 li
35.8272 255.46 mo
35.8272 251 li
29.3472 251.6 li
35.8272 255.46 li
f
46.3091 245.814 mo
46.1831 245.926 li
46.0991 245.898 li
45.6791 245.646 45.2591 245.352 44.8671 244.988 cv
44.4751 244.638 44.0691 244.232 43.6631 243.784 cv
43.2711 243.336 42.8651 242.888 42.4591 242.44 cv
42.0531 241.992 41.6891 241.614 41.3671 241.334 cv
41.3671 241.39 li
41.3671 241.6 41.3111 241.908 41.1711 242.3 cv
41.0451 242.692 40.9751 243 40.9751 243.224 cv
40.9751 243.476 41.0311 243.714 41.1431 243.938 cv
41.2551 244.176 41.4091 244.33 41.6331 244.386 cv
41.7311 244.498 li
41.7311 244.666 li
41.7311 244.75 41.6891 244.778 41.5911 244.778 cv
41.5491 244.778 li
41.2831 244.708 41.0311 244.582 40.7931 244.414 cv
40.5551 244.246 40.3591 244.05 40.2051 243.798 cv
40.0651 243.56 39.9811 243.308 39.9811 243.042 cv
39.9811 242.86 40.0231 242.706 40.1071 242.58 cv
40.1911 242.468 40.3311 242.314 40.4991 242.146 cv
40.6811 241.978 40.8071 241.852 40.8911 241.74 cv
40.9751 241.642 41.0031 241.516 41.0031 241.362 cv
41.0031 241.166 40.9191 240.984 40.7231 240.816 cv
40.5411 240.648 40.3031 240.494 40.0231 240.326 cv
39.9811 240.228 li
39.9811 240.06 li
40.0231 239.99 li
40.1071 239.948 li
40.1911 239.976 li
40.6391 240.228 41.0451 240.522 41.4091 240.858 cv
41.7871 241.194 42.2211 241.642 42.6971 242.174 cv
43.1871 242.72 43.5931 243.182 43.9291 243.546 cv
44.2651 243.91 44.6151 244.26 44.9651 244.582 cv
44.9511 244.512 44.9371 244.414 44.9371 244.288 cv
44.9371 244.064 45.0071 243.742 45.1331 243.35 cv
45.2731 242.958 45.3291 242.664 45.3291 242.44 cv
45.3291 242.216 45.2871 241.978 45.1751 241.74 cv
45.0771 241.502 44.9371 241.292 44.7551 241.124 cv
44.5731 240.956 44.3631 240.83 44.1251 240.774 cv
44.0271 240.662 li
44.0271 240.494 li
44.0831 240.41 li
44.1671 240.368 li
44.2091 240.382 li
44.5731 240.466 44.9091 240.62 45.2311 240.83 cv
45.5531 241.054 45.8191 241.32 46.0151 241.628 cv
46.2111 241.936 46.3091 242.272 46.3091 242.622 cv
46.3091 242.804 46.2671 242.958 46.1971 243.084 cv
46.1271 243.21 46.0011 243.35 45.8191 243.518 cv
45.6371 243.686 45.5111 243.812 45.4271 243.924 cv
45.3431 244.036 45.3011 244.162 45.3011 244.302 cv
45.3011 244.778 45.6231 245.184 46.2671 245.548 cv
46.3091 245.646 li
46.3091 245.814 li
f
46.0072 231.003 mo
45.4072 231.763 44.7472 232.403 43.9872 232.923 cv
43.2272 233.463 42.4072 233.903 41.5672 234.243 cv
40.7272 234.583 39.8272 234.843 38.8872 235.003 cv
37.9672 235.183 37.0272 235.263 36.0672 235.263 cv
35.1072 235.263 34.1672 235.183 33.2272 235.003 cv
32.3072 234.843 31.4072 234.583 30.5272 234.223 cv
29.6672 233.883 28.8472 233.443 28.0872 232.903 cv
27.3272 232.363 26.6672 231.723 26.1072 231.003 cv
26.0672 230.903 li
26.0672 230.723 li
26.1272 230.623 li
26.2472 230.563 li
26.3672 230.603 li
27.0072 231.263 27.7072 231.803 28.4272 232.243 cv
29.1472 232.683 29.9272 233.023 30.7472 233.283 cv
31.5872 233.543 32.4272 233.723 33.3072 233.843 cv
34.1872 233.963 35.1072 234.023 36.0672 234.023 cv
40.3072 234.023 43.5072 232.903 45.7072 230.623 cv
45.8672 230.563 li
45.9872 230.623 li
46.0472 230.723 li
46.0472 230.903 li
46.0072 231.003 li
f
40.7272 227.899 mo
40.5472 227.879 li
34.5872 226.379 li
34.2272 226.299 33.8872 226.239 33.6072 226.239 cv
33.0472 226.239 32.7472 226.439 32.7472 226.819 cv
32.7472 227.239 33.0072 227.559 33.5072 227.759 cv
34.0072 227.959 34.6272 228.159 35.3872 228.339 cv
35.4872 228.399 li
35.5072 228.499 li
35.5072 228.739 li
35.4472 228.859 li
35.3072 228.899 li
34.7272 228.759 34.2272 228.619 33.8272 228.479 cv
33.4272 228.359 33.0672 228.139 32.7272 227.859 cv
32.4072 227.579 32.2272 227.239 32.2272 226.799 cv
32.2272 226.319 32.3872 225.879 32.7072 225.479 cv
33.0272 225.099 33.4272 224.899 33.9072 224.899 cv
33.3872 224.499 32.9872 224.039 32.6872 223.499 cv
32.3872 222.979 32.2272 222.399 32.2272 221.799 cv
32.2272 221.179 32.3872 220.639 32.7072 220.179 cv
33.0272 219.719 33.4872 219.479 34.0872 219.479 cv
33.5072 219.079 33.0472 218.599 32.7272 218.039 cv
32.4072 217.499 32.2272 216.899 32.2272 216.239 cv
32.2272 215.559 32.4272 214.999 32.7872 214.579 cv
33.1672 214.159 33.7072 213.939 34.3872 213.939 cv
34.9472 213.939 35.6072 214.079 36.3672 214.319 cv
37.1472 214.559 38.0072 214.859 38.9672 215.219 cv
39.4472 215.419 39.8472 215.499 40.1672 215.499 cv
40.5672 215.499 40.7672 215.359 40.7672 215.039 cv
40.7672 214.519 40.4872 214.099 39.9272 213.739 cv
39.3672 213.399 38.7672 213.159 38.1272 212.999 cv
38.0072 212.839 li
38.0072 212.599 li
38.0672 212.479 li
38.1872 212.419 li
38.2472 212.439 li
39.0072 212.639 39.7072 212.959 40.3272 213.399 cv
40.9672 213.839 41.2672 214.399 41.2672 215.079 cv
41.2672 215.559 41.1072 215.959 40.8072 216.279 cv
40.4872 216.619 40.1072 216.779 39.6272 216.779 cv
39.4072 216.779 39.1472 216.739 38.8472 216.619 cv
37.8472 216.259 36.9672 215.939 36.1672 215.679 cv
35.3872 215.439 34.6872 215.299 34.0872 215.299 cv
33.7272 215.299 33.4072 215.379 33.1472 215.519 cv
32.8872 215.679 32.7472 215.919 32.7472 216.279 cv
32.7472 216.999 32.9872 217.639 33.4272 218.179 cv
33.8672 218.719 34.4672 219.179 35.1872 219.559 cv
35.3272 219.599 35.4272 219.619 35.4872 219.619 cv
40.6272 220.899 li
40.8272 220.959 40.9672 221.059 41.0872 221.219 cv
41.2072 221.379 41.2672 221.559 41.2672 221.739 cv
41.2672 221.899 41.2072 222.039 41.1272 222.159 cv
41.0472 222.279 40.9072 222.339 40.7272 222.339 cv
40.5472 222.319 li
35.4472 221.039 li
34.9072 220.919 34.4472 220.839 34.0872 220.839 cv
33.7272 220.839 33.4072 220.919 33.1472 221.079 cv
32.8872 221.239 32.7472 221.479 32.7472 221.839 cv
32.7472 222.339 32.8672 222.799 33.0672 223.199 cv
33.2872 223.599 33.5672 223.959 33.9272 224.259 cv
34.2872 224.579 34.7072 224.859 35.1872 225.099 cv
40.6272 226.459 li
40.8272 226.499 40.9672 226.599 41.0872 226.759 cv
41.2072 226.919 41.2672 227.099 41.2672 227.299 cv
41.2672 227.459 41.2072 227.599 41.1272 227.719 cv
41.0472 227.839 40.9072 227.899 40.7272 227.899 cv
f
45.6472 210.761 mo
45.5672 210.741 li
26.3072 203.781 li
26.1272 203.641 li
26.0672 203.421 li
26.0672 203.301 26.1072 203.221 26.1872 203.141 cv
26.2672 203.061 26.3472 203.021 26.4672 203.021 cv
26.5472 203.021 li
45.8072 209.981 li
45.9672 210.061 46.0472 210.201 46.0472 210.361 cv
46.0472 210.481 46.0072 210.561 45.9272 210.641 cv
45.8472 210.721 45.7472 210.761 45.6472 210.761 cv
f
39.8472 200.141 mo
40.4672 199.781 40.7672 199.061 40.7672 197.981 cv
40.7672 197.521 40.6872 197.081 40.5272 196.661 cv
40.3672 196.241 40.1272 195.881 39.8072 195.601 cv
39.4872 195.321 39.1072 195.181 38.6472 195.181 cv
38.3072 195.181 38.0272 195.321 37.8072 195.561 cv
37.5872 195.801 37.4272 196.101 37.3472 196.461 cv
37.1272 197.541 li
37.0072 198.041 36.7872 198.441 36.4472 198.761 cv
36.1072 199.081 35.6872 199.241 35.2072 199.241 cv
34.6272 199.241 34.1072 199.081 33.6472 198.761 cv
33.1872 198.441 32.8272 198.021 32.5872 197.501 cv
32.3472 196.981 32.2272 196.421 32.2272 195.841 cv
32.2272 195.241 32.3872 194.701 32.6672 194.221 cv
32.9672 193.741 33.3872 193.501 33.9472 193.501 cv
34.2672 193.501 34.5272 193.601 34.7672 193.761 cv
35.0072 193.941 35.1072 194.181 35.1072 194.481 cv
35.1072 194.661 35.0672 194.821 34.9472 194.941 cv
34.8272 195.061 34.6872 195.121 34.5072 195.121 cv
34.3472 195.121 34.2072 195.081 34.0472 195.001 cv
33.9072 194.921 33.7872 194.801 33.7072 194.641 cv
33.6272 194.501 33.5672 194.341 33.5672 194.181 cv
33.2872 194.301 33.0872 194.521 32.9472 194.841 cv
32.8272 195.161 32.7472 195.521 32.7472 195.881 cv
32.7472 196.241 32.8272 196.581 32.9472 196.901 cv
33.0872 197.241 33.2872 197.521 33.5472 197.721 cv
33.8272 197.921 34.1272 198.021 34.4872 198.021 cv
34.7272 198.021 34.9472 197.941 35.1272 197.781 cv
35.3072 197.621 35.4272 197.401 35.5072 197.141 cv
35.7472 195.981 li
35.8272 195.621 35.9672 195.281 36.1672 194.961 cv
36.3672 194.661 36.6272 194.421 36.9272 194.241 cv
37.2272 194.061 37.5672 193.961 37.9472 193.961 cv
38.4472 193.961 38.9472 194.101 39.4272 194.381 cv
39.9072 194.661 40.2872 195.001 40.5672 195.401 cv
41.0472 196.121 41.2672 196.981 41.2672 198.001 cv
41.2672 198.721 41.1072 199.361 40.7872 199.961 cv
40.4672 200.561 39.9872 200.841 39.3472 200.841 cv
38.9872 200.841 38.6872 200.741 38.4072 200.541 cv
38.1272 200.341 37.9872 200.041 37.9872 199.661 cv
37.9872 199.461 38.0672 199.281 38.1872 199.121 cv
38.3272 198.981 38.5072 198.901 38.7072 198.901 cv
39.0272 198.901 39.2872 199.021 39.5072 199.241 cv
39.7472 199.481 39.8472 199.741 39.8472 200.041 cv
39.8472 200.141 li
f
32.5641 191.825 mo
32.1861 191.825 li
32.1161 191.797 li
29.7081 189.627 li
29.3581 189.305 29.0641 189.039 28.8121 188.829 cv
28.5741 188.633 28.2941 188.423 27.9861 188.227 cv
27.6781 188.031 27.3561 187.863 27.0201 187.751 cv
26.6981 187.639 26.3481 187.569 25.9841 187.569 cv
25.6061 187.569 25.2421 187.639 24.8921 187.779 cv
24.5421 187.919 24.2621 188.129 24.0521 188.409 cv
23.8421 188.689 23.7301 189.039 23.7301 189.431 cv
23.7301 189.837 23.8561 190.201 24.0941 190.523 cv
24.3461 190.859 24.6541 191.083 25.0461 191.209 cv
25.0321 191.055 li
25.0321 190.859 25.1021 190.677 25.2421 190.523 cv
25.3821 190.383 25.5641 190.299 25.7881 190.299 cv
26.0121 190.299 26.1941 190.383 26.3341 190.523 cv
26.4881 190.677 26.5581 190.859 26.5581 191.055 cv
26.5581 191.279 26.4881 191.461 26.3341 191.601 cv
26.1801 191.755 25.9981 191.825 25.7881 191.825 cv
25.4521 191.825 25.1161 191.769 24.8081 191.629 cv
24.5001 191.503 24.2341 191.321 23.9821 191.069 cv
23.7441 190.817 23.5621 190.537 23.4361 190.229 cv
23.3101 189.921 23.2401 189.585 23.2401 189.221 cv
23.2401 188.689 23.3521 188.199 23.5761 187.737 cv
23.8001 187.275 24.1221 186.911 24.5421 186.645 cv
24.9621 186.379 25.4381 186.239 25.9841 186.239 cv
26.3901 186.239 26.7681 186.337 27.1321 186.505 cv
27.4961 186.687 27.8321 186.911 28.1261 187.191 cv
28.4341 187.471 28.7701 187.821 29.1481 188.255 cv
29.5261 188.689 29.7781 188.969 29.9041 189.109 cv
31.4301 190.691 li
31.4301 189.347 li
31.4301 188.689 31.4301 188.143 31.4161 187.695 cv
31.4161 187.247 31.3881 187.009 31.3601 186.981 cv
31.2481 186.869 30.8141 186.757 30.0721 186.645 cv
30.0721 186.239 li
32.5641 186.631 li
32.5641 191.825 li
f
46.0472 177.824 mo
46.0472 177.944 45.9872 178.004 45.8672 178.004 cv
45.7472 177.964 li
43.5072 175.684 40.3072 174.544 36.0672 174.544 cv
31.8272 174.544 28.6072 175.684 26.4072 177.924 cv
26.2472 178.004 li
26.1272 177.944 li
26.0672 177.824 li
26.0672 177.644 li
26.1072 177.544 li
26.8672 176.584 27.7872 175.784 28.8672 175.144 cv
29.9472 174.504 31.1072 174.044 32.3272 173.744 cv
33.5472 173.464 34.7872 173.304 36.0672 173.304 cv
37.0272 173.304 37.9472 173.384 38.8672 173.544 cv
39.7872 173.704 40.6672 173.964 41.5472 174.304 cv
42.4272 174.664 43.2272 175.104 43.9872 175.624 cv
44.7472 176.164 45.4072 176.804 46.0072 177.544 cv
46.0472 177.644 li
46.0472 177.824 li
f
391.782 381.6 mo
511.2 381.6 li
511.2 335.786 li
391.782 335.786 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
1 lw
0 lj
391.782 381.6 mo
511.2 381.6 li
511.2 335.786 li
391.782 335.786 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
2 lc
1 lj
401.862 347.147 mo
422.022 347.147 li
0 1 1 0 cmyk
@
442.787 343.086 mo
440.857 348.313 li
444.716 348.313 li
442.787 343.086 li
441.98 341.689 mo
443.593 341.689 li
447.596 352.187 li
446.113 352.187 li
445.163 349.494 li
440.425 349.494 li
439.475 352.187 li
437.977 352.187 li
441.98 341.689 li
1 /0 /CSD get_res sepcs
1 sep
f
449.123 341.689 mo
451.038 341.689 li
455.689 350.473 li
455.689 341.689 li
457.072 341.689 li
457.072 352.187 li
455.156 352.187 li
450.505 343.403 li
450.505 352.187 li
449.123 352.187 li
449.123 341.689 li
f
466.187 342.035 mo
466.187 343.417 li
465.64 343.158 465.136 342.971 464.66 342.841 cv
464.171 342.726 463.71 342.654 463.278 342.654 cv
462.5 342.654 461.896 342.813 461.478 343.1 cv
461.06 343.403 460.859 343.835 460.859 344.382 cv
460.859 344.843 460.988 345.203 461.276 345.433 cv
461.55 345.678 462.083 345.865 462.86 346.009 cv
463.724 346.182 li
464.776 346.384 465.553 346.744 466.057 347.248 cv
466.561 347.766 466.82 348.443 466.82 349.292 cv
466.82 350.315 466.475 351.078 465.798 351.596 cv
465.107 352.115 464.113 352.374 462.803 352.374 cv
462.299 352.374 461.766 352.316 461.204 352.216 cv
460.643 352.115 460.067 351.956 459.476 351.726 cv
459.476 350.257 li
460.052 350.589 460.614 350.833 461.161 350.992 cv
461.708 351.164 462.256 351.236 462.803 351.236 cv
463.609 351.236 464.228 351.078 464.675 350.761 cv
465.107 350.444 465.337 349.998 465.337 349.393 cv
465.337 348.875 465.179 348.472 464.862 348.184 cv
464.545 347.896 464.027 347.68 463.307 347.536 cv
462.443 347.363 li
461.377 347.161 460.614 346.83 460.139 346.369 cv
459.664 345.923 459.433 345.304 459.433 344.497 cv
459.433 343.576 459.75 342.841 460.412 342.309 cv
461.06 341.776 461.968 341.502 463.12 341.502 cv
463.609 341.502 464.099 341.545 464.617 341.632 cv
465.121 341.718 465.64 341.862 466.187 342.035 cv
f
467.612 341.689 mo
469.124 341.689 li
472.033 346.009 li
474.928 341.689 li
476.454 341.689 li
472.739 347.19 li
472.739 352.187 li
471.313 352.187 li
471.313 347.19 li
467.612 341.689 li
f
484.129 342.035 mo
484.129 343.417 li
483.582 343.158 483.078 342.971 482.603 342.841 cv
482.113 342.726 481.652 342.654 481.22 342.654 cv
480.443 342.654 479.838 342.813 479.42 343.1 cv
479.003 343.403 478.801 343.835 478.801 344.382 cv
478.801 344.843 478.931 345.203 479.219 345.433 cv
479.492 345.678 480.025 345.865 480.803 346.009 cv
481.667 346.182 li
482.718 346.384 483.495 346.744 483.999 347.248 cv
484.503 347.766 484.763 348.443 484.763 349.292 cv
484.763 350.315 484.417 351.078 483.74 351.596 cv
483.049 352.115 482.055 352.374 480.745 352.374 cv
480.241 352.374 479.708 352.316 479.147 352.216 cv
478.585 352.115 478.009 351.956 477.419 351.726 cv
477.419 350.257 li
477.995 350.589 478.556 350.833 479.103 350.992 cv
479.651 351.164 480.198 351.236 480.745 351.236 cv
481.551 351.236 482.171 351.078 482.617 350.761 cv
483.049 350.444 483.279 349.998 483.279 349.393 cv
483.279 348.875 483.121 348.472 482.804 348.184 cv
482.487 347.896 481.969 347.68 481.249 347.536 cv
480.385 347.363 li
479.319 347.161 478.556 346.83 478.081 346.369 cv
477.606 345.923 477.375 345.304 477.375 344.497 cv
477.375 343.576 477.692 342.841 478.355 342.309 cv
479.003 341.776 479.91 341.502 481.062 341.502 cv
481.551 341.502 482.041 341.545 482.559 341.632 cv
483.063 341.718 483.582 341.862 484.129 342.035 cv
f
401.862 367.894 mo
422.022 367.894 li
.930816 .793027 0 0 cmyk
@
440.699 367.923 mo
440.699 371.767 li
442.974 371.767 li
443.737 371.767 444.299 371.609 444.673 371.292 cv
445.033 370.975 445.22 370.5 445.22 369.838 cv
445.22 369.19 445.033 368.715 444.673 368.398 cv
444.299 368.081 443.737 367.923 442.974 367.923 cv
440.699 367.923 li
440.699 363.603 mo
440.699 366.771 li
442.801 366.771 li
443.492 366.771 443.996 366.641 444.342 366.382 cv
444.687 366.123 444.86 365.734 444.86 365.187 cv
444.86 364.668 444.687 364.265 444.342 364.006 cv
443.996 363.747 443.492 363.603 442.801 363.603 cv
440.699 363.603 li
439.273 362.436 mo
442.902 362.436 li
443.982 362.436 444.817 362.667 445.407 363.113 cv
445.983 363.574 446.286 364.207 446.286 365.028 cv
446.286 365.676 446.127 366.195 445.825 366.569 cv
445.523 366.943 445.091 367.188 444.515 367.275 cv
445.206 367.433 445.753 367.75 446.142 368.225 cv
446.516 368.7 446.718 369.291 446.718 369.996 cv
446.718 370.947 446.387 371.667 445.753 372.171 cv
445.119 372.689 444.212 372.934 443.046 372.934 cv
439.273 372.934 li
439.273 362.436 li
1 /0 /CSD get_res sepcs
1 sep
f
455.833 368.671 mo
455.833 369.305 li
449.886 369.305 li
449.944 370.198 450.203 370.889 450.692 371.35 cv
451.168 371.811 451.83 372.041 452.694 372.041 cv
453.184 372.041 453.673 371.983 454.134 371.868 cv
454.595 371.753 455.07 371.566 455.531 371.307 cv
455.531 372.531 li
455.07 372.732 454.595 372.891 454.105 372.977 cv
453.616 373.063 453.112 373.121 452.622 373.121 cv
451.355 373.121 450.361 372.761 449.627 372.041 cv
448.892 371.321 448.532 370.327 448.532 369.075 cv
448.532 367.793 448.878 366.771 449.569 366.007 cv
450.26 365.259 451.211 364.87 452.392 364.87 cv
453.457 364.87 454.292 365.215 454.912 365.892 cv
455.516 366.583 455.833 367.505 455.833 368.671 cv
454.537 368.297 mo
454.523 367.591 454.321 367.03 453.947 366.598 cv
453.558 366.18 453.04 365.964 452.406 365.964 cv
451.686 365.964 451.11 366.18 450.678 366.583 cv
450.246 366.987 449.987 367.563 449.929 368.297 cv
454.537 368.297 li
f
461.536 368.974 mo
460.484 368.974 459.764 369.103 459.361 369.334 cv
458.958 369.579 458.756 369.982 458.756 370.558 cv
458.756 371.019 458.9 371.393 459.203 371.652 cv
459.505 371.926 459.923 372.055 460.441 372.055 cv
461.161 372.055 461.737 371.811 462.169 371.292 cv
462.601 370.788 462.817 370.111 462.817 369.262 cv
462.817 368.974 li
461.536 368.974 li
464.113 368.441 mo
464.113 372.934 li
462.817 372.934 li
462.817 371.739 li
462.515 372.228 462.14 372.574 461.708 372.79 cv
461.276 373.006 460.729 373.121 460.096 373.121 cv
459.289 373.121 458.641 372.905 458.166 372.459 cv
457.691 372.012 457.46 371.407 457.46 370.644 cv
457.46 369.766 457.748 369.103 458.353 368.643 cv
458.944 368.196 459.822 367.966 461.003 367.966 cv
462.817 367.966 li
462.817 367.836 li
462.817 367.246 462.616 366.785 462.227 366.454 cv
461.838 366.137 461.291 365.964 460.585 365.964 cv
460.124 365.964 459.692 366.022 459.26 366.137 cv
458.828 366.252 458.425 366.411 458.036 366.612 cv
458.036 365.417 li
458.497 365.244 458.958 365.1 459.404 365.014 cv
459.851 364.927 460.283 364.87 460.715 364.87 cv
461.852 364.87 462.702 365.172 463.264 365.763 cv
463.825 366.353 464.113 367.246 464.113 368.441 cv
f
472.912 366.569 mo
473.229 365.993 473.617 365.575 474.064 365.287 cv
474.51 365.014 475.043 364.87 475.662 364.87 cv
476.469 364.87 477.102 365.158 477.548 365.734 cv
477.995 366.31 478.225 367.131 478.225 368.182 cv
478.225 372.934 li
476.929 372.934 li
476.929 368.225 li
476.929 367.476 476.785 366.915 476.526 366.54 cv
476.253 366.18 475.849 365.993 475.302 365.993 cv
474.625 365.993 474.092 366.223 473.704 366.67 cv
473.315 367.116 473.128 367.721 473.128 368.484 cv
473.128 372.934 li
471.832 372.934 li
471.832 368.225 li
471.832 367.476 471.688 366.915 471.428 366.54 cv
471.155 366.18 470.737 365.993 470.19 365.993 cv
469.528 365.993 468.995 366.223 468.606 366.67 cv
468.217 367.116 468.03 367.721 468.03 368.484 cv
468.03 372.934 li
466.734 372.934 li
466.734 365.057 li
468.03 365.057 li
468.03 366.281 li
468.318 365.806 468.678 365.446 469.096 365.215 cv
469.499 364.985 469.988 364.87 470.565 364.87 cv
471.141 364.87 471.616 365.014 472.019 365.302 cv
472.422 365.59 472.71 366.022 472.912 366.569 cv
f
482.286 363.603 mo
482.286 371.767 li
484 371.767 li
485.44 371.767 486.505 371.451 487.182 370.788 cv
487.845 370.126 488.19 369.089 488.19 367.678 cv
488.19 366.267 487.845 365.244 487.182 364.582 cv
486.505 363.934 485.44 363.603 484 363.603 cv
482.286 363.603 li
480.861 362.436 mo
483.784 362.436 li
485.814 362.436 487.312 362.868 488.262 363.703 cv
489.213 364.553 489.688 365.878 489.688 367.678 cv
489.688 369.492 489.198 370.817 488.248 371.667 cv
487.297 372.516 485.8 372.934 483.784 372.934 cv
480.861 372.934 li
480.861 362.436 li
f
495.174 373.654 mo
494.8 374.575 494.44 375.195 494.094 375.483 cv
493.749 375.771 493.288 375.915 492.712 375.915 cv
491.675 375.915 li
491.675 374.835 li
492.438 374.835 li
492.784 374.835 493.057 374.748 493.259 374.575 cv
493.461 374.403 493.677 374.014 493.921 373.38 cv
494.152 372.804 li
490.969 365.057 li
492.337 365.057 li
494.8 371.22 li
497.262 365.057 li
498.63 365.057 li
495.174 373.654 li
f
506.968 368.182 mo
506.968 372.934 li
505.672 372.934 li
505.672 368.225 li
505.672 367.476 505.513 366.929 505.225 366.555 cv
504.937 366.18 504.505 365.993 503.929 365.993 cv
503.224 365.993 502.677 366.223 502.273 366.67 cv
501.87 367.116 501.669 367.721 501.669 368.484 cv
501.669 372.934 li
500.372 372.934 li
500.372 365.057 li
501.669 365.057 li
501.669 366.281 li
501.971 365.82 502.331 365.46 502.763 365.23 cv
503.181 364.999 503.67 364.87 504.217 364.87 cv
505.11 364.87 505.801 365.158 506.262 365.719 cv
506.723 366.281 506.968 367.102 506.968 368.182 cv
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
